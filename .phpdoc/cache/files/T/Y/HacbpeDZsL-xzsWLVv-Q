1688216226
waR3U4bTeM%3A15ea5fefee427aef61b7cb3fbbc91424-02e0e985d30551ae7b5889e05f3d2b6c
s:6568:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxNDp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBkb2NCbG9jayI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrIjo3OntzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAHN1bW1hcnkiO3M6NDA6IlRoaXMgZmlsZSBpcyBwYXJ0IG9mIHRoZSBDYXJib24gcGFja2FnZS4iO3M6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAZGVzY3JpcHRpb24iO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbiI6Mjp7czo1OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgBib2R5VGVtcGxhdGUiO3M6MTU4OiIoYykgQnJpYW4gTmVzYml0dCA8YnJpYW5AbmVzYm90LmNvbT4KCkZvciB0aGUgZnVsbCBjb3B5cmlnaHQgYW5kIGxpY2Vuc2UgaW5mb3JtYXRpb24sIHBsZWFzZSB2aWV3IHRoZSBMSUNFTlNFCmZpbGUgdGhhdCB3YXMgZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHNvdXJjZSBjb2RlLiI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawB0YWdzIjthOjA6e31zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGNvbnRleHQiO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb250ZXh0IjoyOntzOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXENvbnRleHQAbmFtZXNwYWNlIjtzOjA6IiI7czo1NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb250ZXh0AG5hbWVzcGFjZUFsaWFzZXMiO2E6MDp7fX1zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGxvY2F0aW9uIjtOO3M6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAaXNUZW1wbGF0ZVN0YXJ0IjtiOjA7czo0ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBpc1RlbXBsYXRlRW5kIjtiOjA7fXM6Mzk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAaGFzaCI7czozMjoiMDJlMGU5ODVkMzA1NTFhZTdiNTg4OWUwNWYzZDJiNmMiO3M6Mzk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAbmFtZSI7czo2OiJsYi5waHAiO3M6Mzk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAcGF0aCI7czo0MzoidmVuZG9yL25lc2JvdC9jYXJib24vc3JjL0NhcmJvbi9MYW5nL2xiLnBocCI7czo0MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBzb3VyY2UiO3M6Mjk5NjoiPD9waHAKCi8qKgogKiBUaGlzIGZpbGUgaXMgcGFydCBvZiB0aGUgQ2FyYm9uIHBhY2thZ2UuCiAqCiAqIChjKSBCcmlhbiBOZXNiaXR0IDxicmlhbkBuZXNib3QuY29tPgogKgogKiBGb3IgdGhlIGZ1bGwgY29weXJpZ2h0IGFuZCBsaWNlbnNlIGluZm9ybWF0aW9uLCBwbGVhc2UgdmlldyB0aGUgTElDRU5TRQogKiBmaWxlIHRoYXQgd2FzIGRpc3RyaWJ1dGVkIHdpdGggdGhpcyBzb3VyY2UgY29kZS4KICovCgovKgogKiBBdXRob3JzOgogKiAtIFBoaWxpcHBlIFZhdWNoZXIKICogLSBUc3V0b211IEt1cm9kYQogKiAtIGRhbi1ubAogKiAtIFNpbW9uIExlbG9ycmFpbiAoc2xlbG9ycmFpbikKICovCgp1c2UgQ2FyYm9uXENhcmJvbkludGVyZmFjZTsKCnJldHVybiBbCiAgICAneWVhcicgPT4gJzpjb3VudCBKb2VyJywKICAgICd5JyA9PiAnOmNvdW50SicsCiAgICAnbW9udGgnID0+ICc6Y291bnQgTW91bnR8OmNvdW50IE3DqWludCcsCiAgICAnbScgPT4gJzpjb3VudE1vJywKICAgICd3ZWVrJyA9PiAnOmNvdW50IFdvY2h8OmNvdW50IFdvY2hlbicsCiAgICAndycgPT4gJzpjb3VudFdvfDpjb3VudFdvJywKICAgICdkYXknID0+ICc6Y291bnQgRGFnfDpjb3VudCBEZWVnJywKICAgICdkJyA9PiAnOmNvdW50RCcsCiAgICAnaG91cicgPT4gJzpjb3VudCBTdG9ubnw6Y291bnQgU3Rvbm5lbicsCiAgICAnaCcgPT4gJzpjb3VudFN0bycsCiAgICAnbWludXRlJyA9PiAnOmNvdW50IE1pbnV0dHw6Y291bnQgTWludXR0ZW4nLAogICAgJ21pbicgPT4gJzpjb3VudE0nLAogICAgJ3NlY29uZCcgPT4gJzpjb3VudCBTZWtvbm58OmNvdW50IFNla29ubmVuJywKICAgICdzJyA9PiAnOmNvdW50U2VrJywKCiAgICAnYWdvJyA9PiAndmlydW4gOnRpbWUnLAogICAgJ2Zyb21fbm93JyA9PiAnYW4gOnRpbWUnLAogICAgJ2JlZm9yZScgPT4gJzp0aW1lIHZpcmRydW4nLAogICAgJ2FmdGVyJyA9PiAnOnRpbWUgZHVlcm5vJywKCiAgICAnZGlmZl90b2RheScgPT4gJ0hhdXQnLAogICAgJ2RpZmZfeWVzdGVyZGF5JyA9PiAnR8Orc2NodGVyJywKICAgICdkaWZmX3llc3RlcmRheV9yZWdleHAnID0+ICdHw6tzY2h0ZXIoPzpcXHMrdW0pPycsCiAgICAnZGlmZl90b21vcnJvdycgPT4gJ011ZXInLAogICAgJ2RpZmZfdG9tb3Jyb3dfcmVnZXhwJyA9PiAnTXVlcig/Olxccyt1bSk/JywKICAgICdkaWZmX3RvZGF5X3JlZ2V4cCcgPT4gJ0hhdXQoPzpcXHMrdW0pPycsCiAgICAnZm9ybWF0cycgPT4gWwogICAgICAgICdMVCcgPT4gJ0g6bW0gW0F1ZXJdJywKICAgICAgICAnTFRTJyA9PiAnSDptbTpzcyBbQXVlcl0nLAogICAgICAgICdMJyA9PiAnREQuTU0uWVlZWScsCiAgICAgICAgJ0xMJyA9PiAnRC4gTU1NTSBZWVlZJywKICAgICAgICAnTExMJyA9PiAnRC4gTU1NTSBZWVlZIEg6bW0gW0F1ZXJdJywKICAgICAgICAnTExMTCcgPT4gJ2RkZGQsIEQuIE1NTU0gWVlZWSBIOm1tIFtBdWVyXScsCiAgICBdLAoKICAgICdjYWxlbmRhcicgPT4gWwogICAgICAgICdzYW1lRGF5JyA9PiAnW0hhdXQgdW1dIExUJywKICAgICAgICAnbmV4dERheScgPT4gJ1tNdWVyIHVtXSBMVCcsCiAgICAgICAgJ25leHRXZWVrJyA9PiAnZGRkZCBbdW1dIExUJywKICAgICAgICAnbGFzdERheScgPT4gJ1tHw6tzY2h0ZXIgdW1dIExUJywKICAgICAgICAnbGFzdFdlZWsnID0+IGZ1bmN0aW9uIChDYXJib25JbnRlcmZhY2UgJGRhdGUpIHsKICAgICAgICAgICAgLy8gRGlmZmVyZW50IGRhdGUgc3RyaW5nIGZvciAnRMOrbnNjaGRlZycgKFR1ZXNkYXkpIGFuZCAnRG9ubmVzY2hkZWcnIChUaHVyc2RheSkgZHVlIHRvIHBob25vbG9naWNhbCBydWxlCiAgICAgICAgICAgIHN3aXRjaCAoJGRhdGUtPmRheU9mV2VlaykgewogICAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgICAgICAgIHJldHVybiAnW0xlc2NodGVuXSBkZGRkIFt1bV0gTFQnOwogICAgICAgICAgICAgICAgZGVmYXVsdDoKICAgICAgICAgICAgICAgICAgICByZXR1cm4gJ1tMZXNjaHRlXSBkZGRkIFt1bV0gTFQnOwogICAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICAnc2FtZUVsc2UnID0+ICdMJywKICAgIF0sCgogICAgJ21vbnRocycgPT4gWydKYW51YXInLCAnRmVicnVhcicsICdNw6RlcnonLCAnQWJyw6tsbCcsICdNZWUnLCAnSnVuaScsICdKdWxpJywgJ0F1Z3VzdCcsICdTZXB0ZW1iZXInLCAnT2t0b2JlcicsICdOb3ZlbWJlcicsICdEZXplbWJlciddLAogICAgJ21vbnRoc19zaG9ydCcgPT4gWydKYW4uJywgJ0ZlYnIuJywgJ01yei4nLCAnQWJyLicsICdNZWUnLCAnSnVuLicsICdKdWwuJywgJ0F1Zy4nLCAnU2VwdC4nLCAnT2t0LicsICdOb3YuJywgJ0Rlei4nXSwKICAgICd3ZWVrZGF5cycgPT4gWydTb25uZGVnJywgJ03DqWluZGVnJywgJ0TDq25zY2hkZWcnLCAnTcOrdHR3b2NoJywgJ0Rvbm5lc2NoZGVnJywgJ0ZyZWlkZWcnLCAnU2Ftc2NoZGVnJ10sCiAgICAnd2Vla2RheXNfc2hvcnQnID0+IFsnU28uJywgJ03DqS4nLCAnRMOrLicsICdNw6suJywgJ0RvLicsICdGci4nLCAnU2EuJ10sCiAgICAnd2Vla2RheXNfbWluJyA9PiBbJ1NvJywgJ03DqScsICdEw6snLCAnTcOrJywgJ0RvJywgJ0ZyJywgJ1NhJ10sCiAgICAnb3JkaW5hbCcgPT4gJzpudW1iZXIuJywKICAgICdmaXJzdF9kYXlfb2Zfd2VlaycgPT4gMSwKICAgICdkYXlfb2ZfZmlyc3Rfd2Vla19vZl95ZWFyJyA9PiA0LAogICAgJ2xpc3QnID0+IFsnLCAnLCAnIGFuICddLAogICAgJ21lcmlkaWVtJyA9PiBbJ21vaWVzJywgJ23Dq3R0ZXMnXSwKICAgICd3ZWVrZGF5c19zaG9ydF9zdGFuZGFsb25lJyA9PiBbJ1NvbicsICdNw6lpJywgJ0TDq24nLCAnTcOrdCcsICdEb24nLCAnRnJlJywgJ1NhbSddLAogICAgJ21vbnRoc19zaG9ydF9zdGFuZGFsb25lJyA9PiBbJ0phbicsICdGZWInLCAnTcOkZScsICdBYnInLCAnTWVlJywgJ0p1bicsICdKdWwnLCAnQXVnJywgJ1NlcCcsICdPa3QnLCAnTm92JywgJ0RleiddLApdOwoiO3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAbmFtZXNwYWNlcyI7YTowOnt9czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBpbmNsdWRlcyI7YTowOnt9czo0NDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBmdW5jdGlvbnMiO2E6MDp7fXM6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAY29uc3RhbnRzIjthOjA6e31zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGNsYXNzZXMiO2E6MDp7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAaW50ZXJmYWNlcyI7YTowOnt9czo0MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQB0cmFpdHMiO2E6MDp7fXM6NDA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAZW51bXMiO2E6MDp7fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAbWV0YWRhdGEiO2E6MDp7fX0=";