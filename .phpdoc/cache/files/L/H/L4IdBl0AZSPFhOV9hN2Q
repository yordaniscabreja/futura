1688216189
waR3U4bTeM%3Ade048cf30e70335e8739885ed5e89693-0eebe71252e771f91f1c9789539638e2
s:326076:"O:33:"phpDocumentor\Reflection\Php\File":14:{s:43:" phpDocumentor\Reflection\Php\File docBlock";N;s:39:" phpDocumentor\Reflection\Php\File hash";s:32:"0eebe71252e771f91f1c9789539638e2";s:39:" phpDocumentor\Reflection\Php\File name";s:8:"Text.php";s:39:" phpDocumentor\Reflection\Php\File path";s:55:"vendor/fakerphp/faker/src/Faker/Provider/ro_MD/Text.php";s:41:" phpDocumentor\Reflection\Php\File source";s:130730:"<?php

namespace Faker\Provider\ro_MD;

class Text extends \Faker\Provider\Text
{
    /**
     * From ro.wikisource.org
     *
     * Acest text este disponibil sub licența Creative Commons cu atribuire
     * și distribuire în condiții identice; pot exista și clauze suplimentare.
     * Vedeți detalii la Termenii de utilizare.
     *
     *
     * Title: Povestea lui Harap-Alb
     *
     * Author: Ion Creangă
     *
     * Posting Date: February 6, 2005
     * [Last updated: December 13, 2016]
     *
     * Language: Romanian
     *
     * @see     https://wikimediafoundation.org/wiki/Terms_of_Use/
     * @see    https://ro.wikisource.org/wiki/Povestea_lui_Harap-Alb
     *
     * @var string
     */
    protected static $baseText = <<<'EOT'
Amu cică era odată într-o țară un crai, care avea trei feciori.
Și craiul acela mai avea un frate mai mare, care era împărat
într-o altă țară, mai depărtată. Și împăratul, fratele craiului,
se numea Verde-împărat; și împăratul Verde nu avea feciori, ci
numai fete. Mulți ani trecură la mijloc de când acești frați mai
avură prilej a se întâlni amândoi. Iară verii, adică feciorii
craiului și fetele împăratului, nu se văzuse niciodată de când
erau ei. Și așa veni împrejurarea de nici împăratul Verde nu
cunoștea nepoții săi, nici craiul nepoatele sale: pentru că țara
în care împărățea fratele cel mai mare era tocmai la o margine a
pământului, și crăia istuilalt la o altă margine. Și apoi, pe
vremile acelea, mai toate țările erau bântuite de războaie
grozave, drumurile pe ape și pe uscat erau puțin cunoscute și
foarte încurcate și de aceea nu se putea călători așa de ușor și
fără primejdii ca în ziua de astăzi. Și cine apuca a se duce pe
atunci într-o parte a lumii adeseori dus rămânea până la moarte.

Dar ia să nu ne depărtăm cu vorba și să încep a depăna firul
poveștii.

Amu cică împăratul acela, aproape de bătrânețe, căzând la
zăcare, a scris către frăține-său craiului, să-i trimită grabnic
pe cel mai vrednic dintre nepoți, ca să-l lase împărat în locul
său după moartea sa. Craiul, primind cartea, îndată chemă
tustrei feciorii înaintea sa și le zise:

— Iaca ce-mi scrie frate-meu și moșul vostru. Care dintre voi se
simte destoinic a împărăți peste o țară așa de mare și bogată,
ca aceea, are voie din partea mea să se ducă, ca să împlinească
voința cea mai de pe urmă a moșului vostru.

Atunci feciorul cel mai mare ia îndrăzneală și zice :

— Tată, eu cred că mie mi se cuvine această cinste, pentru că
sunt cel mai mare dintre frați; de aceea te rog să-mi dai bani
de cheltuială, straie de primeneală, arme și cal de călărie, ca
să și pornesc, fără zăbavă.

— Bine, dragul tatei, dacă te bizuiești că-i putea răzbate până
acolo și crezi că ești în stare a cârmui și pe alții, alege-ți
un cal din herghelie, care-i vrea tu, ia-ți bani cât ți-or
trebui, haine care ți-or plăcea, arme care-i crede că-ți vin la
socoteală și mergi cu bine, fătul meu.

Atunci feciorul craiului își ia cele trebuitoare, sărută mâna
tătâne-său, primind carte de la dânsul către împăratul, zice
rămas bun fraților săi și apoi încalecă și pornește cu bucurie
spre împărăție.

Craiul însă, vrând să-l ispitească, tace molcum și, pe înserate,
se îmbracă pe ascuns într-o piele de urs, apoi încalecă pe cal,
iese înaintea fecioru-său pe altă cale și se bagă sub un pod. Și
când să treacă fiu-său pe acolo, numai iaca la capătul podului
îl și întâmpină un urs mornăind. Atunci calul fiului de crai
începe a sări în două picioare, forăind, și cât pe ce să
izbească pe stăpânu-său. Și fiul craiului, nemaiputând struni
calul și neîndrăznind a mai merge înainte, se întoarnă rușinat
înapoi la tatu-său. Până să ajungă el, craiul pe de altă parte
și ajunsese acasă, dăduse drumul calului, îndosise pielea cea de
urs și aștepta acum să vină fecioru-său. Și numai iaca îl și
vede venind repede, dar nu așa după cum se dusese.

— Da' ce-ai uitat, dragul tatei, de te-ai întors înapoi? zise
craiul cu mirare. Aista nu-i semn bun, după cât știu eu.

— De uitat, n-am uitat nimica, tată, dar ia, prin dreptul unui
pod, mi-a ieșit înainte un urs grozav, care m-a vârât în toți
spărieții. Și cu mare ce scăpând din labele lui, am găsit cu
cale să mă întorc la d-ta acasă decât să fiu prada fiarelor
sălbatice. Și de-acum înainte, ducă-se, din partea mea, cine
știe, că mie unuia nu-mi trebuie nici împărăție, nici nimica;
doar n-am a trăi cât lumea, ca să moștenesc pământul.

— Despre aceasta bine ai chitit-o, dragul tatei. Se vede lucru
că nici tu nu ești de împărat, nici împărăția pentru tine; și
decât să încurci numai așa lumea, mai bine să șezi departe, cum
zici, căci, mila Domnului: "Lac de-ar fi, broaște sunt destule".
Numai aș vrea să știu, cum rămâne cu moșu-tău. Așa-i că ne-am
încurcat în slăbăciune?

— Tată, zise atunci feciorul cel mijlociu, să mă duc eu, dacă
vrei.

— Ai toată voia de la mine, fătul meu, dar mare lucru să fie de
nu ți s-or tăia și ție cărările. Mai știi păcatul, poate să-ți
iasă înainte vreun iepure, ceva... și popâc! m-oi trezi cu tine
acasă, ca și cu frate-tău, ș-apoi atunci rușinea ta n-a fi
proastă. Dar dă, cearcă și tu, să vezi cum ți-a sluji norocul.
Vorba ceea: "Fiecare pentru sine, croitor de pâine". De-i
izbuti, bine-de-bine, iară de nu, au mai pățit și alți voinici
ca tine...

Atunci feciorul cel mijlociu, pregătindu-și cele trebuitoare și
primind și el carte din mâna tată-său către împăratul, își ia
ziua bună de la frați, și a doua zi pornește și el. Și merge, și
merge, până se înnoptează bine. Și când prin dreptul podului,
numai iaca și ursul: mor! mor! mor! Calul fiului de crai începe
atunci a forăi, a sări în două picioare și a da înapoi. Și fiul
craiului, văzând că nu-i lucru de șagă, se lasă și el de
împărăție și, cu rușinea lui, se întoarce înapoi la tată-său
acasă. Craiul, cum îl vede, zice:

— Ei, dragul tatei, așa-i că s-a împlinit vorba ceea: "Apără-mă
de găini, că de câini nu mă tem".

— Ce fel de vorbă-i asta, tată?! zise fiu-său rușinat; la d-ta
urșii se cheamă găini? Ba, ia acum cred eu frăține-meu, că așa
urs oștirea întreagă este în stare să o zdrumice... Încă mă mir
cum am scăpat cu viață; lehamite și de împărăție și de tot, că
doar, slavă Domnului, am ce mânca la casa d-tale.

— Ce mânca văd eu bine că ai, despre asta nu e vorbă, fătul meu,
zise craiul posomorât, dar ia spuneți-mi: rușinea unde o puneți?
Din trei feciori câți are tata, nici unul să nu fie bun de
nimica?!

Apoi, drept să vă spun, că atunci degeaba mai stricați mâncarea,
dragii mei... Să umblați numai așa, frunza frăsinelului, toată
viața voastră și să vă lăudați că sunteți feciori de crai, asta
nu miroase a nas de om... Cum văd eu, frate-meu se poate culca
pe o ureche din partea voastră; la sfântul Așteaptă s-a împlini
dorința lui. Halal de nepoți ce are! Vorba ceea:

La plăcinte, înainte
Și la război, înapoi.
Fiul craiului cel mai mic, făcându-se atunci roș cum îi gotca,
iese afară în grădină și începe a plânge în inima sa, lovit
fiind în adâncul sufletului de apăsătoarele cuvinte ale
părintelui său. Și cum sta el pe gânduri și nu se dumerea ce să
facă pentru a scăpa de rușine, numai iaca se trezește dinaintea
lui cu o babă gârbovită de bătrânețe, care umbla după milostenie.

— Da' ce stai așa pe gânduri, luminate crăișor? zise baba;
alungă mâhnirea din inima ta, căci norocul îți râde din toate
părțile și nu ai de ce fi supărat. Ia, mai bine miluiește baba
cu ceva.

— Ia lasă-mă-ncolo, mătușă, nu mă supăra, zise fiul craiului;
acum am altele la capul meu.

— Fecior de crai, vedea-te-aș împărat! Spune babei ce te
chinuiește; că, de unde știi, poate să-ți ajute și ea ceva.

— Mătușă, știi ce? Una-i una și două-s mai multe; lasă-mă-n
pace, că nu-mi văd lumea înaintea ochilor de necaz.

— Luminate crăișor, să nu bănuiești, dar nu te iuți așa de tare,
că nu știi de unde-ți poate veni ajutor.

— Ce vorbești în dodii, mătușă? Tocmai de la una ca d-ta ți-ai
găsit să aștept eu ajutor?

— Poate ți-i deșanț de una ca aceasta? zise baba. Hei, luminate
crăișor! Cel-de-sus varsă darul său peste cei neputincioși; se
vede că așa place sfinției-sale. Nu căuta că mă vezi gârbovă și
stremțuroasă, dar, prin puterea ce-mi este dată, știu dinainte
ceea ce au de gând să izvodească puternicii pământului și
adeseori râd cu hohot de nepriceperea și slăbiciunea lor. Așa-i
că nu-ți vine a crede, dar să te ferească Dumnezeu de ispită!
Căci multe au mai văzut ochii mei de-atâta amar de veacuri câte
port pe umerii aceștia. Of! crăișorule! crede-mă, că să aibi tu
puterea mea, ai vântura țările și mările, pământul l-ai da de-a
dura, lumea aceasta ai purta-o, uite așa, pe degete, și toate ar
fi după gândul tău. Dar uite ce vorbește gârbova și
neputincioasa! Iartă-mă, Doamne, că nu știu ce mi-a ieșit din
gură! Luminate crăișor, miluiește baba cu ceva!

Fiul craiului, fermecat de vorbele babei, scoate atunci un ban
și zice:

— Ține, mătușă, de la mine puțin și de la Dumnezeu mult.

— De unde dai, milostivul Dumnezeu să-ți dea, zise baba, și mult
să te înzilească, luminate crăișor, că mare norocire te
așteaptă. Puțin mai este, și ai să ajungi împărat, care n-a mai
stat altul pe fața pământului așa de iubit, de slăvit și de
puternic. Acum, luminate crăișor, ca să vezi cât poate să-ți
ajute milostenia, stai liniștit, uită-te drept în ochii mei și
ascultă cu luare-aminte ce ți-oi spune: du-te la tată-tău și
cere să-ți dea calul, armele și hainele cu care a fost el mire,
și atunci ai să te poți duce unde n-au putut merge frații tăi;
pentru că ție a fost scris de sus să-ți fie dată această cinste.
Tatu-tău s-a împotrivi și n-a vrea să te lase, dar tu stăruiește
pe lângă dânsul cu rugăminte, că ai să-l îndupleci. Hainele
despre care ți-am vorbit sunt vechi și ponosite, și armele
ruginite, iară calul ai să-l poți alege punând în mijlocul
hergheliei o tavà plină cu jăratic, și care dintre cai a veni la
jăratic să mănânce, acela are să te ducă la împărăție și are să
te scape din multe primejdii. Ține minte ce-ți spun eu, că poate
să ne mai întâlnim la vrun capăt de lume: căci deal cu deal se
ajunge, dar încă om cu om!

Și pe când vorbea baba aceste, o vede învăluită într-un hobot
alb, ridicându-se în văzduh, apoi înălțându-se tot mai sus, și
după aceea n-o mai zări defel. Atunci o înfiorare cuprinde pe
fiul craiului, rămânând uimit de spaimă și mirare, dar pe urmă,
venindu-i inima la loc și plin de încredere în sine că va izbuti
la ceea ce gândea, se înfățișază înaintea tată-său, zicând:

— Dă-mi voie ca să mă duc și eu pe urma fraților mei, nu de
alta, dar ca să-mi încerc norocul. Și ori oi putea izbuti, ori
nu, dar îți făgăduiesc dinainte că, odată pornit din casa
d-tale, înapoi nu m-oi mai întoarce, să știu bine că m-oi
întâlni și cu moartea în cale.

— Lucru negândit, dragul tatei, să aud așa vorbe tocmai din gura
ta, zise craiul. Frații tăi au dovedit că nu au inimă
într-înșii, și din partea lor mi-am luat toată nădejdea. Doar tu
să fii mai viteaz, dar parcă tot nu-mi vine a crede. Însă, dacă
vrei și vrei numaidecât să te duci, eu nu te opresc, dar mi-i nu
cumva să te întâlnești cu scârba în drum și să dai și tu cinstea
pe rușine, c-apoi atunci curat îți spun că nu mai ai ce căuta la
casa mea.

— Apoi dă, tată, omul e dator să se încerce. Am să pornesc și eu
într-un noroc și cum a da Dumnezeu! Numai, te rog, dă-mi calul,
armele și hainele cu care ai fost d-ta mire, ca să mă pot duce.

Craiul, auzind aceasta, parcă nu i-a prea venit la socoteală și,
încrețind din sprâncene, a zis:

— Hei, hei! dragul tatei, cu vorba aceasta mi-ai adus aminte de
cântecul cela:

Voinic tânăr, cal bătrân,
Greu se-ngăduie la drum!
D-apoi calul meu de pe atunci cine mai știe unde i-or fi
putrezind ciolanele! Că doar nu era să trăiască un veac de om!
Cine ți-a vârât în cap și una ca aceasta, acela încă-i unul...
Ori vorba ceea: Pesemne umbli după cai morți să le iei
potcoavele.

— Tată, atâta cer și eu de la d-ta. Acum, ori c-a fi trăind
calul, ori că n-a fi trăind, aceasta mă privește pe mine; numai
vreau să știu dacă mi-l dai ori ba.

— Din partea mea, dat să-ți fie, dragul tatei, dar mi-i de-a
mirarea de unde ai să-l iei, dacă n-are ființă pe lume.

— Despre aceasta nu mă plâng eu, tată, bine că mi l-ai dat; de
unde-a fi, de unde n-a fi, dacă l-oi găsi, al meu să fie.

Și atunci, odată se suie în pod și coboară de-acolo un căpăstru,
un frâu, un bici și o șa, toate colbăite, sfarogite și vechi ca
pământul. Apoi mai scoate dintr-un gherghiriu niște straie
foarte vechi, un arc, niște săgeți, un paloș și un buzdugan,
toate pline de rugină, și se apucă de le grijește bine și le
pune deoparte. Pe urmă umple o tava cu jăratic, se duce cu dânsa
la herghelie și o pune jos între cai. Și atunci, numai iaca ce
iese din mijlocul hergheliei o răpciugă de cal, grebănos,
dupuros și slab, de-i numărai coastele; și venind de-a dreptul
la tava, apucă o gură de jăratic. Fiul craiului îi și trage
atunci cu frâul în cap, zicând:

— Ghijoagă urâcioasă ce ești! din toți caii, tocmai tu te-ai
găsit să mănânci jăratic? De te-a împinge păcatul să mai vii o
dată, vai de steaua ta are să fie!

Apoi începe a purta caii încolo și încoace, și numai iaca
slăbătura cea de cal iar se repede și apucă o gură de jăratic.
Fiul craiului îi mai trage și atunci un frâu în cap, cât ce
poate, și apoi iar începe a purta caii de colo până colo, să
vadă, nu cumva a veni alt cal să mănânce jăratic. Și numai iaca,
și a treia oară, tot gloaba cea de cal vine și începe a mânca la
jăratic, de n-a mai rămas. Atunci fiul craiului, mânios, îi mai
trage un frâu, iar cât ce poate, apoi îl prinde în căpăstru și,
punându-i frâul în cap, zice în gândul său: "Să-l iau, ori să-i
dau drumul? Mă tem că m-oi face de râs. Decât cu așa cal, mai
bine pedestru".

Și cum sta el în cumpene, să-l ia, să nu-l ia, calul se și
scutură de trei ori, și îndată rămâne cu părul lins-prelins și
tânăr ca un tretin, de nu era alt mânzoc mai frumos în toată
herghelia. Și apoi, uitându-se țintă în ochii fiului de crai,
zice:

— Sui pe mine, stăpâne, și ține-te bine! Fiul craiului,
punându-i zabala în gură, încalecă, și atunci calul odată zboară
cu dânsul până la nouri și apoi se lasă în jos ca o săgeată.
După aceea mai zboară încă o dată până la lună și iar se lasă în
jos mai iute decât fulgerul. Și unde nu mai zboară și a treia
oară până la soare și, când se lasă jos, întreabă:

— Ei, stăpâne, cum ți se pare? Gândit-ai vrodată că ai să
ajungi: soarele cu picioarele, luna cu mâna și prin nouri să
cauți cununa?

— Cum să mi se pară, dragul meu tovarăș? Ia, m-ai băgat în toate
grozile morții, căci, cuprins de amețeală, nu mai știam unde mă
găsesc și cât pe ce erai să mă prăpădești.

— Ia, așa am amețit și eu, stăpâne, când mi-ai dat cu frâul în
cap, să mă prăpădești, și cu asta am vrut să-mi răstorc cele
trei lovituri. Vorba ceea: una pentru alta. Acum cred că mă
cunoști și de urât și de frumos, și de bătrân și de tânăr, și de
slab și de puternic; de-aceea mă fac iar cum m-ai văzut în
herghelie, și de-acum înainte sunt gata să te întovărășesc
oriunde mi-i porunci, stăpâne. Numai să-mi spui dinainte cum să
te duc: ca vântul ori ca gândul?

— De mi-i duce ca gândul, tu mi-i prăpădi, iar de mi-i duce ca
vântul, tu mi-i folosi, căluțul meu, zise fiul craiului.

— Bine, stăpâne. Acum sui pe mine fără grijă și hai să te duc
unde vrei.

Fiul craiului, încălecând, îl netezește pe coamă și zice: — Hai,
căluțul meu! Atunci calul zboară lin ca vântul, și când vântul a
aburit, iaca și ei la crai în ogradă au sosit.

— Bun sosit la noi, voinice! zise craiul, cam cu jumătate de
gură. Dar aista cal ți l-ai ales?...

— Apoi dă, tată, cum a dat târgul și norocul; am de trecut prin
multe locuri și nu vreau să mă ia oamenii la ochi. M-oi duce și
eu cât călare, cât pe jos, cum oi putea.

Și zicând aceste, pune tarnița pe cal, anină armele la oblânc,
își ia merinde și bani de ajuns, schimburi în desagi și o ploscă
plină cu apă. Apoi sărută mâna tată-său, primind carte de la
dânsul către împăratul, zice rămas bun fraților săi și a treia
zi către seară pornește și el, mergând din pasul calului. Și
merge el, și merge, până se înnoptează bine. Și, prin dreptul
podului, numai iaca îi iese și lui ursul înainte, mornăind
înfricoșat. Calul atunci dă năvală asupra ursului, și fiul
craiului, ridicând buzduganul să dea, numai iaca ce aude glas de
om zicând:

— Dragul tatei, nu da, că eu sunt. Atunci fiul craiului
descalecă, și tată-său, cuprinzându-l în brațe, îl sărută și-i
zice:

— Fătul meu, bun tovarăș ți-ai ales; de te-a învățat cineva,
bine ți-a priit, iară de-ai făcut-o din capul tău, bun cap ai
avut. Mergi de-acum tot înainte, că tu ești vrednic de împărat.
Numai ține minte sfatul ce-ți dau: în călătoria ta ai să ai
trebuință și de răi, și de buni, dar să te ferești de omul roș,
iară mai ales de cel spân, cât îi putea; să n-ai de-a face cu
dânșii, căci sunt foarte șugubeți. Și, la toată întâmplarea,
calul, tovarășul tău, te-a mai sfătui și el ce ai să faci, că de
multe primejdii m-a scăpat și pe mine în tinerețile mele! Na-ți
acum și pielea asta de urs, că ți-a prinde bine vreodată.

Apoi, dezmierdând calul, îi mai sărută de câteva ori pe amândoi
și le zice:

— Mergeți în pace, dragii mei. De-acum înainte, Dumnezeu știe
când ne-om mai vedea!...

Fiul craiului atunci încalecă, și calul, scuturându-se, mai
arată-se o dată tânăr, cum îi plăcea craiului, apoi face o
săritură înapoi și una înainte și se cam mai duc la împărăție,
Dumnezeu să ne ție, că cuvântul din poveste, înainte mult mai
este. Și merg ei o zi, merg două, și merg patruzeci și nouă,
până ce de la o vreme le intră calea în codru și atunci numai
iaca ce le iese înainte un om spân și zice cu îndrăzneală fiului
de crai:

— Bun întâlnișul, voinice! Nu ai trebuință de slugă la drum?
Prin locurile iestea e cam greu de călătorit singur; nu cumva
să-ți iasă vro dihanie ceva înainte și să-ți scurteze cărările.
Eu cunosc bine pe-aici, și poate mai încolo să ai nevoie de unul
ca mine.

— Poate să am, poate să n-am, zise fiul craiului, uitându-se
țintă în ochii Spânului, dar acum deodată mă las în voia
întâmplării, și apoi, dând pinteni calului, pornește.

Mai merge el înainte prin codru cât merge, și, la o strâmtoare,
numai iaca ce Spânul iar îi iese înainte, prefăcut în alte
straie, și zice cu glas subțiratic și necunoscut:

— Bună calea, drumețule! — Bună să-ți fie inima, cum ți-i
căutătura, zise fiul craiului. — Cât despre inima mea, s-o dea
Dumnezeu oricui, zise Spânul oftând... Numai ce folos? Omul bun
n-are noroc; asta-i știută; rogu-te, să nu-ți fie cu supărare,
drumețule, dar fiindcă a venit vorba de-așa, îți spun, ca la un
frate, că din cruda copilărie slujesc prin străini, și încaltea
nu mi-ar fi ciudă, când n-aș vra să mă dau la treabă, căci cu
munca m-am trezit. Dar așa, muncesc, muncesc, și nu s-alege
nimica de mine; pentru că tot de stăpâni calici mi-am avut
parte. Și vorba ceea: La calic slujești, calic rămâi. Când aș da
odată peste un stăpân cum gândesc eu, n-aș ști ce să fac să nu-l
smintesc. Nu cumva ai trebuință de slugă, voinice? Cum te văd,
sameni a avea seu la rărunchi. De ce te scumpești pentru nimica
toată și nu-ți iei o slugă vrednică, ca să-ți fie mână de ajutor
la drum? Locurile aiestea sunt șugubețe; de unde știi cum vine
întâmplarea, și, Doamne ferește, să nu-ți cadă greu singur.

— Acum deodată încă tot nu, zise fiul craiului cu mâna pe
buzdugan; m-oi mai sluji și eu singur, cum oi putea, și dând iar
pinteni calului, pornește mai repede.

Și mergând el tot înainte prin codri întunecoși, de la un loc se
închide calea și încep a i se încurca cărările, încât nu se mai
pricepe fiul craiului acum încotro să apuce și pe unde să meargă.

— Ptiu, drace! iaca în ce încurcătură am intrat! Asta-i mai rău
decât poftim la masă, zise el. Nici tu sat, nici tu târg, nici
tu nimica. De ce mergi înainte, numai peste pustietăți dai;
parcă a pierit sămânța omenească de pe fața pământului. Îmi pare
rău că n-am luat măcar spânul cel de-al doilea cu mine. Dacă s-a
aruncat în partea mâne-sa, ce-i vinovat el? Tata așa a zis, însă
la mare nevoie ce-i de făcut? vorba ceea: Rău-i cu rău, dar e
mai rău făr' de rău. Și tot horhăind el când pe o cărare, când
pe un drum părăsit, numai iaca ce iar îi iese Spânul înainte,
îmbrăcat altfel și călare pe un cal frumos, și, prefăcându-și
glasul, începe a căina pe fiul craiului, zicând:

— Sărmane omule, rău drum ai apucat! Se vede că ești străin și
nu cunoști locurile pe aici. Ai avut mare noroc de mine, de n-ai
apucat a coborî priporul ista, că erai prăpădit. Ia, colo
devale, în înfundătura ceea, un taur grozav la mulți bezmetici
le-a curmat zilele. Și eu, mai deunăzi, cât mă vezi de voinic,
de-abia am scăpat de dânsul, ca prin urechile acului.
Întoarce-te înapoi, ori, dacă ai de dus înainte, ia-ți un ajutor
pe cineva. Chiar și eu m-aș tocmi la d-ta, dacă ți-a fi cu
plăcere.

— Așa ar trebui să urmez, om bun, zise fiul craiului, dar ți-oi
spune drept: tata mi-a dat în grijă, când am pornit de-acasă, ca
să mă feresc de omul roș, iară mai ales de cel spân, cât oi
putea; să n-am de a face cu dânșii nici în clin, nici în mînecă;
și dacă n-ai fi spân, bucuros te-aș tocmi.

— Hei, hei! călătorule. Dacă ți-i vorba de-așa, ai să-ți rupi
ciochinele umblând și tot n-ai să găsești slugă cum cauți d-ta,
că pe-aici sunt numai oameni spâni. Ș-apoi, când este la
adicălea, te-aș întreba: ca' ce fel de zăticneală ai putea să
întâmpini din pricina asta? Pesemne n-ai auzit vorba ceea: că de
păr și de coate-goale nu se plânge nimene. Și când nu sunt ochi
negri, săruți și albaștri! Așa și d-ta: mulțumește lui Dumnezeu
că m-ai găsit și tocmește-mă. Și dacă-i apuca odată a te
deprinde cu mine, știu bine că n-am să pot scăpa ușor de d-ta,
căci așa sunt eu în felul meu, știu una și bună: să-mi slujesc
stăpânul cu dreptate. Hai, nu mai sta la îndoială, că mă tem să
nu ne-apuce noaptea pe aici. Și când ai avea încaltea un cal
bun, calea-valea, dar cu smârțogul ista îți duc vergile.

— Apoi dă, Spânule, nu știu cum să fac, zise fiul craiului. Din
copilăria mea sunt deprins a asculta de tată și, tocmindu-te pe
tine, parcă-mi vine nu știu cum. Dar, fiindcă mi-au mai ieșit
până acum înainte încă doi spâni, și cu tine al treilea, apoi
mai-mi vine a crede că asta-i țara spânilor și n-am încotro;
mort-copt, trebuie să te iau cu mine, dacă zici că știi bine
locurile pe aici.

Și, din două vorbe, fiul craiului îl tocmește și după aceea
pornesc împreună să iasă la drum, pe unde arată Spânul. Și
mergând ei o bucată bună, Spânul se preface că-i e sete și cere
plosca cu apă de la stăpânu-său. Fiul craiului i-o dă, și
Spânul, cum o pune la gură, pe loc o și ia, oțărându-se, și
varsă toată apa dintr-însa. Fiul craiului zice atunci supărat:

— Dar bine, Spânule, de ce te apuci? Nu vezi că pe aici e mare
lipsă de apă? Și pe arșița asta o să ne uscăm de sete.

— Să avem iertare, stăpâne! Apa era bâhlită și ne-am fi putut
bolnăvi. Cât despre apa bună, nu vă îngrijiți; acuș avem să dăm
peste o fântână cu apă dulce și rece ca gheața. Acolo vom poposi
puțin, oi clătări plosca bine ș-oi umple-o cu apă proaspătă, ca
să avem la drum, căci mai încolo nu prea sunt fântâni, și, din
partea apei, mi se pare că i-om duce dorul. Și cârnind pe o
cărare, mai merg ei oleacă înainte, până ce ajung într-o poiană
și numai iaca ce dau de o fântână cu ghizdele de stejar și cu un
capac deschis în lături. Fântâna era adâncă și nu avea nici
roată, nici cumpână, ci numai o scară de coborât până la apă.

— Ei, ei! Spânule, acum să te văd cât ești de vrednic, zise fiul
craiului. Spânul atunci zâmbește puțin și, coborându-se în
fântână, umple întâi plosca și o pune la șold. Apoi, mai stând
acolo în fund pe scară, aproape de fața apei, zice:

— Ei, da' ce răcoare-i aici! "Chima răului pe malul pârăului!"
Îmi vine să nu mai ies afară. Dumnezeu să ușureze păcatele celui
cu fântâna, că bun lucru a mai făcut. Pe arșițele ieste, o
răcoreală ca asta mult plătește!

Mai șede el acolo puțin și apoi iese afară, zicând: — Doamne,
stăpâne, nu știi cât mă simțesc de ușor; parcă îmi vine să zbor,
nu altăceva! Ia vâră-te și d-ta oleacă, să vezi cum ai să te
răcorești; așa are să-ți vină de îndemână după asta, de are să
ți se pară că ești ușor cum îi pana...

Fiul craiului, boboc în felul său la trebi de aieste, se
potrivește Spânului și se bagă în fântână, fără să-i trăsnească
prin minte ce i se poate întâmpla. Și cum sta și el acolo de se
răcorea, Spânul face tranc! capacul pe gura fântânii, apoi se
suie deasupra lui și zice cu glas răutăcios:

— Alelei! fecior de om viclean ce te găsești; tocmai de ceea ce
te-ai păzit n-ai scăpat. Ei, că bine mi te-am căptușit! Acum
să-mi spui tu cine ești, de unde vii și încotro te duci, că, de
nu, acolo îți putrezesc ciolanele!

Fiul craiului ce era să facă? Îi spune cu de-amănuntul, căci,
dă, care om nu ține la viață înainte de toate?

— Bine, atâta am vrut să aflu din gura ta, pui de viperă ce
mi-ai fost, zice atunci Spânul: numai cată să fie așa, că, de
te-oi prinde cu oca mică, greu are să-ți cadă. Chiar acum aș
putea să te omor, în voia cea bună, dar mi-i milă de tinerețile
tale... Dacă vrei să mai vezi soarele cu ochii și să mai calci
pe iarbă verde, atunci jură-mi-te pe ascuțișul paloșului tău că
mi-i da ascultare și supunere întru toate, chiar și-n foc de
ți-aș zice să te arunci. Și, de azi înainte, eu o să fiu în
locul tău nepotul împăratului, despre care mi-ai vorbit, iară tu
— sluga mea; și atâta vreme să ai a mă sluji, până când îi muri
și iar îi învia. Și oriunde vei merge cu mine, nu care cumva să
bleștești din gură către cineva despre ceea ce a urmat între
noi, că te-am șters de pe fața pământului. Îți place așa să mai
trăiești, bine-de-bine; iară de nu, spune-mi verde în ochi, ca
să știu ce leac trebuie să-ți fac...

Fiul craiului, văzându-se prins în clește și fără nici o putere,
îi jură credință și supunere întru toate, lăsându-se în știrea
lui Dumnezeu, cum a vrea el să facă. Atunci Spânul pune mâna pe
cartea, pe banii și pe armele fiului de crai și le ia la sine;
apoi îl scoate din fântână și-i dă paloșul să-l sărute, ca semn
de pecetluire a jurământului, zicând:

— De-acum înainte să știi că te cheamă Harap-Alb; aista ți-i
numele, și altul nu.

După aceasta încalecă, fiecare pe calul său, și pornesc, Spânul
înainte, ca stăpân, Harap-Alb în urmă, ca slugă, mergând spre
împărăție, Dumnezeu să ne ție, că cuvântul din poveste, înainte
mult mai este.

Și merg ei, și merg, cale lungă să le-ajungă, trecând peste nouă
mări, peste nouă țări și peste nouă ape mari, și într-o târzie
vreme ajung la împărăție.

Și cum ajung, Spânul se înfățișază înaintea împăratului cu carte
din partea craiului. Și împăratul Verde, citind cartea, arde de
bucurie că i-a venit nepotul, și pe dată îl și face cunoscut
curții și fetelor sale, care îl primesc cu toată cinstea
cuvenită unui fiu de crai și moștenitor al împăratului.

Atunci Spânul, văzând că i s-au prins minciunile de bine, cheamă
la sine pe Harap-Alb și-i zice cu asprime:

— Tu să șezi la grajd nedezlipit și să îngrijești de calul meu
ca de ochii din cap, că de-oi veni pe-acolo și n-oi găsi trebile
făcute după plac, vai de pielea ta are să fie. Dar până atunci,
na-ți o palmă, ca să ții minte ce ți-am spus. Bagat-ai în cap
vorbele mele?

— Da, stăpâne, zise Harap-Alb, lăsând ochii în jos. Și, ieșind,
pornește la grajd. Cu asta a voit Spânul să-și arate arama și să
facă pe HarapAlb ca să-i ia și mai mult frica.

Fetele împăratului întâmplându-se de față când a lovit Spânul pe
Harap-Alb, li s-a făcut milă de dânsul și au zis Spânului cu
binișorul:

— Vere, nu faci bine ceea ce faci. Dacă este că a lăsat Dumnezeu
să fim mari peste alții, ar trebui să avem milă de dânșii, că și
ei, sărmanii, sunt oameni!

— Hei, dragele mele vere, zice Spânul cu viclenia lui
obicinuită; d-voastră încă nu știți ce-i pe lume. Dacă
dobitoacele n-ar fi fost înfrânate, de demult ar fi sfâșiat pe
om. Și trebuie să știți că și între oameni cea mai mare parte
sunt dobitoace, care trebuiesc ținuți din frâu, dacă ți-i voia
să faci treabă cu dânșii.

Ei, apoi... zi că nu-i lumea de-apoi! Să te ferească Dumnezeu
când prinde mămăliga coajă. Vorba ceea:

Dă-mi, Doamne, ce n-am avut,
Să mă mier ce m-a găsit.
Fetele atunci au luat altă vorbă, dar din inima lor nu s-a șters
purtarea necuviincioasă a Spânului, cu toate îndreptările și
înrudirea lui, pentru că bunătatea nu are de-a face cu răutatea.
Vorba ceea:

Vița-de-vie, tot în vie,
Iară vița-de-boz, tot răgoz.
Și din ceasul acela au început a vorbi ele înde ele, că Spânul
defel nu samănă în partea lor, nici la chip, nici la bunătate;
și că Harap-Alb, sluga lui, are o înfățișare mult mai plăcută și
seamănă a fi mult mai omenos. Pesemne inima le spunea că Spânul
nu le este văr, și de aceea nu-l puteau mistui. Așa îl urâse ele
de tare acum, că, dacă ar fi fost în banii lor, s-ar fi lepădat
de Spân ca de Ucigă-l-crucea. Dar nu aveau ce se face de
împăratul, ca să nu-i aducă supărare.

Amu, într-una din zile, cum ședea Spânul la ospăț împreună cu
moșu-său, cu verele sale și cu alții, câți se întâmplase, li
s-au adus mai la urmă în masă și niște sălăți foarte minunate.
Atunci împăratul zice Spânului :

— Nepoate, mai mâncat-ai sălăți de aceste de când ești? — Ba nu,
moșule, zice Spânul; tocmai eram să vă întreb de unde le aveți,
că tare-s bune!... O haraba întreagă aș fi în stare să mănânc,
și parcă tot nu m-aș sătura.

— Te crede moșul, nepoate, dar când ai ști cu ce greutate se
capătă! pentru că numai în Grădina Ursului, dacă-i fi auzit de
dânsa, se află sălăți de aceste, și mai rar om care să poată lua
dintr-însele și să scape cu viață. Între toți oamenii din
împărăția mea, numai un pădurar se bizuiește la treaba asta. Și
acela, el știe ce face, ce drege, de-mi aduce din când în când
așa, câte puține, de poftă.

Spânul, voind să piardă acum pe Harap-Alb cu orice preț, zise
împăratului:

— Doamne, moșule, de nu mi-a aduce sluga mea sălăți de aceste și
din piatra seacă, mare lucru să fie!

— Ce vorbești, nepoate! zise împăratul; unul ca dânsul, și încă
necunoscător de locurile acestea, cum crezi că ar putea face
această slujbă? Doar de ți-i greu de viața lui.

— Ia las', moșule, nu-i duce grija; pun rămășag că are să-mi
aducă sălăți întocmai ca aceste, și încă multe, că știu eu ce
poate el.

Ș-odată cheamă Spânul pe Harap-Alb și-i zice răstit: — Acum
degrabă să te duci cum îi ști tu și să-mi aduci sălăți de aceste
din Grădina Ursului. Hai, ieși repede și pornește, că nu-i vreme
de pierdut. Dar nu cumva să faci de altfel, că nici în borta
șoarecului nu ești scăpat de mine!

Harap-Alb iese mâhnit, se duce în grajd și începe a-și netezi
calul pe coamă, zicând:

— Ei, căluțul meu, când ai ști tu în ce necaz am intrat! Sfânt
să fie rostul tătâne-meu, că bine m-a învățat! Așa-i că, dacă
n-am ținut seamă de vorbele lui, am ajuns slugă la dârloagă și
acum, vrând-nevrând, trebuie s-ascult, că mi-i capul în
primejdie?

— Stăpâne, zise atunci calul; de-acum înainte, ori cu capul de
piatră, ori cu piatra de cap, tot atâta-i: fii odată bărbat și
nu-ți face voie rea. Încalecă pe mine și hai! Știu eu unde te-oi
duce, și mare-i Dumnezeu, ne-a scăpa el și din aceasta!

Harap-Alb, mai prinzând oleacă la inimă, încalecă și se lasă în
voia calului, unde vrea el să-l ducă.

Atunci calul pornește la pas, până ce iese mai încolo, ca să
nu-i vadă nimene. Apoi își arată puterile sale, zicând:

— Stăpâne, ține-te bine pe mine, că am să zbor lin ca vântul, să
cutreierăm pământul. Mare-i Dumnezeu și meșteru-i dracul.
Helbet! vom putea veni de hac și Spânului celuia, nu-i e vremea
trecută.

Și odată zboară calul cu Harap-Alb până la nouri; apoi o ia de-a
curmezișul pământului: pe deasupra codrilor, peste vârful
munților, peste apa mărilor și după aceea se lasă încet- încet
într-un ostrov mândru din mijlocul unei mări, lângă o căsuță
singuratică, pe care era crescut niște mușchi pletos de o podină
de gros, moale ca mătasa și verde ca buraticul.

Atunci Harap-Alb descalecă, și spre mai mare mirarea lui, numai
iaca îl întâmpină în pragul ușii cerșetoarea căreia îi dăduse el
un ban de pomană, înainte de pornirea lui de acasă.

— Ei, Harap-Alb, așa-i că ai venit la vorbele mele, că deal cu
deal se ajunge, dar încă om cu om? Află acum că eu sunt Sfânta
Duminică și știu ce nevoie te-a adus pe la mine. Spânul vrea
să-ți răpună capul cu orice chip și de-aceea te-a trimis să-i
aduci sălăți din Grădina Ursului, dar i-or da ele odată pe
nas... Rămâi aici în astă-noapte, ca să văd ce-i de făcut.

Harap-Alb rămâne bucuros, mulțumind Sfintei Duminici pentru buna
găzduire și îngrijirea ce are de el.

— Fii încredințat că nu eu, ci puterea milosteniei și inima ta
cea bună te ajută, Harap-Alb, zice Sfânta Duminică ieșind și
lăsându-l în pace să se liniștească.

Și cum iese Sfânta Duminică afară, odată și pornește desculță
prin rouă, de culege o poală de somnoroasă, pe care o fierbe la
un loc cu o vadră de lapte dulce și cu una de miere și apoi ia
mursa aceea și iute se duce de o toarnă în fântâna din Grădina
Ursului, care fântână era plină cu apă până la gură. Și mai
stând Sfânta Duminică oleacă în preajma fântânii, numai iaca ce
vede că vine ursul cu o falcă în cer și cu una în pământ,
mornăind înfricoșat. Și cum ajunge la fântână, cum începe a bea
lacom la apă și a-și linge buzele de dulceața și bunătatea ei.
Și mai stă din băut, și iar începe a mornăi; și iar mai bea câte
un răstimp, și iar mornăiește, până ce, de la o vreme, încep a-i
slăbi puterile și, cuprins de amețeală, pe loc cade jos și
adoarme mort, de puteai să tai lemne pe dânsul.

Atunci Sfânta Duminică, văzându-l așa, într-o clipă se duce și,
deșteptând pe Harap-Alb chiar în miezul nopții, îi zice:

— Îmbracă-te iute în pielea cea de urs, care o ai de la tată-
tău, apucă pe ici tot înainte, și cum îi ajunge în răscrucile
drumului, ai să dai de Grădina Ursului. Atunci sai repede
înlăuntru de-ți ia sălăți într-ales, și câte-i vrea de multe,
căci pe urs l-am pus eu la cale. Dar, la toată întâmplarea, de-i
vedea și-i vedea că s-a trezit și năvălește la tine, zvârle-i
pielea cea de urs și apoi fugi încoace spre mine cât îi putea.

Harap-Alb face cum îi zice Sfânta Duminică. Și cum ajunge în
grădină, odată începe a smulge la sălăți într-ales și leagă o
sarcină mare, mare, cât pe ce să n-o poată ridica în spinare. Și
când să iasă cu dânsa din grădină, iaca ursul se trezește, și
după dânsul, Gavrile! Harap-Alb, dacă vede reaua, i-aruncă
pielea cea de urs, și apoi fuge cât ce poate cu sarcina în
spate, tot înainte la Sfânta Duminică, scăpând cu obraz curat.

După aceasta, Harap-Alb, mulțumind Sfintei Duminici pentru
binele ce i-a făcut, îi sărută mâna, apoi își ia sălățile și,
încălecând, pornește spre împărăție, Dumnezeu să ne ție, că
cuvântul din poveste, înainte mult mai este.

Și mergând tot cum s-a dus, de la o vreme ajunge la împărăție și
dă sălățile în mâna Spânului.

Împăratul și fetele sale, văzând aceasta, le-a fost de-a
mirarea. Atunci Spânul zice îngâmfat:

— Ei, moșule, ce mai zici? — Ce să zic, nepoate? Ia, când aș avé
eu o slugă ca aceasta, nu i-aș trece pe dinainte.

— D-apoi de ce mi l-a dat tata de-acasă? numai de vrednicia lui,
zise Spânul; căci altfel nu-l mai luam după mine, ca să-mi
încurce zilele.

La vro câteva zile după aceasta, împăratul arată Spânului niște
pietre scumpe, zicând:

— Nepoate, mai văzut-ai pietre nestemate așa de mari și frumoase
ca acestea de când ești?

— Am văzut eu, moșule, felurite pietre scumpe, dar ca aceste,
drept să-ți spun, n-am văzut. Oare pe unde se pot găsi așa
pietre?

— Pe unde să se găsească, nepoate! Ia, în Pădurea Cerbului. Și
cerbul acela este bătut tot cu pietre scumpe, mult mai mari și
mai frumoase decât aceste. Mai întâi, cică are una în frunte, de
strălucește ca soarele. Dar nu se poate apropia nimene de cerb,
căci este solomonit și nici un fel de armă nu-l prinde; însă el,
pe care l-a zări, nu mai scapă cu viață. De-aceea fuge lumea de
dânsul de-și scoate ochii; și nu numai atâta, dar chiar când se
uită la cineva, fie om sau orice dihanie a fi, pe loc rămâne
moartă. Și cică o mulțime de oameni și de sălbătăciuni zac fără
suflare în pădurea lui numai din astă pricină: se vede că este
solomonit, întors de la țâță, sau dracul mai știe ce are de-i
așa de primejdios. Dar cu toate aceste, trebuie să știi,
nepoate, că unii oameni îs mai al dracului decât dracul; nu se
astâmpără nici în ruptul capului; măcar că au pățit multe, tot
cearcă prin pădurea lui, să vadă, nu l-or putea găbui cumva? Și
care dintre ei are îndrăzneala mare și noroc și mai mare,
umblând pe acolo, găsește din întâmplare câte o piatră de
aceste, picată de pe cerb, când se scutură el la șapte ani o
dată, și apoi aceluia om nu-i trebuie altă negustorie mai bună.
Aduce piatra la mine și i-o plătesc cât nu face; ba încă sunt
bucuros că o pot căpăta. Și află, nepoate, că asemene pietre fac
podoaba împărăției mele, nu se găsesc altele mai mari și mai
frumoase decât aceste la nici o împărăție, și de-aceea s-a dus
vestea despre ele în toată lumea. Mulți împărați și crai înadins
vin să le vadă, și li-i de-a mirarea de unde le am.

— Doamne, moșule! zise atunci Spânul; să nu te superi, dar nu
știu ce fel de oameni fricoși aveți pe aici. Eu pun rămășag pe
ce vrei că sluga mea are să-mi aducă pielea cerbului aceluia, cu
cap cu tot, așa împodobit cum este.

Ș-odată cheamă Spânul pe Harap-Alb și-i zice: — Du-te în Pădurea
Cerbului, cum îi ști tu, și măcar fă pe dracul în patru, sau
orice-i face, dar numaidecât să-mi aduci pielea cerbului, cu cap
cu tot, așa bătute cu pietre scumpe, cum se găsesc. Și doar te-a
împinge păcatul să clintești vreo piatră din locul său, iară mai
ales acea mare din fruntea cerbului, c-apoi atâta ți-i leacul!
Hai, pornește iute, că nu-i vreme de pierdut!

Harap-Alb vede el bine unde merge treaba, că doar nu era din
butuci; dar neavând încotro, iese mâhnit, se duce iar în grajd
la cal și, netezindu-l pe coamă, îi zice:

— Dragul meu căluț, la grea belea m-a vârât iar Spânul!... De-oi
mai scăpa și din asta cu viață, apoi tot mai am zile de trăit.
Dar nu știu, zău, la cât mi-a sta norocul!

— Nu-i nimica, stăpâne, zise calul. Capul de-ar fi sănătos, că
belelele curg gârlă. Poate ai primit poruncă să jupești piatra
morii și să duci pielea la împărăție...

— Ba nu, căluțul meu; alta și mai înfricoșată, zise Harap- Alb.

— Vorbă să fie, stăpâne, că tocmeala-i gata, zise calul. Nu te
teme, știu eu năzdrăvănii de ale Spânului; și să fi vrut, de
demult i-aș fi făcut pe obraz, dar lasă-l să-și mai joace calul.
Ce gândești? Și unii ca aceștia sunt trebuitori pe lume
câteodată, pentru că fac pe oameni să prindă la minte... Zi și
d-ta că ai avut să tragi un păcat strămoșesc. Vorba ceea:
"Părinții mănâncă aguridă, și fiilor li se strepezesc dinții".
Hai, nu mai sta la gânduri; încalecă pe mine și pune-ți nădejdea
în Dumnezeu, că mare-i puterea Lui; nu ne-a lăsa el să suferim
îndelung. Cum vrei. "Ce-i e scris omului în frunte-i e pus."
Doar' mare-i Cel-de-sus! S-or sfârși ele și aceste de la o
vreme...

Harap-Alb atunci încalecă, și calul pornește la pas, până ce
iese mai încolo departe, ca să nu-i ia lumea la ochi. Și apoi,
încordându-se și scuturându-se o dată voinicește, iară-și arată
puterile, zicând:

— Ține-te zdravăn, stăpâne, că iar am să zbor:

În înaltul cerului,
Văzduhul pământului;
Pe deasupra codrilor,
Peste vârful munților,
Prin ceața măgurilor,
Spre noianul mărilor,
La crăiasa zânelor,
Minunea minunilor,
Din ostrovul florilor.
Și zicând aceste, odată și zboară cu Harap-Alb

În înaltul cerului,
Văzduhul pământului;
și o ia de-a curmeziș:
De la nouri către soare,
Printre lună și luceferi,
Stele mândre lucitoare,
și apoi se lasă lin ca vântul:
În ostrovul florilor,
La crăiasa zânelor,
Minunea minunilor.
Și când vântul a aburit, iaca și ei la Sfânta Duminică iar au
sosit. Sfânta Duminică era acasă și, cum a văzut pe Harap-Alb
poposind la ușa ei, pe loc l-a întâmpinat și i-a zis cu blândețe:

— Ei, Harap-Alb, așa-i că iar te-a ajuns nevoia de mine? — Așa
este, măicuță, răspunse Harap-Alb, cufundat în gânduri și galben
la față, de parcă-i luase pânza de pe obraz. Spânul vrea să-mi
răpună capul cu orice preț. Și de-aș muri mai degrabă, să scap
odată de zbucium: decât așa viață, mai bine moarte de o mie de
ori!

— Vai de mine și de mine, Harap-Alb, zise Sfânta Duminică; parcă
nu te-aș fi crezut așa slab de înger, dar, după cât văd, ești
mai fricos decât o femeie! Hai, nu mai sta ca o găină plouată!
rămâi la mine în astă noapte și ți-oi da eu vrun ajutor. Mare-i
Dumnezeu! N-a mai fi el după gândul Spânului. Însă mai rabdă și
tu, fătul meu, că mult ai avut de răbdat și puțin mai ai.
Pân-acum ți-a fost mai greu, dar de-acum înainte tot așa are
să-ți fie, până ce-i ieși din slujba Spânului, de la care ai să
tragi încă multe necazuri, dar ai să scapi din toate cu capul
teafăr, pentru că norocul te ajută.

— Poate așa să fie, măicuță, zise Harap-Alb, dar prea multe s-au
îngrămădit deodată pe capul meu.

— Câte a dat Dumnezeu, Harap-Alb, zise Sfânta Duminică; așa a
trebuit să se întâmple, și n-ai cui bănui: pentru că nu-i după
cum gândește omul, ci-i după cum vrea Domnul. Când vei ajunge și
tu odată mare și tare, îi căuta să judeci lucrurile de-a
fir-a-păr și vei crede celor asupriți și necăjiți, pentru că
știi acum ce e necazul. Dar până atunci, mai rabdă, HarapAlb,
căci cu răbdarea îi frigi pielea.

Harap-Alb, nemaiavând ce zice, mulțumește lui Dumnezeu, și de
bine, și de rău, și Sfintei Duminici pentru buna găzduire și
ajutorul făgăduit.

— Ia, acum mai vii de-acasă, fătul meu! Zică cine-a zice și cum
a vrea să zică, dar când este să dai peste păcat, dacă-i
înainte, te silești să-l ajungi, iar dacă-i în urmă, stai și-l
aștepți. Mă rog, ce mai la deal, la vale? așa e lumea asta și,
de-ai face ce-ai face, rămâne cum este ea; nu poți s-o întorci
cu umărul, măcar să te pui în ruptul capului. Vorba ceea: "Zi-i
lume și te mântuie". Dar ia să lăsăm toate la o parte și, până
la una-alta, hai să vedem ce-i de făcut cu cerbul, că Spânul
te-a fi așteptând cu nerăbdare. Și, dă, stăpân nu-i? trebuie
să-l asculți. Vorba ceea: "Leagă calul unde zice stăpânul".

Și odată scoate Sfânta Duminică obrăzarul și sabia lui
Statu-Palmă-Barbă-Cot, de unde le avea și, dându-le lui
Harap-Alb, zice:

— Ține aceste, că au să-ți fie de mare trebuință unde mergem. Și
chiar haidem, cu ajutorul Domnului, să isprăvim odată și
trebușoara asta.

Și pe la cântatul cucoșilor se ia Sfânta Duminică împreună cu
Harap-Alb și se duc în Pădurea Cerbului. Și cum ajung în pădure,
sapă o groapă adâncă de un stat de om, lângă un izvor, unde în
fiecare zi pe la amiază venea cerbul de bea apă, apoi se culca
acolo pe loc și dormea cât un bei, până ce asfințea soarele. Și
după aceea, sculându-se, o lua în porneală și nu mai da pe la
izvor iar până a doua zi pe la amiază.

— Ei, ei! acum groapa este gata, zise Sfânta Duminică. Tu,
Harap-Alb, rămâi aici într-însa, toată ziua, și iaca ce ai de
făcut: pune-ți obrăzarul cum se pune, iară sabia să n-o slăbești
din mână; și de-amiază, când a veni cerbul aici la izvor să bea
apă și s-a culca ș-a adormi, cu ochii deschiși, cum i-i
feleșagul, tu, îndată ce l-îi auzi horăind, să ieși încetișor și
să potrivești așa ca să-i zbori capul dintr-o singură lovitură
de sabie, și apoi repede să te arunci în groapă și să șezi acolo
într-însa până după asfințitul soarelui. Capul cerbului are să
te strige până atunci mereu pe nume, ca să te vadă, dar tu nu
cumva să te îndupleci de rugămintea lui și să te ițești la
dânsul, că are un ochi otrăvit și, când l-a pironi spre tine, nu
mai trăiești. Însă, cum a asfinți soarele, să știi că a murit
cerbul. Și atunci să iei fără frică să-i jupești pielea, iară
capul să-l iei așa întreg, cum se găsește, și apoi să vii la
mine.

Și așa, Sfânta Duminică se ia și se întoarnă singură acasă. Iară
Harap-Alb rămâne la pândă în groapă. Și, când pe la amiază,
numai iaca ce aude Harap-Alb un muget înădușit: cerbul venea
boncăluind. Și ajungând la izvor, odată și începe a bea hâlpav
la apă rece; apoi mai boncăluiește, și iar mai bea câte un
răstimp, și iar mai boncăluiește, și iar mai bea, până ce nu mai
poate. După aceea începe a-și arunca țărnă după cap, ca buhaiul,
și apoi, scurmând de trei ori cu piciorul în pământ, se
tologește jos pe pajiște, acolo pe loc, mai rumegă el cât mai
rumegă, și pe urmă se așterne pe somn, și unde nu începe a mâna
porcii la jir.

Harap-Alb, cum îl aude horăind, iese afară încetișor și, când îl
croiește o dată cu sabia pe la mijlocul gâtului, îi și zboară
capul cât colo de la trup și apoi Harap-Alb se aruncă fără sine
în groapă, după cum îl povățuise Sfânta Duminică. Atunci sângele
cerbului odată a și-nceput a curge gâlgâind și a se răspândi în
toate părțile, îndreptându-se și năboind în groapă peste
Harap-Alb, de cât pe ce era să-l înece. Iară capul cerbului,
zvârcolindu-se dureros, striga cu jale, zicând:

— Harap-Alb, Harap-Alb! De nume ți-am auzit, dar de văzut nu
te-am văzut. Ieși numai oleacă să te văd încaltea, vrednic ești
de comoara ce ți-o las, și apoi să mor cu plăcere, dragul meu!

Dar Harap-Alb tăcea molcum și de-abia își putea descleșta
picioarele din sângele închegat, care era mai-mai să umple
groapa. În sfârșit, mai strigă el, capul cerbului, cât mai
strigă, însă Harap-Alb nici nu răspunde, nici se arată, și de la
o vreme se face tăcere. Și așa, după asfințitul soarelui,
Harap-Alb iese din groapă, jupește pielea cerbului cu băgare de
seamă, să nu smintească vreo piatră din locul ei, apoi ia capul
întreg, așa cum se găsea, și se duce la Sfânta Duminică.

— Ei, Harap-Alb, zise Sfânta Duminică, așa-i că am scos-o la
capăt și asta?

— Așa; cu ajutorul lui Dumnezeu și cu al sfinției-voastre,
răspunse Harap-Alb, am izbutit, măicuță, să facem și acum pe
cheful Spânului, rămânere-aș păgubaș de dânsul să rămân, și să-l
văd când mi-oi vedea ceafa; atunci, și nici atunci, că tare mi-i
negru înaintea ochilor!

— Lasă-l, Harap-Alb, în plata lui Dumnezeu, că și-a da el Spânul
peste om vrodată; pentru că nu-i nici o faptă fără plată, zise
Sfânta Duminică. Mergi de i le du și acestea, că i-or rămânea
ele de cap odată.

Atunci Harap-Alb, mulțumind Sfintei Duminici, îi sărută mâna,
apoi încalecă pe cal și pornește tot cum a venit, mergând spre
împărăție, Dumnezeu să ne ție, că cuvântul din poveste, înainte
mult mai este... Și pe unde trecea, lumea din toate părțile îl
înghesuia: pentru că piatra cea mare din capul cerbului
strălucea de se părea că Harap-Alb soarele cu el îl ducea.

Mulți crai și împărați ieșeau înaintea lui Harap-Alb, și care
dincotro îl ruga, unul să-i dea bănărit, cât a cere el, altul
să-i dea fata și jumătate de împărăție; altul să-i dea fata și
împărăția întreagă pentru asemene odoare. Dar HarapAlb ca de foc
se ferea și, urmându-și calea înainte, la stăpânu-său le ducea.

Și într-una din seri, cum ședea Spânul împreună cu moșus ău și
cu verele sale sus într-un foișor, numai iaca ce zăresc în
depărtare un sul de raze scânteietoare, care venea înspre
dânșii; și de ce se apropia, de ce lumina mai tare, de le fura
vederile. Și deodată toată suflarea s-a pus în mișcare: lumea de
pe lume, fiind în mare nedumerire, alerga să vadă ce minune
poate să fie. Și, când colo, cine era? Harap-Alb, care venea în
pasul calului, aducând cu sine pielea și capul cerbului pe care
le-a și dat în mâna Spânului.

La vederea acestei minunății, toți au rămas încremeniți și,
uitându-se unii la alții, nu știau ce să zică. Pentru că în
adevăr era și lucru de mirare!

Dar Spânul, cu viclenia sa obicinuită, nu-și pierde cumpătul.
Și, luând vorbă, zice împăratului:

— Ei, moșule, ce mai zici? adeveritu-s-au vorbele mele? — Ce să
mai zic, nepoate?! răspunse împăratul uimit. Ia, să am eu o
slugă așa de vrednică și credincioasă ca HarapAlb, aș pune-o la
masă cu mine, că mult prețuiește omul acesta!

— Ba să-și pună pofta-n cui! răspunse Spânul cu glas răutăcios.
Asta n-aș face-o eu de-ar mai fi el pe cât este; doar nu-i frate
cu mama, să-l pun în capul cinstei! Eu știu, moșule, că sluga-i
slugă și stăpânu-i stăpân; s-a mântuit vorba. Na, na, na! d-apoi
pentru vrednicia lui mi l-a dat tata, căci altfel de ce l-aș fi
luat cu mine. Hei, hei! Nu știți d-voastră ce poam-a dracului e
Harap-Alb aista! Până l-am dat la brazdă, mi-am stupit sufletul
cu dânsul. Numai eu îi vin de hac. Vorba ceea: "Frica păzește
bostănăria". Alt stăpân în locul meu nu mai face brânză cu
Harap-Alb, cât îi lumea și pământul. Ce te potrivești, moșule?
Cum văd eu, d-ta prea intri în voia supușilor. De-aceea nu-ți
dau cerbii pietre scumpe și urșii sălăți. Mie unuia știu că
nu-mi suflă nimene în borș: când văd că mâța face mărazuri, ți-o
strâng de coadă, de mănâncă și mere pădurețe, căci n-are
încotro... Dacă ți-a ajuta Dumnezeu să mă rânduiești mai degrabă
în locul d-tale, îi vedea, moșule dragă, ce prefacere are să ia
împărăția; n-or mai ședea lucrurile tot așa moarte cum sunt.
Pentru că știi vorba ceea: "Omul sfințește locul!"... Fost-ai și
d-ta la tinerețe, nu zic. Dar acum îți cred. Dă, bătrânețe nu-s?
Cum n-or sta trebile baltă!

În sfârșit, Spânului îi mergea gura ca pupăza, de-a amețit pe
împăratul, încât a uitat și de Harap-Alb, și de cerb, și de tot.

Fetele împăratului însă priveau la verișor... cum privește
câinele la mâță, și le era drag ca sarea-n ochi: pentru că le
spunea inima ce om fără de lege este Spânul. Dar cum erau să
iasă ele cu vorba înaintea tatălui lor? Spânul n-avea de cine...
Vorba ceea: "Găsise un sat fără câini și se primbla fără băț".
Că altă, ce pot să zic?

La vro câteva zile după asta, împăratul făcu un ospăț foarte
mare în cinstea nepotu-său, la care ospăț au fost poftiți cei
mai străluciți oaspeți: împărați, crai, voievozi, căpitanii
oștirilor, mai-marii orașelor și alte fețe cinstite.

În ziua de ospăț, fetele împăratului s-au pus cu rugămintea pe
lângă Spân să dea voie lui Harap-Alb ca să slujească și el la
masă. Spânul, neputându-le strica hatârul, cheamă pe Harap-Alb
de față cu dânsele și-i învoi aceasta, însă cu tocmală, ca în
tot timpul ospățului să stea numai la spatele stăpânu-său și
nici măcar să-și ridice ochii la ceilalți meseni, că de l-oi
vedea obrăznicindu-se cumva, acolo pe loc îi și tai capul.

— Auzit-ai ce am spus, slugă netrebnică, zise Spânul, arătând
lui Harap-Alb tăișul paloșului, pe care jurase credință și
supunere Spânului la ieșirea din fântână.

— Da, stăpâne, răspunse Harap-Alb cu umilință; sunt gata la
porunca luminării-voastre.

Fetele împăratului au mulțumit Spânului și pentru atâta.

Amu, tocmai pe când era temeiul mesei, și oaspeții, tot gustând
vinul de bun, începuse a se chiurchiului câte oleacă, numai iaca
o pasăre măiastră se vede bătând la fereastră și zicând cu glas
muieratic:

— Mâncați, beți și vă veseliți, dar de fata împăratului Roș nici
nu gândiți!

Atunci, deodată, tuturor mesenilor pe loc li s-a stricat cheful
și au început a vorbi care ce știa și cum îi ducea capul: unii
spuneau că împăratul Roș, având inimă haină, nu se mai satură de
a vărsa sânge omenesc; alții spuneau că fata lui este o
farmazoană cumplită, și că din pricina ei se fac atâtea jertfe;
alții întăreau spusele celorlalți, zicând că chiar ea ar fi
venit în chip de pasăre de a bătut acum la fereastră, ca să nu
lase și aici lumea în pace. Alții ziceau că, oricum ar fi, dar
pasărea aceasta nu-i lucru curat; și că trebuie să fie un trimis
de undeva, numai pentru a iscodi casele oamenilor. Alții, mai
fricoși, își stupeau în sân, menind-o ca să se întoarcă pe capul
acelui care a trimis-o. În sfârșit, unii spuneau într-un fel,
alții în alt fel, și multe se ziceau pe seama fetei împăratului
Roș, dar nu se știa care din toate acele vorbe este cea
adevărată.

Spânul, după ce-i ascultă pe toți cu luare-aminte, clătină din
cap și zise:

— Rău e când ai a face tot cu oameni care se tem și de umbra
lor! D-voastră, cinstiți oaspeți, se vede că pașteți boboci, de
nu vă pricepeți al cui fapt e acesta.

Și atunci Spânul repede își ațintește privirile asupra lui
Harap-Alb și, nu știu cum, îl prinde zâmbind.

— Așa... slugă vicleană ce-mi ești!? Vasăzică, tu ai știință de
asta și nu mi-ai spus. Acum degrabă să-mi aduci pe fata
împăratului Roș, de unde știi și cum îi ști tu. Hai, pornește!
Și nu cumva să faci de altfel, că te-ai dus de pe fața
pământului!

Atunci Harap-Alb, ieșind plin de mâhnire, se duce în grajd la
cal și, netezindu-l pe coamă și sărutându-l, zice:

— Dragul meu tovarăș, la grea nevoie m-a băgat iar Spânul! Amu a
scornit alta: cică să-i aduc pe fata împăratului Roș de unde-oi
ști. Asta-i curat vorba ceea: "Poftim pungă la masă, dacă ți-ai
adus de-acasă." Se vede că mi s-a apropiat funia la par. Cine
știe ce mi s-a mai întâmpla! Cu Spânul tot am dus-o cum am
dus-o, câine-câinește, până acum. Dar cu omul roș nu știu, zău,
la cât mi-a sta capul. Ș-apoi, unde s-a fi găsind acel împărat
Roș și fata lui, care cică este o farmazoană cumplită, numai
Cel-de-pe-comoară a fi știind! Parcă dracul vrăjește, de n-apuc
bine a scăpa din una și dau peste alta! Se vede că m-a născut
mama într-un ceas rău, sau nu știu cum să mai zic, ca să nu
greșesc înaintea lui Dumnezeu. Mă pricep eu tare bine ce ar
trebui să fac, ca să se curme odată toate aceste. Dar m-am
deprins a târâi după mine o viață ticăloasă. Vorba ceea: "Să nu
dea Dumnezeu omului cât poate el suferi".

— Stăpâne, zise atunci calul, nechezând cu înfocare, nu te mai
olicăi atâta! După vreme rea, a fi el vreodată și senin. Dac'ar
sta cineva să-și facă seamă de toate cele, cum chitești d-ta,
apoi atunci ar trebui să vezi tot oameni morți pe toate
cărările... Nu fi așa de nerăbdător! De unde știi că nu s-or
schimba lucrurile în bine și pentru d-ta? Omul e dator să se
lupte cât a putea cu valurile vieții, căci știi că este o vorbă:
"Nu aduce anul ce aduce ceasul". Când sunt zile și noroc, treci
prin apă și prin foc și din toate scapi nevătămat. Vorba
cântecului:

Fă-mă, mamă, cu noroc,
Și măcar m-aruncă-n foc.
Las' pe mine, stăpâne, că știu eu pe unde te-oi duce la
împăratul Roș: pentru că m-au mai purtat o dată păcatele pe
acolo cu tatu-tău, în tinerețile lui. Hai, încalecă pe mine și
ține-te bine, că acum am să-mi arăt puterile chiar de aici, de
pe loc, în ciuda Spânului, ca să-i punem venin la inimă.

Harap-Alb atunci încalecă, și calul, nechezând o dată puternic,
zboară cu dânsul:

În înaltul cerului,
Văzduhul pământului
și o ia de-a curmeziș:
De la nouri către soare,
Printre lună și luceferi,
Stele mândre lucitoare.
Și apoi, de la o vreme, începe a se lăsa lin ca vântul, și luând
de-a lungul pământului, merg spre împărăție, Dumnezeu să ne ție,
că cuvântul din poveste, înainte mult mai este.

Dar ia să vedem, ce se mai petrece la masă după ducerea lui
Harap-Alb?

— Hei, hei! zise Spânul în sine, tremurând de ciudă: nu te-am
știut eu că-mi ești de aceștia, că de mult îți făceam felul!...
Dar trăind și nemurind, te-oi sluji eu, măi badeo!... Paloșul
ista are să-ți știe de știre... Ei, vedeți, moșule și cinstiți
meseni, cum hrănești pe dracul, fără să știi cu cine ai de-a
face? Dacă nu-s și eu un puișor de om în felul meu, dar tot m-a
tras Harap-Alb pe sfoară! Bine-a zis cine-a zis: "Că unde-i
cetatea mai tare, acolo bate dracul război mai puternic".

În sfârșit, împăratul, fetele sale și toți oaspeții rămaseră
încremeniți, Spânul, bodrogănind din gură, nu știa cum să-și
ascundă ura, iară Harap-Alb, îngrijit de ce i s-ar mai putea
întâmpla în urmă, mergea tot înainte prin locuri pustii și cu
greu de străbătut.

Și când să treacă un pod peste o apă mare, iaca o nuntă de
furnici trecea și ea tocmai atunci podul. Ce să facă HarapAlb ?
Stă el oleacă și se sfătuiește cu gândul: "Să trec peste
dânsele, am să omor o mulțime; să dau prin apă, mă tem că m-oi
îneca, cu cal cu tot. Dar tot mai bine să dau prin apă, cum a da
Dumnezeu, decât să curm viața atâtor gâzulițe nevinovate". Și
zicând Doamne-ajută, se aruncă cu calul în apă, o trece înot
dincolo, la cela mal, fără primejdie și apoi își ia drumul
înainte. Și cum mergea el, numai iaca i se înfățișază o furnică
zburătoare zicând:

— Harap-Alb, fiindcă ești așa de bun, de ți-a fost milă de viața
noastră, când treceam pe pod, și nu ne-ai stricat veselia, vreau
să-ți fac și eu un bine: na-ți aripa asta, și când îi avea
vrodată nevoie de mine, să dai foc aripei, și atunci eu împreună
cu tot neamul meu avem să-ți venim în ajutor.

Harap-Alb, strângând aripa cu îngrijire, mulțumește furnicii
pentru ajutorul făgăduit și apoi pornește tot înainte.

Și mai merge el cât merge, și numai iaca ce aude o bâzâitură
înădușită. Se uită el în dreapta, nu vede nimica; se uită în
stânga, nici atâta; și când se uită în sus, ce să vadă? Un roi
de albine se învârtea în zbor pe deasupra capului său și umblau
bezmetice de colo până colo, neavând loc unde să se așeze.
Harap-Alb, văzându-le așa, i se face milă de dânsele și,
luându-și pălăria din cap, o pune pe iarbă la pământ, cu gura-n
sus, și apoi el se dă într-o parte. Atunci, bucuria albinelor;
se lasă jos cu toatele și se adună ciotcă în pălărie. Harap-Alb,
aflându-se cu părere de bine despre asta, aleargă în dreapta și
în stânga și nu se lasă până ce găsește-un buștihan putregăios,
îl scobește cu ce poate și-i face urdiniș; după aceea așază
niște țepuși într-însul, îl freacă pe dinăuntru cu cătușnică, cu
sulcină, cu mătăciune, cu poala sântă-Măriei și cu alte buruiene
mirositoare și prielnice albinelor și apoi, luându-l pe umăr, se
duce la roi, răstoarnă albinele frumușel din pălărie în
buștihan, îl întoarce binișor cu gura în jos, îi pune deasupra
niște captălani, ca să nu răzbată soarele și ploaia înlăuntru,
și apoi, lăsându-l acolo pe câmp, între flori, își caută de drum.

Și cum mergea el, mulțumit în sine pentru această facere de
bine, numai iaca i se înfățișază înainte crăiasa albinelor,
zicându-i:

— Harap-Alb, pentru că ești așa de bun și te-ai ostenit de ne-ai
făcut adăpost, vreau să-ți fac și eu un bine în viața mea: na-ți
aripa asta și, când îi avea vreodată nevoie de mine, aprinde-o,
și eu îndată am să-ți vin întru ajutor.

Harap-Alb, luând aripa cu bucurie, o strânge cu îngrijire; apoi,
mulțumind crăiesei pentru ajutorul făgăduit, pornește,
urmându-și calea tot înainte.

Mai merge el cât merge și, când la poalele unui codru, numai
iaca ce vede o dihanie de om, care se pârpâlea pe lângă un foc
de douăzeci și patru de stânjeni de lemne și tot atunci striga,
cât îi lua gura, că moare de frig. Și-apoi, afară de aceasta,
omul acela era ceva de speriat; avea niște urechi clăpăuge și
niște buzoaie groase și dăbălăzate. Și când sufla cu dânsele,
cea deasupra se răsfrângea în sus peste scăfârlia capului, iar
cea dedesubt atârna în jos, de-i acoperea pântecele. Și, ori pe
ce se oprea suflarea lui, se punea promoroaca mai groasă de-o
palmă. Nu era chip să te apropii de dânsul, că așa tremura de
tare, de parcă-l zghihuia dracul. Și dac-ar fi tremurat numai
el, ce ți-ar fi fost? Dar toată suflarea și făptura de
primprejur îi țineau hangul: vântul gemea ca un nebun, copacii
din pădure se văicărau, pietrele țipau, vreascurile țiuiau și
chiar lemnele de pe foc pocneau de ger. Iară veverițele,
găvozdite una peste alta în scorburi de copaci, suflau în unghii
și plângeau în pumni, blestemându-și ceasul în care s-au născut.
Mă rog, foc de ger era: ce să vă spun mai mult! HarapAlb, numai
o țâră cât a stat de s-a uitat, a făcut țurțuri la gură și,
neputându-și stăpâni râsul, zise cu mirare:

— Multe mai vede omul acesta cât trăiește! Măi tartorule, nu
mânca haram și spune drept, tu ești Gerilă? Așă-i că taci?... Tu
trebuie să fii, pentru că și focul îngheață lângă tine, de
arzuliu ce ești.

— Râzi tu, râzi, Harap-Alb, zise atunci Gerilă tremurând, dar,
unde mergi, fără mine n-ai să poți face nimica.

— Hai și tu cu mine, dacă vrei, zise Harap-Alb; de-abia te-i mai
încălzi mergând la drum, căci nu e bine când stai locului.

Gerilă atunci se ia cu Harap-Alb și pornesc împreună. Și mergând
ei o bucată înainte, Harap-Alb vede altă drăcărie și mai mare: o
namilă de om mânca brazdele de pe urma a 24 de pluguri și tot
atunci striga în gura mare că crapă de foame.

— Ei, apoi să nu bufnești de râs? zise Harap-Alb. Măi, măi, măi!
că multe-ți mai văd ochii! Pesemne c-aista-i Flămânzilă,
foametea, sac fără fund sau cine mai știe ce pricopseală a fi,
de nu-l poate sătura nici pământul.

— Râzi tu, râzi, Harap-Alb, zice atunci Flămânzilă, dar, unde
mergeți voi, fără mine n-aveți să puteți face nici o ispravă.

— Dacă-i așa, hai și tu cu noi, zise Harap-Alb, că doar n-am a
te duce în spinare.

Flămânzilă atunci se ia după Harap-Alb și pornesc tustrei
înainte. Și mai mergând ei o postată, numai iaca Harap-Alb vede
altă minunăție și mai mare: o arătare de om băuse apa de la 24
de iazuri și o gârlă pe care umblau numai 500 de mori și tot
atunci striga în gura mare că se usucă de sete.

— Măi, da' al dracului onànie de om e și acesta! zise HarapAlb.
Grozav burdăhan și nesățios gâtlej, de nu pot să-i potolească
setea nici izvoarele pământului; mare ghiol de apă trebuie să
fie în mațele lui! Se vede că acesta-i prăpădenia apelor,
vestitul Setilă, fiul Secetei, născut în zodia rațelor și
împodobit cu darul suptului.

— Râzi tu, râzi, Harap-Alb, zise atunci Setilă, căruia începu
a-i țâșni apa pe nări și pe urechi, ca pe niște lăptoace de
mori, dar, unde vă duceți voi, fără mine degeaba vă duceți.

— Hai și tu cu noi, dacă vrei, zise Harap-Alb; de-abia nu te-ai
mai linciuri atâta în cele ape, îi scăpa de blestemul broaștelor
și-i da răgaz morilor să umble, că destul ți-ai făcut mendrele
până acum. Ce, Doamne iartă-mă, îi face broaște în pântece de
atâta apă!

Setilă atunci se ia după Harap-Alb și pornesc tuspatru înainte.
Și mai mergând ei o bucată, numai iaca ce vede Harap-Alb altă
minunăție și mai minunată: o schimonositură de om avea în frunte
numai un ochi, mare cât o sită și, când îl deschidea, nu vedea
nimica; da chior peste ce apuca. Iară când îl ținea închis, dar
fie zi, dar fie noapte, spunea că vede cu dânsul în măruntaiele
pământului.

— Iaca, începu el a răcni ca un smintit, toate lucrurile mi se
arată găurite, ca sitișca, și străvezii, ca apa cea limpede;
deasupra capului meu văd o mulțime nenumărată de văzute și
nevăzute; văd iarba cum crește din pământ; văd cum se
rostogolește soarele după deal, luna și stelele cufundate în
mare; copacii cu vârful în jos, vitele cu picioarele în sus și
oamenii umblând cu capul între umere; văd, în sfârșit, ceea ce
n-aș mai dori să vadă nimene, pentru a-și osteni vederea: văd
niște guri căscate uitându-se la mine și nu-mi pot da seama de
ce vă mirați așa, mira-v-ați de... frumusețe-vă!

Harap-Alb atunci se bate cu mâna peste gură și zice: — Doamne
ferește de omul nebun, că tare-i de jălit, sărmanul! Pe de-o
parte îți vine a râde și pe de alta îți vine a-l plânge. Dar se
vede că așa l-a lăsat Dumnezeu. Poate că acesta-i vestitul
Ochilă, frate cu Orbilă, văr primare cu Chiorilă, nepot de soră
lui Pândilă, din sat de la Chitilă, peste drum de Nimerilă. Ori
din târg de la Să-l-cați, megieș cu Căutați și de urmă nu-i mai
dați. Mă rog, unu-i Ochilă pe fața pământului, care vede toate
și pe toți altfel de cum vede lumea cealaltă; numai pe sine nu
se vede cât e de frumușel. Parcă-i un boț, chilimboț boțit, în
frunte cu un ochi, numai să nu fie de deochi!

— Râzi tu, râzi, Harap-Alb, zise atunci Ochilă, uitându-se
închiorchioșat, dar, unde te duci, fără de mine rău are să-ți
cadă. Fata împăratului Roș nu se capătă așa de lesne cum crezi
tu. Din gardul Oancei ți-a da-o împăratul, dacă n-oi fi și eu
pe-acolo.

— Hai și tu cu noi, dacă vrei, zise Harap-Alb, că doar n-avem a
te duce de mână, ca pe un orb.

Ochilă atunci se ia și el după Harap-Alb și pornesc tuscinci
înainte. Și mai mergând ei o bucată, numai iaca ce vede
Harap-Alb altă bâzdâganie și mai și: o pocitanie de om umbla cu
arcul după vânat păsări. Ș-apoi, chitiți că numai în arc se
încheia tot meșteșugul și puterea omului aceluia? Ți-ai găsit!
Avea un meșteșug mai drăcos și o putere mai pe sus decât își
poate dracul închipui: când voia, așa se lățea de tare, de
cuprindea pământul în brațe. Și altă dată, așa se deșira și se
lungea de grozav, de ajungea cu mâna la lună, la stele, la soare
și cât voia de sus. Și dacă se întâmpla să nu nimerească
păsările cu săgeata, ele tot nu scăpau de dânsul; ți le prindea
cu mâna din zbor, le răsucea gâtul cu ciudă și apoi le mânca
așa, crude, cu pene cu tot. Chiar atunci avea un vraf de păsări
dinainte și ospăta dintr-însele cu lăcomie, ca un vultan
hămesit. Harap-Alb, cuprins de mirare, zise:

— Dar oare pe acesta cum mama dracului l-o fi mai chemând?

— Zi-i pe nume, să ți-l spun, răspunse atunci Ochilă, zâmbind pe
sub mustăți.

— Dar te mai duce capul ca să-l botezi? Să-i zici Păsărilă... nu
greșești; să-i zici Lățilă... nici atâta; să-i zici Lungilă...
asemene; să-i zici Păsări-Lăți-Lungilă, mi se pare că e mai
potrivit cu năravul și apucăturile lui, zise Harap-Alb,
înduioșat de mila bietelor păsări. Se vede că acesta-i vestitul
Păsări- Lăți-Lungilă, fiul săgetătorului și nepotul arcașului;
brâul pământului și scara cerului; ciuma zburătoarelor și spaima
oamenilor, că altfel nu te pricepi cum să-i mai zici.

— Râzi tu de mine, râzi, Harap-Alb, zise atunci Păsări-Lăți-
Lungilă, dar mai bine ar fi să râzi de tine, căci nu știi ce
păcat te paște. Chitești că fata împăratului Roș numai așa se
capătă? Poate n-ai știință ce vidmă de fată e aceea, când vrea,
se face pasăre măiastră, îți arată coada, și ia-i urma dacă
poți! De n-a fi și unul ca mine pe-acolo, degeaba vă mai bateți
picioarele ducându-vă.

— Hai și tu cu noi, dacă vrei, zise atunci Harap-Alb; de-abia
mi-i lua pe Gerilă de țuluc și l-îi purta cu nasul pe la soare,
doar s-a încălzi câtuși decât și n-a mai clănțăni atâta din
măsele, ca un cocostârc de cei bătrâncioși, că parcă mă strânge
în spate când îl văd așa.

Păsări-Lăți-Lungilă se ia atunci după Harap-Alb și pornesc ei
tusșase înainte. Și pe unde treceau, pârjol făceau: Gerilă
potopea pădurile prin ardere. Flămânzilă mânca lut și pământ
amestecat cu humă și tot striga că moare de foame. Setilă sorbea
apa de prin bălți și iazuri, de se zbăteau peștii pe uscat și
țipa șarpele în gura broaștei de secetă mare ce era pe acolo.
Ochilă vedea toate cele ca dracul, și numai înghețai ce da
dintr-însul:

Că e laie,
Că-i bălaie;
Că e ciută,
Că-i cornută.
Mă rog, nebunii de-a lui, câte-n lună și în stele, de-ți venea
să fugi de ele. Sau să râzi ca un nebun, credeți-mă ce vă spun!

În sfârșit, Păsări-Lăți-Lungilă ademenea zburătoarele și,
jumulite, nejumulite, ți le păpa pe rudă, pe sămânță, de nu se
mai stăvilea nimene cu păsări pe lângă casă de răul lui.

Numai Harap-Alb nu aducea nici o supărare. Însă, ca tovarăș, era
părtaș la toate: și la pagubă, și la câștig, și prietenos cu
fiecare, pentru că avea nevoie de dânșii în călătoria sa la
împăratul Roș, care, zice, cică era un om pâclișit și răutăcios
la culme: nu avea milă de om nici cât de un câine. Dar vorba
ceea: "La unul fără suflet trebuie unul fără de lege". Și
gândesc eu că din cinci nespălați câți merg cu Harap-Alb, i-a
veni el vreunul de hac; ș-a mai da împăratul Roș și peste
oameni, nu tot peste butuci, ca până atunci. Dar iar mă întorc
și zic: mai știi cum vine vremea? Lumea asta e pe dos, toate
merg cu capu-n jos; puțini suie, mulți coboară, unul macină la
moară. Ș-apoi acel unul are atunci în mână și pâinea, și cuțitul
și taie de unde vrea și cât îi place, tu te uiți și n-ai ce-i
face. Vorba ceea: "Cine poate oase roade; cine nu, nici carne
moale". Așa și Harap-Alb și cu ai săi; poate-ar izbuti să ia
fata împăratului Roș, poate nu, dar acum, deodată, ei se tot duc
înainte și, mai la urmă, cum le-a fi norocul. Ce-mi pasă mie? Eu
sunt dator să spun povestea și vă rog să ascultați.

Amu Harap-Alb și cu ai săi mai merg ei cât merg și, într-o
târzie vreme, ajung la împărăție, Dumnezeu să ne ție, că
cuvântul din poveste, înainte mult mai este. Și cum ajung, odată
intră buluc în ogradă, tusșase. Harap-Alb înainte și ceilalți în
urmă, care de care mai chipos și mai îmbrăcat, de se târâiau
ațele și curgeau obielele după dânșii, parcă era oastea lui
Papuc Hogea Hogegarul. Și atunci, Harap-Alb se și înfățișază
înaintea împăratului Roș, spunându-i de unde, cum, cine și
pentru ce anume au venit. Împăratului i-a fost de-a mirarea,
văzând că niște golani au asemene îndrăzneală, de vin cu
nerușinare să-i ceară fata, fie din partea oricui ar fi. Dar,
nevoind a le strica inima, nu le spune nici da, nici ba, ci le
dă răspuns ca să rămâie peste noapte acolo, și până mâine
dimineață s-a mai gândi el ce trebuie să facă... Și pe altă
parte, împăratul odată cheamă în taină pe un credincios al său
și dă poruncă să-i culce în casa cea de aramă înfocată, ca să
doarmă pentru veșnicie, după cum pățise și alți pețitori, poate
mai ceva decât aceștia.

Atunci credinciosul împăratului se duce repede și dă foc casei
celei de aramă pe dedesubt, cu 24 de stânjeni de lemne, de se
face casa roșie cum e jăraticul. Apoi, cum înserează, vine și
poftește pe oaspeți la culcare. Gerilă atunci, năzdrăvan cum era
el, cheamă pe tovarășii săi deoparte și le zice încetișor:

— Măi, nu cumva să vă împingă Mititelul să intrați înaintea mea
unde ne-a duce omul țapului celui roș, că nu mai ajungeți să
vedeți ziua de mâine. Doar unu-i împăratul Roș, vestit prin
meleagurile aceste pentru bunătatea lui cea nemaipomenită și
milostivirea lui cea neauzită. Îl știu eu cât e de primitor și
de darnic la spatele altora. Numai de nu i-ar muri mulți
înainte! să trăiască trei zile cu cea de-alaltaieri! D-apoi
fetișoara lui; a zis dracul și s-a făcut; bucățică ruptă
tată-său în picioare, ba încă și mai și. Vorba ceea: "Capra sare
masa, și iada sare casa". Dar las' că și-au găsit ei omul. De nu
le-oi veni eu de hac în astă noapte, nici mama dracului nu le
mai vine!

— Așa gândesc și eu, zise Flămânzilă; și-a pus el, împăratul
Roș, boii în cârd cu dracul, dar are să-i scoată fără coarne.

— Ba mi se pare c-a da el și teleagă, și plug, și otic, și tot,
numai să scape de noi, zise Ochilă.

— Ia ascultați, măi! zise Gerilă: "Vorba lungă, sărăcia omului".
Mai bine haidem la culcare, că ne așteaptă omul împăratului cu
masa întinsă, cu făcliile aprinse și cu brațele deschise. Hai!
Ascuțiți-vă dinții și porniți după mine.

Și odată pornesc ei, teleap, teleap, teleap! Și, cum ajung în
dreptul ușii, se opresc puțin. Atunci Gerilă suflă de trei ori
cu buzișoarele sale cele iscusite și casa rămâne nici fierbinte,
nici rece, cum e mai bine de dormit într-însa. Apoi intră cu
toții înlăuntru, se tologește care unde apucă, și tac mă cheamă.
Iară credinciosul împăratului, încuind ușa pe din afară cu
repejune, le zice cu răutate:

— Las' că v-am găsit eu ac de cojoc. De-acum dormiți,
dormire-ați somnul cel de veci, că v-am așternut eu bine! Vă
veți face scrum până mâine-dimineață.

Apoi îi lasă acolo și el se duce în treaba lui. Dar HarapAlb și
cu ai săi nici nu bindiseau de asta; ei, cum au dat de
căldurică, pe loc li s-au muiat ciolanele și au început a se
întinde și a se hârjoni în ciuda fetei împăratului Roș. Ba încă
Gerilă se întindea de căldură, de-i treceau genunchile de gură.
Și hojma morocănea pe ceilalți, zicând:

— Numai din pricina voastră am răcit casa; căci pentru mine era
numai bună, cum era. Dar așa pățești dacă te iei cu niște
bicisnici. Las' că v-a mai păli el berechetul acesta de altă
dată! Știi că are haz și asta? Voi să vă lăfăiți și să huzuriți
de căldură, iară eu să crap de frig. Bu...nă treabă! Să-mi dau
eu liniștea mea pentru hatârul nu știu cui? Acuși vă târnâiesc
prin casă, pe rudă pe sămânță; încaltea să nu se aleagă nimica
nici de somnul meu, dar nici de al vostru.

— Ia tacă-ți gura, măi Gerilă! ziseră ceilalți. Acuși se face
ziuă, și tu nu mai stinchești cu brașoave de-ale tale. Al
dracului lighioaie mai ești! Destul acum, că ne-ai făcut capul
călindar. Cine-a mai dori să facă tovărășie cu tine aibă-și
parte și poarte-ți portul. Că pe noi știu că ne-ai amețit. Are
cineva cap să se liniștească de răul tău? I-auzi-l-ăi: parcă-i o
moară hodorogită. Numai gura lui se aude în toate părțile. Hojma
tolocănește pentru nimica toată, curat ca un nebun. Tu, măi,
ești bun de trăit numai în pădure, cu lupii și cu urșii, dar nu
în case împărătești și între niște oameni cumsecade.

— Ia ascultați, măi, dar de când ați pus voi stăpânire pe mine?
zise Gerilă. Apoi nu mă faceți din cal măgar, că vă veți găsi
mantaua cu mine! Eu îs bun cât îs bun, dar și când mă scoate
cineva din răbdare, apoi nu-i trebuie nici țigan de laie
împotriva mea.

— Zău, nu șuguiești, măi Buzilă? Da' amarnic mai ești la viață;
când te mânii, faci sânge-n baligă, zise Flămânzilă. Tare-mi
ești drag!... Te-aș vârî în sân, dar nu încapi de urechi... Ia
mai bine ogoiește-te oleacă și mai strânge-ți buzișoarele acasă;
nu de alta, dar să nu-ți pară rău pe urmă, că doar nu ești numai
tu în casa asta.

— Ei, apoi! Vorba ceea: "Fă bine, să-ți auzi rău", zise Gerilă.
Dacă nu v-am lăsat să intrați aici înaintea mea, așa mi se cade;
ba încă și mai rău decât așa. Cine-a face de altă dată ca mine,
ca mine să pățească.

— Ai dreptate, măi Gerilă, numai tu nu te cauți, zise Ochilă.
Dar cu prujituri de-a tale, ia acuși se duce noaptea, și vai de
odihna noastră. Măcar tu să fii acela, ce ai zice, când ți-a
strica cineva somnul? Ba încă ai dat peste niște oameni ai lui
Dumnezeu, dar, să fi fost cu alții, hei, hei! mâncai papara până
acum.

— Dar nu mai tăceți, măi? Că ia acuși trec cu picioarele prin
pereți și ies afară cu acoperământul în cap, zise LățiLungil ă.
Parcă nu faceți a bine, de nu vă mai astâmpără dracul nici la
vremea asta. Măi Buzilă, mi se pare că tu ești toată pricina
gâlcevei dintre noi.

— Ba bine că nu! zise Ochilă. Are el noroc de ce are, dar știu
eu ce i-ar trebui.

— Ia, să-i faci chica topor, spinarea dobă și pântecele cobză,
zise Setilă, căci altmintrelea nici nu e de chip s-o scoți la
capăt cu buclucașul acesta.

Gerilă, văzând că toți îi stau împotrivă, se mânie atunci și
unde nu trântește o brumă pe pereți, de trei palme de groasă, de
au început a clănțăni și ceilalți de frig, de sărea cămășa de pe
dânșii.

— Na! încaltea v-am făcut și eu pe obraz. De-acum înainte
spuneți ce vă place, că nu mi-a fi ciudă, zise Gerilă, râzând cu
hohot. Ei, apoi? Cică să nu te strici de râs!... De HarapAlb, nu
zic. Dar voi, mangosiților și farfasiților, de câte ori îți fi
dormit în stroh și pe târnomată, să am eu acum atâția bani în
pungă nu mi-ar mai trebui altă! Oare nu cumva v-ați face și voi,
niște feciori de ghindă, fătați în tindă, că sunteți obraze
subțiri?

— Iar cauți sămânță de vorbă, măi Buzilă? ziseră ceilalți. Al
dracului să fii cu tot neamul tău, în vecii vecilor, amin!

— De asta și eu mă anin și mă închin la cinstita fața voastră,
ca la un codru verde, cu un poloboc de vin și cu unul de pelin,
zise Gerilă. Și hai de-acum să dormim, mai acuși să ne trezim,
într-un gând să ne unim, pe Harap-Alb să-l slujim și tot
prieteni să fim; căci cu vrajbă și urgie raiul n-o să-l dobândim.

În sfârșit, ce-or fi mai dondănit ei, și cât or mai fi dondănit,
că numai iaca se face ziuă!... Și atunci, credinciosul
împăratului, crezând că s-a curățit de oaspeți, vine cu gândul
să măture scrumul afară, după rânduială. Și când ajunge mai
aproape, ce să vadă? Casa cea de aramă, înfocată așa de strașnic
de cu sară, era acum toată numai un sloi de gheață, și nu se mai
cunoștea pe din afară nici ușă, nici ușori, nici gratii, nici
obloane la ferești, nici nimica; iar înlăuntru se auzea un
tărăboi grozav; toți bocăneau la ușă cât ce puteau și strigau
cât le lua gura, zicând:

— Nu știm ce fel de împărat e acesta, de ne lasă fără scânteie
de foc în vatră, să degerăm aicea... Așa sărăcie de lemne nu s-a
văzut nici la bordeiul cel mai sărăcăcios. Vai de noi și de noi,
că ne-a înghețat limba în gură și măduva în ciolane de frig!...

Credinciosul împăratului, auzind aceste, pe de-o parte l-a
cuprins spaima, iară pe de alta s-a îndrăcit de ciudă. Și dă el
să descuie ușa, nu poate; dă s-o desprindă, nici atâta. Pe urmă,
ce să facă? Aleargă și vestește împăratului despre cele
întâmplate. Atunci vine și împăratul cu o mulțime de oameni, cu
cazmale ascuțite și cu cazane pline cu uncrop; și unii tăiau
gheața cu cazmalele, alții aruncau cu uncrop pe la țâțânile ușii
și în borta cheii și după multă trudă, cu mare ce hălăduiesc de
deschid ușa și scot pe oaspeți afară. Și când colo, ce să vezi?
Toți erau cu părul, cu barba și mustețile pline de promoroacă,
de nu-i cunoșteai, oameni sunt, draci sunt, ori alte arătări. Și
așa tremurau de tare, de le dârdâiau dinții în gură. Iară mai
ales pe Gerilă parcă-l zghihuiau toți dracii; pozne făcea cu
buzișoarele sale, încât s-a îngrozit și împăratul Roș când l-a
văzut făcând așa de frumușel.

Atunci Harap-Alb, ieșind dintre dânșii, se înfățișază cuviincios
înaintea împăratului, zicând:

— Prea înălțate împărate! Luminarea-sa, nepotul prea
puternicului Verde-împărat, m-a fi așteptând cu nerăbdare.
De-acum înainte, cred că mi-ți da fata, ca să vă lăsăm în pace
și să ne ducem în treaba noastră.

— Bine, voinice, zise împăratul, uitându-se la dânșii cam acru
oarecum; a veni ea și vremea aceea... Dar acum, deodată, ia să
ospătați ceva, ca să nu ziceți că ați ieșit din casa mea ca de
la o casă pustie.

— Parcă v-a ieșit un sfânt din gură, luminate împărate, zise
atunci Flămânzilă, că ne ghiorăiesc mațele de foame.

— Poate ni-ți da și ceva de udeală, măria-ta, zise Setilă, că ne
sfârâie gâtlejul de sete.

— Ia lăsați, măi, zise Ochilă, clipocind mereu din gene, că
luminarea-sa știe ce ne trebuie.

— Așa cred și eu, zise Păsărilă, doar, de-a putere-a hi, am
căzut la casă împărătescă, să nu vă temeți, că are înălțimea-sa
atâta purtare de grijă, ca să nu fim chinuiți cu frig, cu foame
și cu sete.

— Mai rămâne îndoială despre asta, zise Gerilă, tremurând
cumplit. Dar n-aveți știință că înălțimea-sa este tata
flămânzilor și al însetaților? Și tocmai de asta mă bucur și eu,
că de-abia m-oi mai încălzi oleacă bând sângele Domnului.

— Ei, tacă-vă gura de-acum! zise Flămânzilă. Destul e o măciucă
la un car de oale. Nu tot cetărați pe măria-sa, că om e
dumnealui. Pentru niște sărăcuți ca noi e greu de făcut trebi de
acestea. Dar la o împărăție, ca cum te-ar pișca un purice; nu se
mai bagă în seamă.

— Din partea mea, mâncarea-i numai o zăbavă; băuturica mai este
ce este, zise Setilă; și aș ruga pe luminarea-sa că, dacă are de
gând a ne ospăta, după cum s-a hotărât, apoi să ne îndesească
mai mult cu udeala, pentru că acolo stă toată puterea și
îndrăzneala. Vorba ceea: "Dă-i cu cinstea, să piară rușinea".
Dar mi se pare că ne-am prea întins cu vorba, și luminarea-sa nu
știe cum să ne mai intre în voie.

— Acum, de ne-ar da odată ce ne-ar da, zise Flămânzilă, căci mă
roade inima de foame ce-mi e!

— Ia mai îngăduiți oleacă, măi, zise Ochilă, că doar nu v-au mas
șoarecii în pântece. Acuși s-or aduce și bucatele, și vinul, și
numai de-ați avea pântece unde să le puneți.

— Îndată vi s-a aduce și demâncare, și băutură, zise împăratul,
numai de-ți putea dovedi cât vă voi da eu; că de nu-ți fi
mâncători și băutori buni, v-ați găsit beleaua cu mine, nu vă
pară lucru de șagă!

— De ne-ar da Dumnezeu tot atâta supărare, luminarea voastră,
zise atunci Flămânzilă, ținându-se cu mâinile de pântece.

— Și înălțimei-voastre gând bun și mână slobodă, ca să ne dați
cât se poate mai multă mâncare și băuturică, zise Setilă, căruia
îi lăsa gura apă, că din mâncare și băutură, las' dacă ne-a
întrece cineva; numai la treabă nu ne prea punem cu toți nebunii.

Împăratul tăcea la toate aceste, îi asculta cu dezgust și numai
înghițea noduri. Dar, în gândul său: "Bine, bine! Cercați voi
marea cu degetul, dar ia să vedem cum i-ți da de fund? Vă vor
ieși ele toate aceste pe nas". După aceea îi lasă și se duce în
casă.

În sfârșit, nu trece mult la mijloc, și numai iaca li se aduc 12
harabale cu pâine, 12 ialovițe fripte și 12 buți pline cu vin de
cel hrănit, de care, cum bei câte oleacă, pe loc ți se taie
picioarele, îți sclipesc ochii în cap, ți se încleie limba în
gură și începi a bolborosi turcește, fără să știi bechiu măcar.
Flămânzilă și Setilă ziseră atunci celorlalți:

— Măi, mâncați voi întâi și beți cât veți putea, dar nu cumva să
vă puneți mintea cu toată mâncarea și băutura, c-apoi al vostru
e dracul!

Atunci Harap-Alb, Gerilă, Ochilă și Păsări-Lăți-Lungilă se pun
ei de ospătează și beau cât le trebuie. Dar ce are a face? parcă
nici nu se cunoștea de unde au mâncat și au băut; că doar
mâncare și băutură era acolo, nu șagă; dă, ca la o împărăție.

— Hai, ia dați-vă deoparte, măi păcătoșilor, că numai ați
crâmpoțit mâncarea, ziseră atunci Flămânzilă și Setilă, care
așteptau cu neastâmpăr, fiind rupți în coș de foame și de sete.

Și atunci unde nu începe Flămânzilă a cărăbăni deodată în gură
câte o haraba de pâine și câte o ialoviță întreagă, și repede mi
ți le-a înfulecat și le-a forfecat, de parcă n-au mai fost. Iară
Setilă, dând fundurile afară la câte o bute, horp! ți-o sugea
dintr-o singură sorbitură; și, repede-repede, mi ți le-a supt pe
toate de-a rândul, de n-a mai rămas nici măcar picătură de vin
pe doage.

După aceea, Flămânzilă a început a striga în gura mare că moare
de foame și a zvârli cu ciolane în oamenii împărătești, care
erau acolo de față.

Iară Setilă striga și el cât ce putea că crapă de sete și
zvârlea cu doage și cu funduri de poloboc în toate părțile, ca
un nebun.

Împăratul atunci, auzind vuiet tocmai din casă, iese afară și,
când vede aceste, își pune mâinile în cap de necaz.

— Măi, măi, măi! Aceștia-s curat sărăcie trimisă de la Dumnezeu
pe capu meu, zise împăratul în sine, plin de amărăciune. Mi se
pare că, ia acum, mi-am dat și eu peste oameni.

Harap-Alb iese atunci din mijlocul celorlalți și iar se
înfățișază înaintea împăratului, zicând:

— Să trăiți, luminate împărate! De-acum cred că mi-ți da fata,
ca să vă lăsăm în pace și să ne ducem în treaba noastră, căci
nepotul împăratului Verde ne-a fi așteptând cu nerăbdare.

— A veni ea și vremea aceea, voinice, zise împăratul cam cu
jumătate de gură. Dar ia mai aveți puțină răbdare, căci fata
nu-i de cele de pe drumuri, s-o luați numai așa, cum s-ar
întâmpla. Ia să mai vedem cam cum ar veni trebușoara asta. Nu-i
vorbă, de mâncat ați mâncat și de băut ați băut fiecare cât
șaptesprezece. Însă de acum înainte mai aveți și ceva treabă de
făcut: iaca, vă dau o mierță de sămânță de mac, amestecată cu
una de nisip mărunțel; și, până mâine dimineață, să-mi alegeți
macul de-o parte, fir de fir, și nisipul de altă parte; nu cumva
să găsesc vreun fir de mac printre nisip sau vreunul de nisip
printre mac, că atunci am stricat pacea. Și dacă-ți putea scoate
la capăt trebușoara asta, atunci oi mai vedea eu... Iară de nu,
veți plăti cu capul obrăznicia ce ați întrebuințat față cu mine,
ca să prindă și alții la minte văzând de patima voastră.

Și apoi, ducându-se împăratul în treaba lui, i-a lăsat să-și
bată capul cum vor ști.

Atunci Harap-Alb și cu ai săi au început a strânge din umere,
nepricepându-se ce-i de făcut.

— Ei, apoi șagă vă pare? Cu chițibușuri de aceste să ne zăbovim
noi? Pâclișit om e împăratul Roș! se vede el, zise atunci
Ochilă. Eu, nu-i vorbă, măcar că e așa de întuneric, deosebesc
tare bine firele de mac din cele de nisip. Dar numai iuțeală și
gură de furnică ar trebui să aibi ca să poți apuca, alege și
culege niște flecuștețe ca aceste, în așa scurtă vreme. Bine-a
zis cine-a zis ca să te ferești de omul roș, căci e liștai
dracul în picioare, acum văd eu.

Harap-Alb își aduce atunci aminte de aripa cea de furnică, o
scoate de unde-o avea strânsă, apoi scapără și-i dă foc cu o
bucățică de iască aprinsă. Și atunci, minune mare! Numai iaca au
și început a curge furnicile cu droaia, câtă pulbere și spuză,
câtă frunză și iarbă; unele pe sub pământ, altele pe deasupra
pământului și altele în zbor, de nu se mai curmau venind. Și,
într-un buc, au și ales nisipul de-o parte și macul de altă
parte; să fi dat mii de mii de lei, nu găseai fir de mac printre
nisip sau fir de nisip printre mac. Și apoi, în zori de ziuă,
când e somnul mai dulce, de doarme și pământul sub om, o mulțime
de furnici de cele mărunțele au străbătut înlăuntrul palatului
și au început a pișca din somn pe împăratul, de-l frigeau, nu
altăceva. Și văzându-se el cuprins de așa usturime, s-a sculat
cu nepus în masă, căci nu mai era de chip să doarmă, cum dormea
alte dăți, până pe la amiază, nesupărat de nimene. Și, cum s-a
sculat, a și început a căuta cu de-amănuntul prin așternut, să
vadă ce poate să fie. Dar a găsit nimica toată, căci furnicile
parcă intrară în pământ; s-au mistuit, de nu se știe ce s-au mai
făcut.

— A dracului treabă! Uite ce blândă mi-a ieșit pe trup. Să fi
fost nimica... parcă nu-mi vine a crede. Însă mai știu eu?...
Ori părerea mă înșală, ori s-a stricat vremea, zise împăratul;
din două, una trebuie să fie numaidecât. Dar, până una-alta, ia
să mă duc să văd: ales-au nisipul de mac acei nespălați, care-mi
rod urechile să le dau fata?

Și când se duce împăratul și vede cum se îndeplinise de bine
porunca lui, se umple de bucurie... Și, nemaiavând ce pricină să
le caute, rămâne pe gânduri.

Atunci Harap-Alb iar iese din mijlocul celorlalți și se
înfățișază împăratului, zicând:

— Preaînălțate împărate, de-acum cred că mi-ți da fata, ca să vă
lăsăm în pace și să ne ducem de unde am venit.

— A veni ea și vremea aceea, voinice, zise împăratul, îngânând
vorba printre dinți, dar până atunci mai este încă treabă; iaca
ce aveți de făcut: fata mea are să se culce desară unde se culcă
totdeauna, iară voi să mi-o străjuiți toată noaptea. Și dacă
mâine dimineață s-a afla tot colo, atunci poate să ți-o dau;
iară de nu, ce-i păți, cu nime nu-i împărți... Înțeles-ați?

— Să trăiți, luminate împărate, răspunse Harap-Alb, numai de
n-ar fi mai multă întârziere, căci stăpânul mă așteaptă și
grozavă urgie poate să cadă pe capul meu din astă pricină.

— Stăpânu-tău, ca stăpânu-tău; ce ți-a face el, asta-i deosebit
de bașcă, zise împăratul, uitându-se chiorâș la dânșii. Ieie-vă
macar și pielea de pe cap, ce am eu de-acolo? Însă pe mine
căutați să nu mă smintiți: fata și ochii din cap, căci atâta
vi-i leacul; v-ați dus pe copce, cu toată șmecheria voastră.

După aceasta, împăratul îi lasă încurcați și se duce la ale sale.

— Aici încă trebuie să fie un drac la mijloc, zise Gerilă,
clătinând din cap.

— Ba încă de cei bătrâni; săgeata de noapte și dracul cel de
amiazăzi, răspunse Ochilă. Dar nu și-a juca el mendrele
îndelung, așa cred eu.

În sfârșit, durai-vurai, seara vine, fata se culcă și HarapAlb
se pune de strajă chiar la ușa ei, iară ceilalți se înșiră tot
câte unul-unul până la poartă, după poruncă.

Și, când pe aproape de miezul nopții, fata împăratului se
preface într-o păsărică și zboară nevăzută printre cinci străji.
Dar când ajunge pe la străjerul Ochilă, el, sireicanul, mi ți-o
vede și dă de știre lui Păsărilă, zicând:

— Măi, fetișoara împăratului ne-a tras butucul. A dracului
zgâtie de fată! s-a prefăcut în păsărică, a zburat ca săgeata pe
lângă ceilalți și ei habar n-au despre asta. Ei, apoi? Lasă-te
în seama lor dacă vrei să rămâi făr' de cap. De-acum, numai noi
o putem găsi și aduce la urma ei. Taci molcum și haidem după
dânsa. Eu ți-oi arăta-o pe unde se ascunde, iară tu să mi-o
prinzi cum ți-i meșteșugul și să-i strâmbi gâtul oleacă, să se
învețe ea de altă dată a mai purta lumea pe degete.

Și atunci, odată și pornesc ei după dânsa, și nu merg tocmai
mult și Ochilă zice:

— Măi Păsărilă, iacătă-o, ia! colo, în dosul pământului,
tupilată sub umbra iepurelui; pune mâna pe dânsa și n-o lăsa!

Păsărilă atunci se lățește cât ce poate, începe a bojbăi prin
toate buruienile și, când să pună mâna pe dânsa, zbr! pe vârful
unui munte, și se ascunde după o stâncă.

— Iacătă-oi, măi, colo, în vârful muntelui, după stânca ceea,
zise Ochilă.

Păsărilă atunci se înalță puțin și începe a cotrobăi pe după
stânci; și când să pună mâna pe dânsa, zbr! și de acolo și se
duce de se ascunde tocmai după lună.

— Măi Păsărilă, iacătă-oi, ia! colo, după lună, zise Ochilă;
căci nu pot eu s-o ajung, să-i dau o scărmănătură bună.

Atunci Păsărilă se deșiră odată și se înalță până la lună. Apoi,
cuprinzând luna în brațe, găbuiește păsărica, mi ți-o înșfacă de
coadă și cât pe ce să-i sucească gâtul. Ea atunci se preface în
fată și strigă înspăimântată:

— Dăruiește-mi viața, Păsărilă, că te-oi dărui și eu cu milă și
cu daruri împărătești, așa să trăiești!

— Ba că chiar că erai să ne dăruiești cu milă și cu daruri
împărătești, dacă nu te vedeam când ai pașlit-o, farmazoană ce
ești! zise Ochilă. Știu că am tras o durdură bună căutându-te.
Ia, mai bine hai la culcuș, că se face ziuă acuși. Ș-apoi, ce-a
mai fi a mai fi.

Și odată mi ți-o înșfacă ei, unul de-o mână și altul de cealaltă
și hai! hai, hai! în zori de ziuă ajung la palat și, trecând cu
dânsa printre străji, o silesc să intre în odaia ei, tot cum a
ieșit.

— Ei, Harap-Alb, zise atunci Ochilă, dacă nu eram eu și cu
Păsărilă, ce făceați voi acum? Iaca așa, tot omul are un dar și
un amar; și unde prisosește darul nu se mai bagă în seamă
amarul. Amar era să fie de voi, de nu eram noi amândoi. Și cu
străjuirea voastră, era vai de pielea noastră!

Harap-Alb și ceilalți, nemaiavând ce zice, pleacă capul
rușinați, mulțumind lui Păsărilă și vestitului Ochilă, căci
le-au fost ca niște frați.

Și atunci, numai iaca și împăratul vine ca un leu-paraleu, să-și
ia fata pe seamă și, când o găsește sub strajă, după cum nu se
aștepta el, numa-i scânteiau ochii în cap de ciudă, dar nu avu
ce face.

Atunci Harap-Alb iar se înfățișază înaintea împăratului, zicând:

— Luminate împărate, de-acum cred că mi-ți da fata, ca să vă
lăsăm în pace și să ne ducem în treaba noastră.

— Bine, voinice, zise împăratul posomorât; a veni ea și vremea
aceea. Însă eu mai am o fată, luată de suflet, tot de o vârstă
cu fata mea; și nu e deosebire între dânsele nici la frumusețe,
nici la stat, nici la purtat. Hai, și dacă-i cunoaște-o care-i a
mea adevărată, ia-ți-o și duceți-vă de pe capul meu, că mi-ați
scos peri albi, de când ați venit. Iaca, mă duc să le pregătesc,
zise împăratul. Tu vină după mine, și, dacă-i ghici-o, ferice de
tine a fi. Iară de nu, luați-vă catrafusele și începeți a vă
cărăbăni de la casa mea, căci nu vă mai pot suferi!

Și ducându-se împăratul, pune de piaptănă și îmbracă la fel pe
amândouă fetele și apoi dă poruncă să vie Harap-Alb să ghicească
fata împăratului.

Harap-Alb, văzându-se pus în încurcală, nu mai știa ce să facă
și încotro să-o dea ca să nu greșească tocmai acum, la ducă. Și,
mai stând el pe gânduri oleacă, cum e omul tulburat, își aduce
aminte de aripa cea de albină și, scoțând-o de unde-o avea
strânsă, scapără și-i dă foc cu o bucățică de iască aprinsă. Și
atunci, numai iaca se pomenește cu crăiasa albinelor.

— Ce nevoie te-a ajuns de mine, Harap-Alb? zise ea, zburând pe
umărul său. Spune-mi, căci sunt gata să te slujesc.

Atunci Harap-Alb începe a-i spune toate cu de-amănuntul și o
roagă de toți dumnezeii ca să-i dea ajutor.

— N-ai grijă, Harap-Alb, zise crăiasa albinelor; las' că te fac
eu s-o cunoști și dintr-o mie. Hai, intră în casă cu
îndrăzneală, căci am să fiu și eu pe-acolo. Și cum îi intra,
stai puțin și te uită la fete; și care-i vedea-o că se apără cu
năframa, să știi că aceea este fata împăratului.

Atunci Harap-Alb intră, cu albina pe umăr, în odaia unde era
împăratul și cu fetele, apoi stă puțin deoparte și începe a se
uita când la una, când la alta. Și cum sta el drept ca lumânarea
și le privea, cu băgare de seamă, crăiasa albinelor zboară pe
obrazul fetei împăratului. Atunci ea, tresărind, odată începe a
țipa și a se apăra cu năframa, ca de un dușman. Lui Harap-Alb
atâta i-a trebuit: îndată face câțiva pași spre dânsa, o apucă
frumușel de mână și zice împăratului:

— Luminarea-voastră, de-acum cred că nu mi-ți mai face nici o
împiedicare, pentru că am adus întru îndeplinire tot ceea ce
ne-ați poruncit.

— Din partea mea poți s-o iei de-acum, Harap-Alb, zise
împăratul, ovilit și sarbăd la față de supărare și rușine; dacă
n-a fost ea vrednică să vă răpuie capul, fii măcar tu vrednic
s-o stăpânești, căci acum ți-o dau cu toată inima.

Harap-Alb mulțumește atunci împăratului și apoi zice fetei: —
De-acum putem să mergem, căci stăpânu-meu, luminarea-sa nepotul
împăratului Verde, a fi îmbătrânit așteptându-mă.

— Ia mai îngăduiește puțin, nerăbdătorule, zise fata
împăratului, luând o turturică în brațe, spunându-i nu știu ce
la ureche și sărutând-o cu drag; nu te grăbi așa, Harap-Alb, că
te-i pripi. Stai, că mai ai și cu mine oleacă de vorbă: înainte
de pornire, trebuie să meargă calul tău și cu turturica mea
să-mi aducă trei smicele de măr dulce și apă vie și apă moartă
de unde se bat munții în capete. Și de-a veni turturica mea
înainte cu smicelele și apa, ia-ți nădejdea despre mine, căci nu
merg, ferească Dumnezeu! Iară de-i avea noroc și-a veni calul
tău mai întâi și mi-o aduce cele poruncite, să știi că merg cu
tine, oriunde mi-i duce; s-a mântuit socoteala.

Și atunci, odată pornesc și turturica și calul, fugind pe
întrecute, când pe sus, când pe jos, după cum cerea trebuința.

Dar turturica, fiind mai ușoară, ajunge mai înainte; și pândind
tocmai când era soarele în cruce, de se odihneau munții numai
pentru o clipită, se repede ca prin foc și ia trei smicele de
măr dulce și apă vie și apă moartă, și apoi ca fulgerul se
întoarce înapoi. Și, când pe la poarta munților, calul îi iese
înainte, o propește în cale și o ia cu măgulelile, zicându-i:

— Turturică-rică, dragă păsărică, adă la mine cele trei smicele
de măr dulce, apa cea vie și cea moartă, și tu du-te înapoi
de-ți ia altele și mi-i ajunge pe drum, căci ești mai sprintenă
decât mine. Hai, nu mai sta la îndoială și dă-mi-le, căci atunci
are să fie bine și de stăpânu-meu, și de stăpână-ta, și de mine,
și de tine; iară de nu mi li-i da, stăpânu-meu Harap-Alb este în
primejdie, și de noi încă n-are să fie bine.

Turturica parcă n-ar fi voit. Dar calul n-o mai întreabă de ce-i
e cojocul; se repede și-i ia apa și smicelele cu hapca și apoi
fuge cu dânsele la fata împăratului și i le dă, de față cu
Harap-Alb. Atunci lui Harap-Alb i s-a umplut inima de bucurie.

Vine ea și turturica mai pe urmă, dar ce-ți e bună? — Alei,
țolină ce-mi ești, zise fata împăratului; da' bine m-ai vândut.
Dacă e așa, hai, pornește chiar acum la împăratul Verde și
vestește-i că venim și noi în urmă.

Atunci turturica pornește. Iară fata împăratului îngenunche
dinaintea tătâne-său și zice:

— Binecuvântează-mă, tată, și rămâi sănătos! Se vede că așa mi-a
fost sortit și n-am ce face; trebuie să merg cu HarapAlb, și
pace bună!

După aceasta, își ia cele trebuitoare la drum, apoi încalecă și
ea pe un cal năzdrăvan și stă gata de pornire. Iară HarapAlb,
luându-și oamenii săi, încalecă și el și pornesc spre împărăție,
Dumnezeu să ne ție, că cuvântul din poveste, înainte mult mai
este.

Mers-au ei și zi și noapte, nu se știe cât au mers; și, de la un
loc, Gerilă, Flămânzilă și Setilă, Păsări-Lăți-Lungilă și
năzdrăvanul Ochilă se opresc cu toții în cale, se opresc și zic
cu jale:

— Harap-Alb, mergi sănătos! De-am fost răi, tu ni-i ierta, căci
și răul câteodată prinde bine la ceva.

Harap-Alb le mulțumește ș-apoi pleacă liniștit. Fata vesel îi
zâmbește, luna-n cer a asfințit. Dar în pieptul lor răsare... Ce
răsare? Ia, un dor; soare mândru, luminos și în sine arzător, ce
se naște din scânteia unui ochi fermecător!

Și mai merg ei cât mai merg, și de ce mergeau înainte, de ce lui
Harap-Alb i se tulburau mințile, uitându-se la fată și văzând-o
cât era de tânără, de frumoasă și plină de vină-ncoace.

Sălățile din Grădina Ursului, pielea și capul cerbului le-a dus
la stăpânu-său cu toată inima. Dar pe fata împăratului Roș mai
nu-i venea s-o ducă, fiind nebun de dragostea ei. Căci era boboc
de trandafir din luna lui mai, scăldat în roua dimineții,
dezmierdat de cele întâi raze ale soarelui, legănat de adierea
vântului și neatins de ochii fluturilor. Sau, cum s-ar mai zice
la noi în țărănește, era frumoasă de mama focului; la soare te
puteai uita, iar la dânsa ba. Și de-aceea Harap- Alb o prăpădea
din ochi de dragă ce-i era. Nu-i vorbă, și ea fura cu ochii, din
când în când, pe Harap-Alb, și în inima ei parcă se petrecea nu
știu ce... poate vreun dor ascuns, care nu-i venea a-l spune.
Vorba cântecului:

Fugi de-acole, vină-ncoace!
Șezi binișor, nu-mi da pace!
sau mai știu eu cum să zic, ca să nu greșesc? Dar știu atâta, că
ei mergeau fără a simți că merg, părându-li-se calea scurtă și
vremea și mai scurtă; ziua ceas și ceasul clipă; dă, cum e omul
când merge la drum cu dragostea alăturea.

Nu știa sărmanul Harap-Alb ce-l așteaptă acasă, căci nu s-ar mai
fi gândit la de-alde acestea.

Însă vorba cântecului:

De-ar ști omul ce-ar păți,
Dinainte s-ar păzi!
Dar iaca ce m-am apucat de spus. Mai bine vă spuneam că
turturica ajunsese la împăratul Verde și-l înștiințase că vine
și Harap-Alb cu fata împăratului Roș.

Atunci împăratul Verde a și început a face pregătire, ca pentru
o fată de împărat, dând și poruncă să le iasă întru întâmpinare.
Iară Spânul icnea în sine și se gândea numai la răzbunare.

În sfârșit, mai merge Harap-Alb cu fata împăratului cât mai
merge, și de la o vreme ajung și ei la împărăție.

Și, când colo, numai iaca ce le ies înainte împăratul Verde,
fetele sale, Spânul și toată curtea împărătească, ca să-i
primească. Și văzând Spânul cât e de frumoasă fata împăratului
Roș, odată se repede să o ia în brațe de pe cal. Dar fata îi
pune atunci mâna pe piept, îl brâncește cât colo și zice:

— Lipsește dinaintea mea, Spânule! Doar n-am venit pentru tine,
ș-am venit pentru Harap-Alb, căci el este adevăratul nepot al
împăratului Verde.

Atunci împăratul Verde și fetele sale au rămas încremeniți de
ceea ce au auzit. Iar Spânul, văzând că i s-a dat vicleșugul pe
față, se repede ca un câine turbat la Harap-Alb și-i zboară
capul dintr-o singură lovitură de paloș, zicând:

— Na! așa trebuie să pățească cine calcă jurământul! Dar calul
lui Harap-Alb îndată se repede și el la Spân și-i zice:

— Pân-aici, Spânule! Și odată mi ți-l înșfacă cu dinții de cap,
zboară cu dânsul în înaltul cerului, și apoi, dându-i drumul
de-acolo, se face Spânul până jos praf și pulbere. Iară fata
împăratului Roș, în vălmășagul acesta, repede pune capul lui
Harap-Alb la loc, îl înconjură de trei ori cu cele trei smicele
de măr dulce, toarnă apă moartă, să stea sângele și să se prindă
pielea, apoi îl stropește cu apă vie, și atunci Harap-Alb îndată
învie și, ștergându-se cu mâna pe la ochi, zice suspinând:

— Ei, da' din greu mai adormisem! — Dormeai tu mult și bine,
Harap-Alb, de nu eram eu, zise fata împăratului Roș, sărutându-l
cu drag și dându-i iar paloșul în stăpânire.

Și apoi, îngenunchind amândoi dinaintea împăratului Verde, își
jură credință unul altuia, primind binecuvântare de la dânsul și
împărăția totodată.

După aceasta se începe nunta, ș-apoi, dă Doamne bine!

Lumea de pe lume s-a strâns de privea,
Soarele și luna din cer le râdea.
Ș-apoi fost-au fost poftiți la nuntă: Crăiasa furnicilor,
Crăiasa albinelor și Crăiasa zânelor, minunea minunilor din
ostrovul florilor!

Și mai fost-au poftiți încă: crai, crăiese și-mpărați, oameni în
seamă băgați, ș-un păcat de povestar, fără bani în buzunar.
Veselie mare între toți era, chiar și sărăcimea ospăta și bea!

Și a ținut veselia ani întregi, și acum mai ține încă; cine se
duce acolo bea și mănâncă. Iar pe la noi, cine are bani bea și
mănâncă, iară cine nu, se uită și rabdă.
EOT;

    /*
    *** START: FULL LICENSE ***

    Creative Commons Legal Code

    Attribution-ShareAlike 3.0 Unported


    CREATIVE COMMONS CORPORATION IS NOT A LAW FIRM AND DOES NOT PROVIDE
    LEGAL SERVICES. DISTRIBUTION OF THIS LICENSE DOES NOT CREATE AN
    ATTORNEY-CLIENT RELATIONSHIP. CREATIVE COMMONS PROVIDES THIS
    INFORMATION ON AN "AS-IS" BASIS. CREATIVE COMMONS MAKES NO WARRANTIES
    REGARDING THE INFORMATION PROVIDED, AND DISCLAIMS LIABILITY FOR
    DAMAGES RESULTING FROM ITS USE. License

    THE WORK (AS DEFINED BELOW) IS PROVIDED UNDER THE TERMS OF THIS
    CREATIVE COMMONS PUBLIC LICENSE ("CCPL" OR "LICENSE"). THE WORK IS
    PROTECTED BY COPYRIGHT AND/OR OTHER APPLICABLE LAW. ANY USE OF THE
    WORK OTHER THAN AS AUTHORIZED UNDER THIS LICENSE OR COPYRIGHT LAW IS
    PROHIBITED.

    BY EXERCISING ANY RIGHTS TO THE WORK PROVIDED HERE, YOU ACCEPT AND
    AGREE TO BE BOUND BY THE TERMS OF THIS LICENSE. TO THE EXTENT THIS
    LICENSE MAY BE CONSIDERED TO BE A CONTRACT, THE LICENSOR GRANTS YOU
    THE RIGHTS CONTAINED HERE IN CONSIDERATION OF YOUR ACCEPTANCE OF SUCH
    TERMS AND CONDITIONS.

    1. Definitions

    "Adaptation" means a work based upon the Work, or upon the Work and
    other pre-existing works, such as a translation, adaptation,
    derivative work, arrangement of music or other alterations of a
    literary or artistic work, or phonogram or performance and includes
    cinematographic adaptations or any other form in which the Work may be
    recast, transformed, or adapted including in any form recognizably
    derived from the original, except that a work that constitutes a
    Collection will not be considered an Adaptation for the purpose of
    this License. For the avoidance of doubt, where the Work is a musical
    work, performance or phonogram, the synchronization of the Work in
    timed-relation with a moving image ("synching") will be considered an
    Adaptation for the purpose of this License. "Collection" means a
    collection of literary or artistic works, such as encyclopedias and
    anthologies, or performances, phonograms or broadcasts, or other works
    or subject matter other than works listed in Section 1(f) below,
    which, by reason of the selection and arrangement of their contents,
    constitute intellectual creations, in which the Work is included in
    its entirety in unmodified form along with one or more other
    contributions, each constituting separate and independent works in
    themselves, which together are assembled into a collective whole. A
    work that constitutes a Collection will not be considered an
    Adaptation (as defined below) for the purposes of this License.
    "Creative Commons Compatible License" means a license that is listed
    at http://creativecommons.org/compatiblelicenses that has been
    approved by Creative Commons as being essentially equivalent to this
    License, including, at a minimum, because that license: (i) contains
    terms that have the same purpose, meaning and effect as the License
    Elements of this License; and, (ii) explicitly permits the relicensing
    of adaptations of works made available under that license under this
    License or a Creative Commons jurisdiction license with the same
    License Elements as this License. "Distribute" means to make available
    to the public the original and copies of the Work or Adaptation, as
    appropriate, through sale or other transfer of ownership. "License
    Elements" means the following high-level license attributes as
    selected by Licensor and indicated in the title of this License:
    Attribution, ShareAlike. "Licensor" means the individual, individuals,
    entity or entities that offer(s) the Work under the terms of this
    License. "Original Author" means, in the case of a literary or
    artistic work, the individual, individuals, entity or entities who
    created the Work or if no individual or entity can be identified, the
    publisher; and in addition (i) in the case of a performance the
    actors, singers, musicians, dancers, and other persons who act, sing,
    deliver, declaim, play in, interpret or otherwise perform literary or
    artistic works or expressions of folklore; (ii) in the case of a
    phonogram the producer being the person or legal entity who first
    fixes the sounds of a performance or other sounds; and, (iii) in the
    case of broadcasts, the organization that transmits the broadcast.
    "Work" means the literary and/or artistic work offered under the terms
    of this License including without limitation any production in the
    literary, scientific and artistic domain, whatever may be the mode or
    form of its expression including digital form, such as a book,
    pamphlet and other writing; a lecture, address, sermon or other work
    of the same nature; a dramatic or dramatico-musical work; a
    choreographic work or entertainment in dumb show; a musical
    composition with or without words; a cinematographic work to which are
    assimilated works expressed by a process analogous to cinematography;
    a work of drawing, painting, architecture, sculpture, engraving or
    lithography; a photographic work to which are assimilated works
    expressed by a process analogous to photography; a work of applied
    art; an illustration, map, plan, sketch or three-dimensional work
    relative to geography, topography, architecture or science; a
    performance; a broadcast; a phonogram; a compilation of data to the
    extent it is protected as a copyrightable work; or a work performed by
    a variety or circus performer to the extent it is not otherwise
    considered a literary or artistic work. "You" means an individual or
    entity exercising rights under this License who has not previously
    violated the terms of this License with respect to the Work, or who
    has received express permission from the Licensor to exercise rights
    under this License despite a previous violation. "Publicly Perform"
    means to perform public recitations of the Work and to communicate to
    the public those public recitations, by any means or process,
    including by wire or wireless means or public digital performances; to
    make available to the public Works in such a way that members of the
    public may access these Works from a place and at a place individually
    chosen by them; to perform the Work to the public by any means or
    process and the communication to the public of the performances of the
    Work, including by public digital performance; to broadcast and
    rebroadcast the Work by any means including signs, sounds or images.
    "Reproduce" means to make copies of the Work by any means including
    without limitation by sound or visual recordings and the right of
    fixation and reproducing fixations of the Work, including storage of a
    protected performance or phonogram in digital form or other electronic
    medium. 2. Fair Dealing Rights. Nothing in this License is intended to
    reduce, limit, or restrict any uses free from copyright or rights
    arising from limitations or exceptions that are provided for in
    connection with the copyright protection under copyright law or other
    applicable laws.

    3. License Grant. Subject to the terms and conditions of this License,
    Licensor hereby grants You a worldwide, royalty-free, non-exclusive,
    perpetual (for the duration of the applicable copyright) license to
    exercise the rights in the Work as stated below:

    to Reproduce the Work, to incorporate the Work into one or more
    Collections, and to Reproduce the Work as incorporated in the
    Collections; to create and Reproduce Adaptations provided that any
    such Adaptation, including any translation in any medium, takes
    reasonable steps to clearly label, demarcate or otherwise identify
    that changes were made to the original Work. For example, a
    translation could be marked "The original work was translated from
    English to Spanish," or a modification could indicate "The original
    work has been modified."; to Distribute and Publicly Perform the Work
    including as incorporated in Collections; and, to Distribute and
    Publicly Perform Adaptations. For the avoidance of doubt:

    Non-waivable Compulsory License Schemes. In those jurisdictions in
    which the right to collect royalties through any statutory or
    compulsory licensing scheme cannot be waived, the Licensor reserves
    the exclusive right to collect such royalties for any exercise by You
    of the rights granted under this License; Waivable Compulsory License
    Schemes. In those jurisdictions in which the right to collect
    royalties through any statutory or compulsory licensing scheme can be
    waived, the Licensor waives the exclusive right to collect such
    royalties for any exercise by You of the rights granted under this
    License; and, Voluntary License Schemes. The Licensor waives the right
    to collect royalties, whether individually or, in the event that the
    Licensor is a member of a collecting society that administers
    voluntary licensing schemes, via that society, from any exercise by
    You of the rights granted under this License. The above rights may be
    exercised in all media and formats whether now known or hereafter
    devised. The above rights include the right to make such modifications
    as are technically necessary to exercise the rights in other media and
    formats. Subject to Section 8(f), all rights not expressly granted by
    Licensor are hereby reserved.

    4. Restrictions. The license granted in Section 3 above is expressly
    made subject to and limited by the following restrictions:

    You may Distribute or Publicly Perform the Work only under the terms
    of this License. You must include a copy of, or the Uniform Resource
    Identifier (URI) for, this License with every copy of the Work You
    Distribute or Publicly Perform. You may not offer or impose any terms
    on the Work that restrict the terms of this License or the ability of
    the recipient of the Work to exercise the rights granted to that
    recipient under the terms of the License. You may not sublicense the
    Work. You must keep intact all notices that refer to this License and
    to the disclaimer of warranties with every copy of the Work You
    Distribute or Publicly Perform. When You Distribute or Publicly
    Perform the Work, You may not impose any effective technological
    measures on the Work that restrict the ability of a recipient of the
    Work from You to exercise the rights granted to that recipient under
    the terms of the License. This Section 4(a) applies to the Work as
    incorporated in a Collection, but this does not require the Collection
    apart from the Work itself to be made subject to the terms of this
    License. If You create a Collection, upon notice from any Licensor You
    must, to the extent practicable, remove from the Collection any credit
    as required by Section 4(c), as requested. If You create an
    Adaptation, upon notice from any Licensor You must, to the extent
    practicable, remove from the Adaptation any credit as required by
    Section 4(c), as requested. You may Distribute or Publicly Perform an
    Adaptation only under the terms of: (i) this License; (ii) a later
    version of this License with the same License Elements as this
    License; (iii) a Creative Commons jurisdiction license (either this or
    a later license version) that contains the same License Elements as
    this License (e.g., Attribution-ShareAlike 3.0 US)); (iv) a Creative
    Commons Compatible License. If you license the Adaptation under one of
    the licenses mentioned in (iv), you must comply with the terms of that
    license. If you license the Adaptation under the terms of any of the
    licenses mentioned in (i), (ii) or (iii) (the "Applicable License"),
    you must comply with the terms of the Applicable License generally and
    the following provisions: (I) You must include a copy of, or the URI
    for, the Applicable License with every copy of each Adaptation You
    Distribute or Publicly Perform; (II) You may not offer or impose any
    terms on the Adaptation that restrict the terms of the Applicable
    License or the ability of the recipient of the Adaptation to exercise
    the rights granted to that recipient under the terms of the Applicable
    License; (III) You must keep intact all notices that refer to the
    Applicable License and to the disclaimer of warranties with every copy
    of the Work as included in the Adaptation You Distribute or Publicly
    Perform; (IV) when You Distribute or Publicly Perform the Adaptation,
    You may not impose any effective technological measures on the
    Adaptation that restrict the ability of a recipient of the Adaptation
    from You to exercise the rights granted to that recipient under the
    terms of the Applicable License. This Section 4(b) applies to the
    Adaptation as incorporated in a Collection, but this does not require
    the Collection apart from the Adaptation itself to be made subject to
    the terms of the Applicable License. If You Distribute, or Publicly
    Perform the Work or any Adaptations or Collections, You must, unless a
    request has been made pursuant to Section 4(a), keep intact all
    copyright notices for the Work and provide, reasonable to the medium
    or means You are utilizing: (i) the name of the Original Author (or
    pseudonym, if applicable) if supplied, and/or if the Original Author
    and/or Licensor designate another party or parties (e.g., a sponsor
    institute, publishing entity, journal) for attribution ("Attribution
    Parties") in Licensor's copyright notice, terms of service or by other
    reasonable means, the name of such party or parties; (ii) the title of
    the Work if supplied; (iii) to the extent reasonably practicable, the
    URI, if any, that Licensor specifies to be associated with the Work,
    unless such URI does not refer to the copyright notice or licensing
    information for the Work; and (iv) , consistent with Ssection 3(b), in
    the case of an Adaptation, a credit identifying the use of the Work in
    the Adaptation (e.g., "French translation of the Work by Original
    Author," or "Screenplay based on original Work by Original Author").
    The credit required by this Section 4(c) may be implemented in any
    reasonable manner; provided, however, that in the case of a Adaptation
    or Collection, at a minimum such credit will appear, if a credit for
    all contributing authors of the Adaptation or Collection appears, then
    as part of these credits and in a manner at least as prominent as the
    credits for the other contributing authors. For the avoidance of
    doubt, You may only use the credit required by this Section for the
    purpose of attribution in the manner set out above and, by exercising
    Your rights under this License, You may not implicitly or explicitly
    assert or imply any connection with, sponsorship or endorsement by the
    Original Author, Licensor and/or Attribution Parties, as appropriate,
    of You or Your use of the Work, without the separate, express prior
    written permission of the Original Author, Licensor and/or Attribution
    Parties. Except as otherwise agreed in writing by the Licensor or as
    may be otherwise permitted by applicable law, if You Reproduce,
    Distribute or Publicly Perform the Work either by itself or as part of
    any Adaptations or Collections, You must not distort, mutilate, modify
    or take other derogatory action in relation to the Work which would be
    prejudicial to the Original Author's honor or reputation. Licensor
    agrees that in those jurisdictions (e.g. Japan), in which any exercise
    of the right granted in Section 3(b) of this License (the right to
    make Adaptations) would be deemed to be a distortion, mutilation,
    modification or other derogatory action prejudicial to the Original
    Author's honor and reputation, the Licensor will waive or not assert,
    as appropriate, this Section, to the fullest extent permitted by the
    applicable national law, to enable You to reasonably exercise Your
    right under Section 3(b) of this License (right to make Adaptations)
    but not otherwise. 5. Representations, Warranties and Disclaimer

    UNLESS OTHERWISE MUTUALLY AGREED TO BY THE PARTIES IN WRITING,
    LICENSOR OFFERS THE WORK AS-IS AND MAKES NO REPRESENTATIONS OR
    WARRANTIES OF ANY KIND CONCERNING THE WORK, EXPRESS, IMPLIED,
    STATUTORY OR OTHERWISE, INCLUDING, WITHOUT LIMITATION, WARRANTIES OF
    TITLE, MERCHANTIBILITY, FITNESS FOR A PARTICULAR PURPOSE,
    NONINFRINGEMENT, OR THE ABSENCE OF LATENT OR OTHER DEFECTS, ACCURACY,
    OR THE PRESENCE OF ABSENCE OF ERRORS, WHETHER OR NOT DISCOVERABLE.
    SOME JURISDICTIONS DO NOT ALLOW THE EXCLUSION OF IMPLIED WARRANTIES,
    SO SUCH EXCLUSION MAY NOT APPLY TO YOU.

    6. Limitation on Liability. EXCEPT TO THE EXTENT REQUIRED BY
    APPLICABLE LAW, IN NO EVENT WILL LICENSOR BE LIABLE TO YOU ON ANY
    LEGAL THEORY FOR ANY SPECIAL, INCIDENTAL, CONSEQUENTIAL, PUNITIVE OR
    EXEMPLARY DAMAGES ARISING OUT OF THIS LICENSE OR THE USE OF THE WORK,
    EVEN IF LICENSOR HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.

    7. Termination

    This License and the rights granted hereunder will terminate
    automatically upon any breach by You of the terms of this License.
    Individuals or entities who have received Adaptations or Collections
    from You under this License, however, will not have their licenses
    terminated provided such individuals or entities remain in full
    compliance with those licenses. Sections 1, 2, 5, 6, 7, and 8 will
    survive any termination of this License. Subject to the above terms
    and conditions, the license granted here is perpetual (for the
    duration of the applicable copyright in the Work). Notwithstanding the
    above, Licensor reserves the right to release the Work under different
    license terms or to stop distributing the Work at any time; provided,
    however that any such election will not serve to withdraw this License
    (or any other license that has been, or is required to be, granted
    under the terms of this License), and this License will continue in
    full force and effect unless terminated as stated above. 8.
    Miscellaneous

    Each time You Distribute or Publicly Perform the Work or a Collection,
    the Licensor offers to the recipient a license to the Work on the same
    terms and conditions as the license granted to You under this License.
    Each time You Distribute or Publicly Perform an Adaptation, Licensor
    offers to the recipient a license to the original Work on the same
    terms and conditions as the license granted to You under this License.
    If any provision of this License is invalid or unenforceable under
    applicable law, it shall not affect the validity or enforceability of
    the remainder of the terms of this License, and without further action
    by the parties to this agreement, such provision shall be reformed to
    the minimum extent necessary to make such provision valid and
    enforceable. No term or provision of this License shall be deemed
    waived and no breach consented to unless such waiver or consent shall
    be in writing and signed by the party to be charged with such waiver
    or consent. This License constitutes the entire agreement between the
    parties with respect to the Work licensed here. There are no
    understandings, agreements or representations with respect to the Work
    not specified here. Licensor shall not be bound by any additional
    provisions that may appear in any communication from You. This License
    may not be modified without the mutual written agreement of the
    Licensor and You. The rights granted under, and the subject matter
    referenced, in this License were drafted utilizing the terminology of
    the Berne Convention for the Protection of Literary and Artistic Works
    (as amended on September 28, 1979), the Rome Convention of 1961, the
    WIPO Copyright Treaty of 1996, the WIPO Performances and Phonograms
    Treaty of 1996 and the Universal Copyright Convention (as revised on
    July 24, 1971). These rights and subject matter take effect in the
    relevant jurisdiction in which the License terms are sought to be
    enforced according to the corresponding provisions of the
    implementation of those treaty provisions in the applicable national
    law. If the standard suite of rights granted under applicable
    copyright law includes additional rights not granted under this
    License, such additional rights are deemed to be included in the
    License; this License is not intended to restrict the license of any
    rights under applicable law. Creative Commons Notice

    Creative Commons is not a party to this License, and makes no warranty
    whatsoever in connection with the Work. Creative Commons will not be
    liable to You or any party on any legal theory for any damages
    whatsoever, including without limitation any general, special,
    incidental or consequential damages arising in connection to this
    license. Notwithstanding the foregoing two (2) sentences, if Creative
    Commons has expressly identified itself as the Licensor hereunder, it
    shall have all rights and obligations of Licensor.

    Except for the limited purpose of indicating to the public that the
    Work is licensed under the CCPL, Creative Commons does not authorize
    the use by either party of the trademark "Creative Commons" or any
    related trademark or logo of Creative Commons without the prior
    written consent of Creative Commons. Any permitted use will be in
    compliance with Creative Commons' then-current trademark usage
    guidelines, as may be published on its website or otherwise made
    available upon request from time to time. For the avoidance of doubt,
    this trademark restriction does not form part of the License.

    Creative Commons may be contacted at http://creativecommons.org/.
    */
}
";s:45:" phpDocumentor\Reflection\Php\File namespaces";a:1:{s:21:"\Faker\Provider\ro_MD";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:21:"\Faker\Provider\ro_MD";s:36:" phpDocumentor\Reflection\Fqsen name";s:5:"ro_MD";}}s:43:" phpDocumentor\Reflection\Php\File includes";a:0:{}s:44:" phpDocumentor\Reflection\Php\File functions";a:0:{}s:44:" phpDocumentor\Reflection\Php\File constants";a:0:{}s:42:" phpDocumentor\Reflection\Php\File classes";a:1:{s:26:"\Faker\Provider\ro_MD\Text";O:35:"phpDocumentor\Reflection\Php\Class_":13:{s:42:" phpDocumentor\Reflection\Php\Class_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:26:"\Faker\Provider\ro_MD\Text";s:36:" phpDocumentor\Reflection\Fqsen name";s:4:"Text";}s:45:" phpDocumentor\Reflection\Php\Class_ docBlock";N;s:45:" phpDocumentor\Reflection\Php\Class_ abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Class_ final";b:0;s:43:" phpDocumentor\Reflection\Php\Class_ parent";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:20:"\Faker\Provider\Text";s:36:" phpDocumentor\Reflection\Fqsen name";s:4:"Text";}s:47:" phpDocumentor\Reflection\Php\Class_ implements";a:0:{}s:46:" phpDocumentor\Reflection\Php\Class_ constants";a:0:{}s:47:" phpDocumentor\Reflection\Php\Class_ properties";a:1:{s:37:"\Faker\Provider\ro_MD\Text::$baseText";O:37:"phpDocumentor\Reflection\Php\Property":11:{s:44:" phpDocumentor\Reflection\Php\Property fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:37:"\Faker\Provider\ro_MD\Text::$baseText";s:36:" phpDocumentor\Reflection\Fqsen name";s:8:"baseText";}s:47:" phpDocumentor\Reflection\Php\Property docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:22:"From ro.wikisource.org";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:327:"Acest text este disponibil sub licența Creative Commons cu atribuire
și distribuire în condiții identice; pot exista și clauze suplimentare.
Vedeți detalii la Termenii de utilizare.


Title: Povestea lui Harap-Alb

Author: Ion Creangă

Posting Date: February 6, 2005
[Last updated: December 13, 2016]

Language: Romanian";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:3:{i:0;O:42:"phpDocumentor\Reflection\DocBlock\Tags\See":3:{s:7:" * name";s:3:"see";s:14:" * description";N;s:9:" * refers";O:52:"phpDocumentor\Reflection\DocBlock\Tags\Reference\Url":1:{s:57:" phpDocumentor\Reflection\DocBlock\Tags\Reference\Url uri";s:50:"https://wikimediafoundation.org/wiki/Terms_of_Use/";}}i:1;O:42:"phpDocumentor\Reflection\DocBlock\Tags\See":3:{s:7:" * name";s:3:"see";s:14:" * description";N;s:9:" * refers";O:52:"phpDocumentor\Reflection\DocBlock\Tags\Reference\Url":1:{s:57:" phpDocumentor\Reflection\DocBlock\Tags\Reference\Url uri";s:53:"https://ro.wikisource.org/wiki/Povestea_lui_Harap-Alb";}}i:2;O:43:"phpDocumentor\Reflection\DocBlock\Tags\Var_":4:{s:7:" * name";s:3:"var";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:7:" * type";O:38:"phpDocumentor\Reflection\Types\String_":0:{}s:15:" * variableName";s:0:"";}}s:42:" phpDocumentor\Reflection\DocBlock context";O:38:"phpDocumentor\Reflection\Types\Context":2:{s:49:" phpDocumentor\Reflection\Types\Context namespace";s:20:"Faker\Provider\ro_MD";s:56:" phpDocumentor\Reflection\Types\Context namespaceAliases";a:0:{}}s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:44:" phpDocumentor\Reflection\Php\Property types";a:0:{}s:46:" phpDocumentor\Reflection\Php\Property default";s:107632:"<<<'EOT'
Amu cică era odată într-o țară un crai, care avea trei feciori.
Și craiul acela mai avea un frate mai mare, care era împărat
într-o altă țară, mai depărtată. Și împăratul, fratele craiului,
se numea Verde-împărat; și împăratul Verde nu avea feciori, ci
numai fete. Mulți ani trecură la mijloc de când acești frați mai
avură prilej a se întâlni amândoi. Iară verii, adică feciorii
craiului și fetele împăratului, nu se văzuse niciodată de când
erau ei. Și așa veni împrejurarea de nici împăratul Verde nu
cunoștea nepoții săi, nici craiul nepoatele sale: pentru că țara
în care împărățea fratele cel mai mare era tocmai la o margine a
pământului, și crăia istuilalt la o altă margine. Și apoi, pe
vremile acelea, mai toate țările erau bântuite de războaie
grozave, drumurile pe ape și pe uscat erau puțin cunoscute și
foarte încurcate și de aceea nu se putea călători așa de ușor și
fără primejdii ca în ziua de astăzi. Și cine apuca a se duce pe
atunci într-o parte a lumii adeseori dus rămânea până la moarte.

Dar ia să nu ne depărtăm cu vorba și să încep a depăna firul
poveștii.

Amu cică împăratul acela, aproape de bătrânețe, căzând la
zăcare, a scris către frăține-său craiului, să-i trimită grabnic
pe cel mai vrednic dintre nepoți, ca să-l lase împărat în locul
său după moartea sa. Craiul, primind cartea, îndată chemă
tustrei feciorii înaintea sa și le zise:

— Iaca ce-mi scrie frate-meu și moșul vostru. Care dintre voi se
simte destoinic a împărăți peste o țară așa de mare și bogată,
ca aceea, are voie din partea mea să se ducă, ca să împlinească
voința cea mai de pe urmă a moșului vostru.

Atunci feciorul cel mai mare ia îndrăzneală și zice :

— Tată, eu cred că mie mi se cuvine această cinste, pentru că
sunt cel mai mare dintre frați; de aceea te rog să-mi dai bani
de cheltuială, straie de primeneală, arme și cal de călărie, ca
să și pornesc, fără zăbavă.

— Bine, dragul tatei, dacă te bizuiești că-i putea răzbate până
acolo și crezi că ești în stare a cârmui și pe alții, alege-ți
un cal din herghelie, care-i vrea tu, ia-ți bani cât ți-or
trebui, haine care ți-or plăcea, arme care-i crede că-ți vin la
socoteală și mergi cu bine, fătul meu.

Atunci feciorul craiului își ia cele trebuitoare, sărută mâna
tătâne-său, primind carte de la dânsul către împăratul, zice
rămas bun fraților săi și apoi încalecă și pornește cu bucurie
spre împărăție.

Craiul însă, vrând să-l ispitească, tace molcum și, pe înserate,
se îmbracă pe ascuns într-o piele de urs, apoi încalecă pe cal,
iese înaintea fecioru-său pe altă cale și se bagă sub un pod. Și
când să treacă fiu-său pe acolo, numai iaca la capătul podului
îl și întâmpină un urs mornăind. Atunci calul fiului de crai
începe a sări în două picioare, forăind, și cât pe ce să
izbească pe stăpânu-său. Și fiul craiului, nemaiputând struni
calul și neîndrăznind a mai merge înainte, se întoarnă rușinat
înapoi la tatu-său. Până să ajungă el, craiul pe de altă parte
și ajunsese acasă, dăduse drumul calului, îndosise pielea cea de
urs și aștepta acum să vină fecioru-său. Și numai iaca îl și
vede venind repede, dar nu așa după cum se dusese.

— Da' ce-ai uitat, dragul tatei, de te-ai întors înapoi? zise
craiul cu mirare. Aista nu-i semn bun, după cât știu eu.

— De uitat, n-am uitat nimica, tată, dar ia, prin dreptul unui
pod, mi-a ieșit înainte un urs grozav, care m-a vârât în toți
spărieții. Și cu mare ce scăpând din labele lui, am găsit cu
cale să mă întorc la d-ta acasă decât să fiu prada fiarelor
sălbatice. Și de-acum înainte, ducă-se, din partea mea, cine
știe, că mie unuia nu-mi trebuie nici împărăție, nici nimica;
doar n-am a trăi cât lumea, ca să moștenesc pământul.

— Despre aceasta bine ai chitit-o, dragul tatei. Se vede lucru
că nici tu nu ești de împărat, nici împărăția pentru tine; și
decât să încurci numai așa lumea, mai bine să șezi departe, cum
zici, căci, mila Domnului: "Lac de-ar fi, broaște sunt destule".
Numai aș vrea să știu, cum rămâne cu moșu-tău. Așa-i că ne-am
încurcat în slăbăciune?

— Tată, zise atunci feciorul cel mijlociu, să mă duc eu, dacă
vrei.

— Ai toată voia de la mine, fătul meu, dar mare lucru să fie de
nu ți s-or tăia și ție cărările. Mai știi păcatul, poate să-ți
iasă înainte vreun iepure, ceva... și popâc! m-oi trezi cu tine
acasă, ca și cu frate-tău, ș-apoi atunci rușinea ta n-a fi
proastă. Dar dă, cearcă și tu, să vezi cum ți-a sluji norocul.
Vorba ceea: "Fiecare pentru sine, croitor de pâine". De-i
izbuti, bine-de-bine, iară de nu, au mai pățit și alți voinici
ca tine...

Atunci feciorul cel mijlociu, pregătindu-și cele trebuitoare și
primind și el carte din mâna tată-său către împăratul, își ia
ziua bună de la frați, și a doua zi pornește și el. Și merge, și
merge, până se înnoptează bine. Și când prin dreptul podului,
numai iaca și ursul: mor! mor! mor! Calul fiului de crai începe
atunci a forăi, a sări în două picioare și a da înapoi. Și fiul
craiului, văzând că nu-i lucru de șagă, se lasă și el de
împărăție și, cu rușinea lui, se întoarce înapoi la tată-său
acasă. Craiul, cum îl vede, zice:

— Ei, dragul tatei, așa-i că s-a împlinit vorba ceea: "Apără-mă
de găini, că de câini nu mă tem".

— Ce fel de vorbă-i asta, tată?! zise fiu-său rușinat; la d-ta
urșii se cheamă găini? Ba, ia acum cred eu frăține-meu, că așa
urs oștirea întreagă este în stare să o zdrumice... Încă mă mir
cum am scăpat cu viață; lehamite și de împărăție și de tot, că
doar, slavă Domnului, am ce mânca la casa d-tale.

— Ce mânca văd eu bine că ai, despre asta nu e vorbă, fătul meu,
zise craiul posomorât, dar ia spuneți-mi: rușinea unde o puneți?
Din trei feciori câți are tata, nici unul să nu fie bun de
nimica?!

Apoi, drept să vă spun, că atunci degeaba mai stricați mâncarea,
dragii mei... Să umblați numai așa, frunza frăsinelului, toată
viața voastră și să vă lăudați că sunteți feciori de crai, asta
nu miroase a nas de om... Cum văd eu, frate-meu se poate culca
pe o ureche din partea voastră; la sfântul Așteaptă s-a împlini
dorința lui. Halal de nepoți ce are! Vorba ceea:

La plăcinte, înainte
Și la război, înapoi.
Fiul craiului cel mai mic, făcându-se atunci roș cum îi gotca,
iese afară în grădină și începe a plânge în inima sa, lovit
fiind în adâncul sufletului de apăsătoarele cuvinte ale
părintelui său. Și cum sta el pe gânduri și nu se dumerea ce să
facă pentru a scăpa de rușine, numai iaca se trezește dinaintea
lui cu o babă gârbovită de bătrânețe, care umbla după milostenie.

— Da' ce stai așa pe gânduri, luminate crăișor? zise baba;
alungă mâhnirea din inima ta, căci norocul îți râde din toate
părțile și nu ai de ce fi supărat. Ia, mai bine miluiește baba
cu ceva.

— Ia lasă-mă-ncolo, mătușă, nu mă supăra, zise fiul craiului;
acum am altele la capul meu.

— Fecior de crai, vedea-te-aș împărat! Spune babei ce te
chinuiește; că, de unde știi, poate să-ți ajute și ea ceva.

— Mătușă, știi ce? Una-i una și două-s mai multe; lasă-mă-n
pace, că nu-mi văd lumea înaintea ochilor de necaz.

— Luminate crăișor, să nu bănuiești, dar nu te iuți așa de tare,
că nu știi de unde-ți poate veni ajutor.

— Ce vorbești în dodii, mătușă? Tocmai de la una ca d-ta ți-ai
găsit să aștept eu ajutor?

— Poate ți-i deșanț de una ca aceasta? zise baba. Hei, luminate
crăișor! Cel-de-sus varsă darul său peste cei neputincioși; se
vede că așa place sfinției-sale. Nu căuta că mă vezi gârbovă și
stremțuroasă, dar, prin puterea ce-mi este dată, știu dinainte
ceea ce au de gând să izvodească puternicii pământului și
adeseori râd cu hohot de nepriceperea și slăbiciunea lor. Așa-i
că nu-ți vine a crede, dar să te ferească Dumnezeu de ispită!
Căci multe au mai văzut ochii mei de-atâta amar de veacuri câte
port pe umerii aceștia. Of! crăișorule! crede-mă, că să aibi tu
puterea mea, ai vântura țările și mările, pământul l-ai da de-a
dura, lumea aceasta ai purta-o, uite așa, pe degete, și toate ar
fi după gândul tău. Dar uite ce vorbește gârbova și
neputincioasa! Iartă-mă, Doamne, că nu știu ce mi-a ieșit din
gură! Luminate crăișor, miluiește baba cu ceva!

Fiul craiului, fermecat de vorbele babei, scoate atunci un ban
și zice:

— Ține, mătușă, de la mine puțin și de la Dumnezeu mult.

— De unde dai, milostivul Dumnezeu să-ți dea, zise baba, și mult
să te înzilească, luminate crăișor, că mare norocire te
așteaptă. Puțin mai este, și ai să ajungi împărat, care n-a mai
stat altul pe fața pământului așa de iubit, de slăvit și de
puternic. Acum, luminate crăișor, ca să vezi cât poate să-ți
ajute milostenia, stai liniștit, uită-te drept în ochii mei și
ascultă cu luare-aminte ce ți-oi spune: du-te la tată-tău și
cere să-ți dea calul, armele și hainele cu care a fost el mire,
și atunci ai să te poți duce unde n-au putut merge frații tăi;
pentru că ție a fost scris de sus să-ți fie dată această cinste.
Tatu-tău s-a împotrivi și n-a vrea să te lase, dar tu stăruiește
pe lângă dânsul cu rugăminte, că ai să-l îndupleci. Hainele
despre care ți-am vorbit sunt vechi și ponosite, și armele
ruginite, iară calul ai să-l poți alege punând în mijlocul
hergheliei o tavà plină cu jăratic, și care dintre cai a veni la
jăratic să mănânce, acela are să te ducă la împărăție și are să
te scape din multe primejdii. Ține minte ce-ți spun eu, că poate
să ne mai întâlnim la vrun capăt de lume: căci deal cu deal se
ajunge, dar încă om cu om!

Și pe când vorbea baba aceste, o vede învăluită într-un hobot
alb, ridicându-se în văzduh, apoi înălțându-se tot mai sus, și
după aceea n-o mai zări defel. Atunci o înfiorare cuprinde pe
fiul craiului, rămânând uimit de spaimă și mirare, dar pe urmă,
venindu-i inima la loc și plin de încredere în sine că va izbuti
la ceea ce gândea, se înfățișază înaintea tată-său, zicând:

— Dă-mi voie ca să mă duc și eu pe urma fraților mei, nu de
alta, dar ca să-mi încerc norocul. Și ori oi putea izbuti, ori
nu, dar îți făgăduiesc dinainte că, odată pornit din casa
d-tale, înapoi nu m-oi mai întoarce, să știu bine că m-oi
întâlni și cu moartea în cale.

— Lucru negândit, dragul tatei, să aud așa vorbe tocmai din gura
ta, zise craiul. Frații tăi au dovedit că nu au inimă
într-înșii, și din partea lor mi-am luat toată nădejdea. Doar tu
să fii mai viteaz, dar parcă tot nu-mi vine a crede. Însă, dacă
vrei și vrei numaidecât să te duci, eu nu te opresc, dar mi-i nu
cumva să te întâlnești cu scârba în drum și să dai și tu cinstea
pe rușine, c-apoi atunci curat îți spun că nu mai ai ce căuta la
casa mea.

— Apoi dă, tată, omul e dator să se încerce. Am să pornesc și eu
într-un noroc și cum a da Dumnezeu! Numai, te rog, dă-mi calul,
armele și hainele cu care ai fost d-ta mire, ca să mă pot duce.

Craiul, auzind aceasta, parcă nu i-a prea venit la socoteală și,
încrețind din sprâncene, a zis:

— Hei, hei! dragul tatei, cu vorba aceasta mi-ai adus aminte de
cântecul cela:

Voinic tânăr, cal bătrân,
Greu se-ngăduie la drum!
D-apoi calul meu de pe atunci cine mai știe unde i-or fi
putrezind ciolanele! Că doar nu era să trăiască un veac de om!
Cine ți-a vârât în cap și una ca aceasta, acela încă-i unul...
Ori vorba ceea: Pesemne umbli după cai morți să le iei
potcoavele.

— Tată, atâta cer și eu de la d-ta. Acum, ori c-a fi trăind
calul, ori că n-a fi trăind, aceasta mă privește pe mine; numai
vreau să știu dacă mi-l dai ori ba.

— Din partea mea, dat să-ți fie, dragul tatei, dar mi-i de-a
mirarea de unde ai să-l iei, dacă n-are ființă pe lume.

— Despre aceasta nu mă plâng eu, tată, bine că mi l-ai dat; de
unde-a fi, de unde n-a fi, dacă l-oi găsi, al meu să fie.

Și atunci, odată se suie în pod și coboară de-acolo un căpăstru,
un frâu, un bici și o șa, toate colbăite, sfarogite și vechi ca
pământul. Apoi mai scoate dintr-un gherghiriu niște straie
foarte vechi, un arc, niște săgeți, un paloș și un buzdugan,
toate pline de rugină, și se apucă de le grijește bine și le
pune deoparte. Pe urmă umple o tava cu jăratic, se duce cu dânsa
la herghelie și o pune jos între cai. Și atunci, numai iaca ce
iese din mijlocul hergheliei o răpciugă de cal, grebănos,
dupuros și slab, de-i numărai coastele; și venind de-a dreptul
la tava, apucă o gură de jăratic. Fiul craiului îi și trage
atunci cu frâul în cap, zicând:

— Ghijoagă urâcioasă ce ești! din toți caii, tocmai tu te-ai
găsit să mănânci jăratic? De te-a împinge păcatul să mai vii o
dată, vai de steaua ta are să fie!

Apoi începe a purta caii încolo și încoace, și numai iaca
slăbătura cea de cal iar se repede și apucă o gură de jăratic.
Fiul craiului îi mai trage și atunci un frâu în cap, cât ce
poate, și apoi iar începe a purta caii de colo până colo, să
vadă, nu cumva a veni alt cal să mănânce jăratic. Și numai iaca,
și a treia oară, tot gloaba cea de cal vine și începe a mânca la
jăratic, de n-a mai rămas. Atunci fiul craiului, mânios, îi mai
trage un frâu, iar cât ce poate, apoi îl prinde în căpăstru și,
punându-i frâul în cap, zice în gândul său: "Să-l iau, ori să-i
dau drumul? Mă tem că m-oi face de râs. Decât cu așa cal, mai
bine pedestru".

Și cum sta el în cumpene, să-l ia, să nu-l ia, calul se și
scutură de trei ori, și îndată rămâne cu părul lins-prelins și
tânăr ca un tretin, de nu era alt mânzoc mai frumos în toată
herghelia. Și apoi, uitându-se țintă în ochii fiului de crai,
zice:

— Sui pe mine, stăpâne, și ține-te bine! Fiul craiului,
punându-i zabala în gură, încalecă, și atunci calul odată zboară
cu dânsul până la nouri și apoi se lasă în jos ca o săgeată.
După aceea mai zboară încă o dată până la lună și iar se lasă în
jos mai iute decât fulgerul. Și unde nu mai zboară și a treia
oară până la soare și, când se lasă jos, întreabă:

— Ei, stăpâne, cum ți se pare? Gândit-ai vrodată că ai să
ajungi: soarele cu picioarele, luna cu mâna și prin nouri să
cauți cununa?

— Cum să mi se pară, dragul meu tovarăș? Ia, m-ai băgat în toate
grozile morții, căci, cuprins de amețeală, nu mai știam unde mă
găsesc și cât pe ce erai să mă prăpădești.

— Ia, așa am amețit și eu, stăpâne, când mi-ai dat cu frâul în
cap, să mă prăpădești, și cu asta am vrut să-mi răstorc cele
trei lovituri. Vorba ceea: una pentru alta. Acum cred că mă
cunoști și de urât și de frumos, și de bătrân și de tânăr, și de
slab și de puternic; de-aceea mă fac iar cum m-ai văzut în
herghelie, și de-acum înainte sunt gata să te întovărășesc
oriunde mi-i porunci, stăpâne. Numai să-mi spui dinainte cum să
te duc: ca vântul ori ca gândul?

— De mi-i duce ca gândul, tu mi-i prăpădi, iar de mi-i duce ca
vântul, tu mi-i folosi, căluțul meu, zise fiul craiului.

— Bine, stăpâne. Acum sui pe mine fără grijă și hai să te duc
unde vrei.

Fiul craiului, încălecând, îl netezește pe coamă și zice: — Hai,
căluțul meu! Atunci calul zboară lin ca vântul, și când vântul a
aburit, iaca și ei la crai în ogradă au sosit.

— Bun sosit la noi, voinice! zise craiul, cam cu jumătate de
gură. Dar aista cal ți l-ai ales?...

— Apoi dă, tată, cum a dat târgul și norocul; am de trecut prin
multe locuri și nu vreau să mă ia oamenii la ochi. M-oi duce și
eu cât călare, cât pe jos, cum oi putea.

Și zicând aceste, pune tarnița pe cal, anină armele la oblânc,
își ia merinde și bani de ajuns, schimburi în desagi și o ploscă
plină cu apă. Apoi sărută mâna tată-său, primind carte de la
dânsul către împăratul, zice rămas bun fraților săi și a treia
zi către seară pornește și el, mergând din pasul calului. Și
merge el, și merge, până se înnoptează bine. Și, prin dreptul
podului, numai iaca îi iese și lui ursul înainte, mornăind
înfricoșat. Calul atunci dă năvală asupra ursului, și fiul
craiului, ridicând buzduganul să dea, numai iaca ce aude glas de
om zicând:

— Dragul tatei, nu da, că eu sunt. Atunci fiul craiului
descalecă, și tată-său, cuprinzându-l în brațe, îl sărută și-i
zice:

— Fătul meu, bun tovarăș ți-ai ales; de te-a învățat cineva,
bine ți-a priit, iară de-ai făcut-o din capul tău, bun cap ai
avut. Mergi de-acum tot înainte, că tu ești vrednic de împărat.
Numai ține minte sfatul ce-ți dau: în călătoria ta ai să ai
trebuință și de răi, și de buni, dar să te ferești de omul roș,
iară mai ales de cel spân, cât îi putea; să n-ai de-a face cu
dânșii, căci sunt foarte șugubeți. Și, la toată întâmplarea,
calul, tovarășul tău, te-a mai sfătui și el ce ai să faci, că de
multe primejdii m-a scăpat și pe mine în tinerețile mele! Na-ți
acum și pielea asta de urs, că ți-a prinde bine vreodată.

Apoi, dezmierdând calul, îi mai sărută de câteva ori pe amândoi
și le zice:

— Mergeți în pace, dragii mei. De-acum înainte, Dumnezeu știe
când ne-om mai vedea!...

Fiul craiului atunci încalecă, și calul, scuturându-se, mai
arată-se o dată tânăr, cum îi plăcea craiului, apoi face o
săritură înapoi și una înainte și se cam mai duc la împărăție,
Dumnezeu să ne ție, că cuvântul din poveste, înainte mult mai
este. Și merg ei o zi, merg două, și merg patruzeci și nouă,
până ce de la o vreme le intră calea în codru și atunci numai
iaca ce le iese înainte un om spân și zice cu îndrăzneală fiului
de crai:

— Bun întâlnișul, voinice! Nu ai trebuință de slugă la drum?
Prin locurile iestea e cam greu de călătorit singur; nu cumva
să-ți iasă vro dihanie ceva înainte și să-ți scurteze cărările.
Eu cunosc bine pe-aici, și poate mai încolo să ai nevoie de unul
ca mine.

— Poate să am, poate să n-am, zise fiul craiului, uitându-se
țintă în ochii Spânului, dar acum deodată mă las în voia
întâmplării, și apoi, dând pinteni calului, pornește.

Mai merge el înainte prin codru cât merge, și, la o strâmtoare,
numai iaca ce Spânul iar îi iese înainte, prefăcut în alte
straie, și zice cu glas subțiratic și necunoscut:

— Bună calea, drumețule! — Bună să-ți fie inima, cum ți-i
căutătura, zise fiul craiului. — Cât despre inima mea, s-o dea
Dumnezeu oricui, zise Spânul oftând... Numai ce folos? Omul bun
n-are noroc; asta-i știută; rogu-te, să nu-ți fie cu supărare,
drumețule, dar fiindcă a venit vorba de-așa, îți spun, ca la un
frate, că din cruda copilărie slujesc prin străini, și încaltea
nu mi-ar fi ciudă, când n-aș vra să mă dau la treabă, căci cu
munca m-am trezit. Dar așa, muncesc, muncesc, și nu s-alege
nimica de mine; pentru că tot de stăpâni calici mi-am avut
parte. Și vorba ceea: La calic slujești, calic rămâi. Când aș da
odată peste un stăpân cum gândesc eu, n-aș ști ce să fac să nu-l
smintesc. Nu cumva ai trebuință de slugă, voinice? Cum te văd,
sameni a avea seu la rărunchi. De ce te scumpești pentru nimica
toată și nu-ți iei o slugă vrednică, ca să-ți fie mână de ajutor
la drum? Locurile aiestea sunt șugubețe; de unde știi cum vine
întâmplarea, și, Doamne ferește, să nu-ți cadă greu singur.

— Acum deodată încă tot nu, zise fiul craiului cu mâna pe
buzdugan; m-oi mai sluji și eu singur, cum oi putea, și dând iar
pinteni calului, pornește mai repede.

Și mergând el tot înainte prin codri întunecoși, de la un loc se
închide calea și încep a i se încurca cărările, încât nu se mai
pricepe fiul craiului acum încotro să apuce și pe unde să meargă.

— Ptiu, drace! iaca în ce încurcătură am intrat! Asta-i mai rău
decât poftim la masă, zise el. Nici tu sat, nici tu târg, nici
tu nimica. De ce mergi înainte, numai peste pustietăți dai;
parcă a pierit sămânța omenească de pe fața pământului. Îmi pare
rău că n-am luat măcar spânul cel de-al doilea cu mine. Dacă s-a
aruncat în partea mâne-sa, ce-i vinovat el? Tata așa a zis, însă
la mare nevoie ce-i de făcut? vorba ceea: Rău-i cu rău, dar e
mai rău făr' de rău. Și tot horhăind el când pe o cărare, când
pe un drum părăsit, numai iaca ce iar îi iese Spânul înainte,
îmbrăcat altfel și călare pe un cal frumos, și, prefăcându-și
glasul, începe a căina pe fiul craiului, zicând:

— Sărmane omule, rău drum ai apucat! Se vede că ești străin și
nu cunoști locurile pe aici. Ai avut mare noroc de mine, de n-ai
apucat a coborî priporul ista, că erai prăpădit. Ia, colo
devale, în înfundătura ceea, un taur grozav la mulți bezmetici
le-a curmat zilele. Și eu, mai deunăzi, cât mă vezi de voinic,
de-abia am scăpat de dânsul, ca prin urechile acului.
Întoarce-te înapoi, ori, dacă ai de dus înainte, ia-ți un ajutor
pe cineva. Chiar și eu m-aș tocmi la d-ta, dacă ți-a fi cu
plăcere.

— Așa ar trebui să urmez, om bun, zise fiul craiului, dar ți-oi
spune drept: tata mi-a dat în grijă, când am pornit de-acasă, ca
să mă feresc de omul roș, iară mai ales de cel spân, cât oi
putea; să n-am de a face cu dânșii nici în clin, nici în mînecă;
și dacă n-ai fi spân, bucuros te-aș tocmi.

— Hei, hei! călătorule. Dacă ți-i vorba de-așa, ai să-ți rupi
ciochinele umblând și tot n-ai să găsești slugă cum cauți d-ta,
că pe-aici sunt numai oameni spâni. Ș-apoi, când este la
adicălea, te-aș întreba: ca' ce fel de zăticneală ai putea să
întâmpini din pricina asta? Pesemne n-ai auzit vorba ceea: că de
păr și de coate-goale nu se plânge nimene. Și când nu sunt ochi
negri, săruți și albaștri! Așa și d-ta: mulțumește lui Dumnezeu
că m-ai găsit și tocmește-mă. Și dacă-i apuca odată a te
deprinde cu mine, știu bine că n-am să pot scăpa ușor de d-ta,
căci așa sunt eu în felul meu, știu una și bună: să-mi slujesc
stăpânul cu dreptate. Hai, nu mai sta la îndoială, că mă tem să
nu ne-apuce noaptea pe aici. Și când ai avea încaltea un cal
bun, calea-valea, dar cu smârțogul ista îți duc vergile.

— Apoi dă, Spânule, nu știu cum să fac, zise fiul craiului. Din
copilăria mea sunt deprins a asculta de tată și, tocmindu-te pe
tine, parcă-mi vine nu știu cum. Dar, fiindcă mi-au mai ieșit
până acum înainte încă doi spâni, și cu tine al treilea, apoi
mai-mi vine a crede că asta-i țara spânilor și n-am încotro;
mort-copt, trebuie să te iau cu mine, dacă zici că știi bine
locurile pe aici.

Și, din două vorbe, fiul craiului îl tocmește și după aceea
pornesc împreună să iasă la drum, pe unde arată Spânul. Și
mergând ei o bucată bună, Spânul se preface că-i e sete și cere
plosca cu apă de la stăpânu-său. Fiul craiului i-o dă, și
Spânul, cum o pune la gură, pe loc o și ia, oțărându-se, și
varsă toată apa dintr-însa. Fiul craiului zice atunci supărat:

— Dar bine, Spânule, de ce te apuci? Nu vezi că pe aici e mare
lipsă de apă? Și pe arșița asta o să ne uscăm de sete.

— Să avem iertare, stăpâne! Apa era bâhlită și ne-am fi putut
bolnăvi. Cât despre apa bună, nu vă îngrijiți; acuș avem să dăm
peste o fântână cu apă dulce și rece ca gheața. Acolo vom poposi
puțin, oi clătări plosca bine ș-oi umple-o cu apă proaspătă, ca
să avem la drum, căci mai încolo nu prea sunt fântâni, și, din
partea apei, mi se pare că i-om duce dorul. Și cârnind pe o
cărare, mai merg ei oleacă înainte, până ce ajung într-o poiană
și numai iaca ce dau de o fântână cu ghizdele de stejar și cu un
capac deschis în lături. Fântâna era adâncă și nu avea nici
roată, nici cumpână, ci numai o scară de coborât până la apă.

— Ei, ei! Spânule, acum să te văd cât ești de vrednic, zise fiul
craiului. Spânul atunci zâmbește puțin și, coborându-se în
fântână, umple întâi plosca și o pune la șold. Apoi, mai stând
acolo în fund pe scară, aproape de fața apei, zice:

— Ei, da' ce răcoare-i aici! "Chima răului pe malul pârăului!"
Îmi vine să nu mai ies afară. Dumnezeu să ușureze păcatele celui
cu fântâna, că bun lucru a mai făcut. Pe arșițele ieste, o
răcoreală ca asta mult plătește!

Mai șede el acolo puțin și apoi iese afară, zicând: — Doamne,
stăpâne, nu știi cât mă simțesc de ușor; parcă îmi vine să zbor,
nu altăceva! Ia vâră-te și d-ta oleacă, să vezi cum ai să te
răcorești; așa are să-ți vină de îndemână după asta, de are să
ți se pară că ești ușor cum îi pana...

Fiul craiului, boboc în felul său la trebi de aieste, se
potrivește Spânului și se bagă în fântână, fără să-i trăsnească
prin minte ce i se poate întâmpla. Și cum sta și el acolo de se
răcorea, Spânul face tranc! capacul pe gura fântânii, apoi se
suie deasupra lui și zice cu glas răutăcios:

— Alelei! fecior de om viclean ce te găsești; tocmai de ceea ce
te-ai păzit n-ai scăpat. Ei, că bine mi te-am căptușit! Acum
să-mi spui tu cine ești, de unde vii și încotro te duci, că, de
nu, acolo îți putrezesc ciolanele!

Fiul craiului ce era să facă? Îi spune cu de-amănuntul, căci,
dă, care om nu ține la viață înainte de toate?

— Bine, atâta am vrut să aflu din gura ta, pui de viperă ce
mi-ai fost, zice atunci Spânul: numai cată să fie așa, că, de
te-oi prinde cu oca mică, greu are să-ți cadă. Chiar acum aș
putea să te omor, în voia cea bună, dar mi-i milă de tinerețile
tale... Dacă vrei să mai vezi soarele cu ochii și să mai calci
pe iarbă verde, atunci jură-mi-te pe ascuțișul paloșului tău că
mi-i da ascultare și supunere întru toate, chiar și-n foc de
ți-aș zice să te arunci. Și, de azi înainte, eu o să fiu în
locul tău nepotul împăratului, despre care mi-ai vorbit, iară tu
— sluga mea; și atâta vreme să ai a mă sluji, până când îi muri
și iar îi învia. Și oriunde vei merge cu mine, nu care cumva să
bleștești din gură către cineva despre ceea ce a urmat între
noi, că te-am șters de pe fața pământului. Îți place așa să mai
trăiești, bine-de-bine; iară de nu, spune-mi verde în ochi, ca
să știu ce leac trebuie să-ți fac...

Fiul craiului, văzându-se prins în clește și fără nici o putere,
îi jură credință și supunere întru toate, lăsându-se în știrea
lui Dumnezeu, cum a vrea el să facă. Atunci Spânul pune mâna pe
cartea, pe banii și pe armele fiului de crai și le ia la sine;
apoi îl scoate din fântână și-i dă paloșul să-l sărute, ca semn
de pecetluire a jurământului, zicând:

— De-acum înainte să știi că te cheamă Harap-Alb; aista ți-i
numele, și altul nu.

După aceasta încalecă, fiecare pe calul său, și pornesc, Spânul
înainte, ca stăpân, Harap-Alb în urmă, ca slugă, mergând spre
împărăție, Dumnezeu să ne ție, că cuvântul din poveste, înainte
mult mai este.

Și merg ei, și merg, cale lungă să le-ajungă, trecând peste nouă
mări, peste nouă țări și peste nouă ape mari, și într-o târzie
vreme ajung la împărăție.

Și cum ajung, Spânul se înfățișază înaintea împăratului cu carte
din partea craiului. Și împăratul Verde, citind cartea, arde de
bucurie că i-a venit nepotul, și pe dată îl și face cunoscut
curții și fetelor sale, care îl primesc cu toată cinstea
cuvenită unui fiu de crai și moștenitor al împăratului.

Atunci Spânul, văzând că i s-au prins minciunile de bine, cheamă
la sine pe Harap-Alb și-i zice cu asprime:

— Tu să șezi la grajd nedezlipit și să îngrijești de calul meu
ca de ochii din cap, că de-oi veni pe-acolo și n-oi găsi trebile
făcute după plac, vai de pielea ta are să fie. Dar până atunci,
na-ți o palmă, ca să ții minte ce ți-am spus. Bagat-ai în cap
vorbele mele?

— Da, stăpâne, zise Harap-Alb, lăsând ochii în jos. Și, ieșind,
pornește la grajd. Cu asta a voit Spânul să-și arate arama și să
facă pe HarapAlb ca să-i ia și mai mult frica.

Fetele împăratului întâmplându-se de față când a lovit Spânul pe
Harap-Alb, li s-a făcut milă de dânsul și au zis Spânului cu
binișorul:

— Vere, nu faci bine ceea ce faci. Dacă este că a lăsat Dumnezeu
să fim mari peste alții, ar trebui să avem milă de dânșii, că și
ei, sărmanii, sunt oameni!

— Hei, dragele mele vere, zice Spânul cu viclenia lui
obicinuită; d-voastră încă nu știți ce-i pe lume. Dacă
dobitoacele n-ar fi fost înfrânate, de demult ar fi sfâșiat pe
om. Și trebuie să știți că și între oameni cea mai mare parte
sunt dobitoace, care trebuiesc ținuți din frâu, dacă ți-i voia
să faci treabă cu dânșii.

Ei, apoi... zi că nu-i lumea de-apoi! Să te ferească Dumnezeu
când prinde mămăliga coajă. Vorba ceea:

Dă-mi, Doamne, ce n-am avut,
Să mă mier ce m-a găsit.
Fetele atunci au luat altă vorbă, dar din inima lor nu s-a șters
purtarea necuviincioasă a Spânului, cu toate îndreptările și
înrudirea lui, pentru că bunătatea nu are de-a face cu răutatea.
Vorba ceea:

Vița-de-vie, tot în vie,
Iară vița-de-boz, tot răgoz.
Și din ceasul acela au început a vorbi ele înde ele, că Spânul
defel nu samănă în partea lor, nici la chip, nici la bunătate;
și că Harap-Alb, sluga lui, are o înfățișare mult mai plăcută și
seamănă a fi mult mai omenos. Pesemne inima le spunea că Spânul
nu le este văr, și de aceea nu-l puteau mistui. Așa îl urâse ele
de tare acum, că, dacă ar fi fost în banii lor, s-ar fi lepădat
de Spân ca de Ucigă-l-crucea. Dar nu aveau ce se face de
împăratul, ca să nu-i aducă supărare.

Amu, într-una din zile, cum ședea Spânul la ospăț împreună cu
moșu-său, cu verele sale și cu alții, câți se întâmplase, li
s-au adus mai la urmă în masă și niște sălăți foarte minunate.
Atunci împăratul zice Spânului :

— Nepoate, mai mâncat-ai sălăți de aceste de când ești? — Ba nu,
moșule, zice Spânul; tocmai eram să vă întreb de unde le aveți,
că tare-s bune!... O haraba întreagă aș fi în stare să mănânc,
și parcă tot nu m-aș sătura.

— Te crede moșul, nepoate, dar când ai ști cu ce greutate se
capătă! pentru că numai în Grădina Ursului, dacă-i fi auzit de
dânsa, se află sălăți de aceste, și mai rar om care să poată lua
dintr-însele și să scape cu viață. Între toți oamenii din
împărăția mea, numai un pădurar se bizuiește la treaba asta. Și
acela, el știe ce face, ce drege, de-mi aduce din când în când
așa, câte puține, de poftă.

Spânul, voind să piardă acum pe Harap-Alb cu orice preț, zise
împăratului:

— Doamne, moșule, de nu mi-a aduce sluga mea sălăți de aceste și
din piatra seacă, mare lucru să fie!

— Ce vorbești, nepoate! zise împăratul; unul ca dânsul, și încă
necunoscător de locurile acestea, cum crezi că ar putea face
această slujbă? Doar de ți-i greu de viața lui.

— Ia las', moșule, nu-i duce grija; pun rămășag că are să-mi
aducă sălăți întocmai ca aceste, și încă multe, că știu eu ce
poate el.

Ș-odată cheamă Spânul pe Harap-Alb și-i zice răstit: — Acum
degrabă să te duci cum îi ști tu și să-mi aduci sălăți de aceste
din Grădina Ursului. Hai, ieși repede și pornește, că nu-i vreme
de pierdut. Dar nu cumva să faci de altfel, că nici în borta
șoarecului nu ești scăpat de mine!

Harap-Alb iese mâhnit, se duce în grajd și începe a-și netezi
calul pe coamă, zicând:

— Ei, căluțul meu, când ai ști tu în ce necaz am intrat! Sfânt
să fie rostul tătâne-meu, că bine m-a învățat! Așa-i că, dacă
n-am ținut seamă de vorbele lui, am ajuns slugă la dârloagă și
acum, vrând-nevrând, trebuie s-ascult, că mi-i capul în
primejdie?

— Stăpâne, zise atunci calul; de-acum înainte, ori cu capul de
piatră, ori cu piatra de cap, tot atâta-i: fii odată bărbat și
nu-ți face voie rea. Încalecă pe mine și hai! Știu eu unde te-oi
duce, și mare-i Dumnezeu, ne-a scăpa el și din aceasta!

Harap-Alb, mai prinzând oleacă la inimă, încalecă și se lasă în
voia calului, unde vrea el să-l ducă.

Atunci calul pornește la pas, până ce iese mai încolo, ca să
nu-i vadă nimene. Apoi își arată puterile sale, zicând:

— Stăpâne, ține-te bine pe mine, că am să zbor lin ca vântul, să
cutreierăm pământul. Mare-i Dumnezeu și meșteru-i dracul.
Helbet! vom putea veni de hac și Spânului celuia, nu-i e vremea
trecută.

Și odată zboară calul cu Harap-Alb până la nouri; apoi o ia de-a
curmezișul pământului: pe deasupra codrilor, peste vârful
munților, peste apa mărilor și după aceea se lasă încet- încet
într-un ostrov mândru din mijlocul unei mări, lângă o căsuță
singuratică, pe care era crescut niște mușchi pletos de o podină
de gros, moale ca mătasa și verde ca buraticul.

Atunci Harap-Alb descalecă, și spre mai mare mirarea lui, numai
iaca îl întâmpină în pragul ușii cerșetoarea căreia îi dăduse el
un ban de pomană, înainte de pornirea lui de acasă.

— Ei, Harap-Alb, așa-i că ai venit la vorbele mele, că deal cu
deal se ajunge, dar încă om cu om? Află acum că eu sunt Sfânta
Duminică și știu ce nevoie te-a adus pe la mine. Spânul vrea
să-ți răpună capul cu orice chip și de-aceea te-a trimis să-i
aduci sălăți din Grădina Ursului, dar i-or da ele odată pe
nas... Rămâi aici în astă-noapte, ca să văd ce-i de făcut.

Harap-Alb rămâne bucuros, mulțumind Sfintei Duminici pentru buna
găzduire și îngrijirea ce are de el.

— Fii încredințat că nu eu, ci puterea milosteniei și inima ta
cea bună te ajută, Harap-Alb, zice Sfânta Duminică ieșind și
lăsându-l în pace să se liniștească.

Și cum iese Sfânta Duminică afară, odată și pornește desculță
prin rouă, de culege o poală de somnoroasă, pe care o fierbe la
un loc cu o vadră de lapte dulce și cu una de miere și apoi ia
mursa aceea și iute se duce de o toarnă în fântâna din Grădina
Ursului, care fântână era plină cu apă până la gură. Și mai
stând Sfânta Duminică oleacă în preajma fântânii, numai iaca ce
vede că vine ursul cu o falcă în cer și cu una în pământ,
mornăind înfricoșat. Și cum ajunge la fântână, cum începe a bea
lacom la apă și a-și linge buzele de dulceața și bunătatea ei.
Și mai stă din băut, și iar începe a mornăi; și iar mai bea câte
un răstimp, și iar mornăiește, până ce, de la o vreme, încep a-i
slăbi puterile și, cuprins de amețeală, pe loc cade jos și
adoarme mort, de puteai să tai lemne pe dânsul.

Atunci Sfânta Duminică, văzându-l așa, într-o clipă se duce și,
deșteptând pe Harap-Alb chiar în miezul nopții, îi zice:

— Îmbracă-te iute în pielea cea de urs, care o ai de la tată-
tău, apucă pe ici tot înainte, și cum îi ajunge în răscrucile
drumului, ai să dai de Grădina Ursului. Atunci sai repede
înlăuntru de-ți ia sălăți într-ales, și câte-i vrea de multe,
căci pe urs l-am pus eu la cale. Dar, la toată întâmplarea, de-i
vedea și-i vedea că s-a trezit și năvălește la tine, zvârle-i
pielea cea de urs și apoi fugi încoace spre mine cât îi putea.

Harap-Alb face cum îi zice Sfânta Duminică. Și cum ajunge în
grădină, odată începe a smulge la sălăți într-ales și leagă o
sarcină mare, mare, cât pe ce să n-o poată ridica în spinare. Și
când să iasă cu dânsa din grădină, iaca ursul se trezește, și
după dânsul, Gavrile! Harap-Alb, dacă vede reaua, i-aruncă
pielea cea de urs, și apoi fuge cât ce poate cu sarcina în
spate, tot înainte la Sfânta Duminică, scăpând cu obraz curat.

După aceasta, Harap-Alb, mulțumind Sfintei Duminici pentru
binele ce i-a făcut, îi sărută mâna, apoi își ia sălățile și,
încălecând, pornește spre împărăție, Dumnezeu să ne ție, că
cuvântul din poveste, înainte mult mai este.

Și mergând tot cum s-a dus, de la o vreme ajunge la împărăție și
dă sălățile în mâna Spânului.

Împăratul și fetele sale, văzând aceasta, le-a fost de-a
mirarea. Atunci Spânul zice îngâmfat:

— Ei, moșule, ce mai zici? — Ce să zic, nepoate? Ia, când aș avé
eu o slugă ca aceasta, nu i-aș trece pe dinainte.

— D-apoi de ce mi l-a dat tata de-acasă? numai de vrednicia lui,
zise Spânul; căci altfel nu-l mai luam după mine, ca să-mi
încurce zilele.

La vro câteva zile după aceasta, împăratul arată Spânului niște
pietre scumpe, zicând:

— Nepoate, mai văzut-ai pietre nestemate așa de mari și frumoase
ca acestea de când ești?

— Am văzut eu, moșule, felurite pietre scumpe, dar ca aceste,
drept să-ți spun, n-am văzut. Oare pe unde se pot găsi așa
pietre?

— Pe unde să se găsească, nepoate! Ia, în Pădurea Cerbului. Și
cerbul acela este bătut tot cu pietre scumpe, mult mai mari și
mai frumoase decât aceste. Mai întâi, cică are una în frunte, de
strălucește ca soarele. Dar nu se poate apropia nimene de cerb,
căci este solomonit și nici un fel de armă nu-l prinde; însă el,
pe care l-a zări, nu mai scapă cu viață. De-aceea fuge lumea de
dânsul de-și scoate ochii; și nu numai atâta, dar chiar când se
uită la cineva, fie om sau orice dihanie a fi, pe loc rămâne
moartă. Și cică o mulțime de oameni și de sălbătăciuni zac fără
suflare în pădurea lui numai din astă pricină: se vede că este
solomonit, întors de la țâță, sau dracul mai știe ce are de-i
așa de primejdios. Dar cu toate aceste, trebuie să știi,
nepoate, că unii oameni îs mai al dracului decât dracul; nu se
astâmpără nici în ruptul capului; măcar că au pățit multe, tot
cearcă prin pădurea lui, să vadă, nu l-or putea găbui cumva? Și
care dintre ei are îndrăzneala mare și noroc și mai mare,
umblând pe acolo, găsește din întâmplare câte o piatră de
aceste, picată de pe cerb, când se scutură el la șapte ani o
dată, și apoi aceluia om nu-i trebuie altă negustorie mai bună.
Aduce piatra la mine și i-o plătesc cât nu face; ba încă sunt
bucuros că o pot căpăta. Și află, nepoate, că asemene pietre fac
podoaba împărăției mele, nu se găsesc altele mai mari și mai
frumoase decât aceste la nici o împărăție, și de-aceea s-a dus
vestea despre ele în toată lumea. Mulți împărați și crai înadins
vin să le vadă, și li-i de-a mirarea de unde le am.

— Doamne, moșule! zise atunci Spânul; să nu te superi, dar nu
știu ce fel de oameni fricoși aveți pe aici. Eu pun rămășag pe
ce vrei că sluga mea are să-mi aducă pielea cerbului aceluia, cu
cap cu tot, așa împodobit cum este.

Ș-odată cheamă Spânul pe Harap-Alb și-i zice: — Du-te în Pădurea
Cerbului, cum îi ști tu, și măcar fă pe dracul în patru, sau
orice-i face, dar numaidecât să-mi aduci pielea cerbului, cu cap
cu tot, așa bătute cu pietre scumpe, cum se găsesc. Și doar te-a
împinge păcatul să clintești vreo piatră din locul său, iară mai
ales acea mare din fruntea cerbului, c-apoi atâta ți-i leacul!
Hai, pornește iute, că nu-i vreme de pierdut!

Harap-Alb vede el bine unde merge treaba, că doar nu era din
butuci; dar neavând încotro, iese mâhnit, se duce iar în grajd
la cal și, netezindu-l pe coamă, îi zice:

— Dragul meu căluț, la grea belea m-a vârât iar Spânul!... De-oi
mai scăpa și din asta cu viață, apoi tot mai am zile de trăit.
Dar nu știu, zău, la cât mi-a sta norocul!

— Nu-i nimica, stăpâne, zise calul. Capul de-ar fi sănătos, că
belelele curg gârlă. Poate ai primit poruncă să jupești piatra
morii și să duci pielea la împărăție...

— Ba nu, căluțul meu; alta și mai înfricoșată, zise Harap- Alb.

— Vorbă să fie, stăpâne, că tocmeala-i gata, zise calul. Nu te
teme, știu eu năzdrăvănii de ale Spânului; și să fi vrut, de
demult i-aș fi făcut pe obraz, dar lasă-l să-și mai joace calul.
Ce gândești? Și unii ca aceștia sunt trebuitori pe lume
câteodată, pentru că fac pe oameni să prindă la minte... Zi și
d-ta că ai avut să tragi un păcat strămoșesc. Vorba ceea:
"Părinții mănâncă aguridă, și fiilor li se strepezesc dinții".
Hai, nu mai sta la gânduri; încalecă pe mine și pune-ți nădejdea
în Dumnezeu, că mare-i puterea Lui; nu ne-a lăsa el să suferim
îndelung. Cum vrei. "Ce-i e scris omului în frunte-i e pus."
Doar' mare-i Cel-de-sus! S-or sfârși ele și aceste de la o
vreme...

Harap-Alb atunci încalecă, și calul pornește la pas, până ce
iese mai încolo departe, ca să nu-i ia lumea la ochi. Și apoi,
încordându-se și scuturându-se o dată voinicește, iară-și arată
puterile, zicând:

— Ține-te zdravăn, stăpâne, că iar am să zbor:

În înaltul cerului,
Văzduhul pământului;
Pe deasupra codrilor,
Peste vârful munților,
Prin ceața măgurilor,
Spre noianul mărilor,
La crăiasa zânelor,
Minunea minunilor,
Din ostrovul florilor.
Și zicând aceste, odată și zboară cu Harap-Alb

În înaltul cerului,
Văzduhul pământului;
și o ia de-a curmeziș:
De la nouri către soare,
Printre lună și luceferi,
Stele mândre lucitoare,
și apoi se lasă lin ca vântul:
În ostrovul florilor,
La crăiasa zânelor,
Minunea minunilor.
Și când vântul a aburit, iaca și ei la Sfânta Duminică iar au
sosit. Sfânta Duminică era acasă și, cum a văzut pe Harap-Alb
poposind la ușa ei, pe loc l-a întâmpinat și i-a zis cu blândețe:

— Ei, Harap-Alb, așa-i că iar te-a ajuns nevoia de mine? — Așa
este, măicuță, răspunse Harap-Alb, cufundat în gânduri și galben
la față, de parcă-i luase pânza de pe obraz. Spânul vrea să-mi
răpună capul cu orice preț. Și de-aș muri mai degrabă, să scap
odată de zbucium: decât așa viață, mai bine moarte de o mie de
ori!

— Vai de mine și de mine, Harap-Alb, zise Sfânta Duminică; parcă
nu te-aș fi crezut așa slab de înger, dar, după cât văd, ești
mai fricos decât o femeie! Hai, nu mai sta ca o găină plouată!
rămâi la mine în astă noapte și ți-oi da eu vrun ajutor. Mare-i
Dumnezeu! N-a mai fi el după gândul Spânului. Însă mai rabdă și
tu, fătul meu, că mult ai avut de răbdat și puțin mai ai.
Pân-acum ți-a fost mai greu, dar de-acum înainte tot așa are
să-ți fie, până ce-i ieși din slujba Spânului, de la care ai să
tragi încă multe necazuri, dar ai să scapi din toate cu capul
teafăr, pentru că norocul te ajută.

— Poate așa să fie, măicuță, zise Harap-Alb, dar prea multe s-au
îngrămădit deodată pe capul meu.

— Câte a dat Dumnezeu, Harap-Alb, zise Sfânta Duminică; așa a
trebuit să se întâmple, și n-ai cui bănui: pentru că nu-i după
cum gândește omul, ci-i după cum vrea Domnul. Când vei ajunge și
tu odată mare și tare, îi căuta să judeci lucrurile de-a
fir-a-păr și vei crede celor asupriți și necăjiți, pentru că
știi acum ce e necazul. Dar până atunci, mai rabdă, HarapAlb,
căci cu răbdarea îi frigi pielea.

Harap-Alb, nemaiavând ce zice, mulțumește lui Dumnezeu, și de
bine, și de rău, și Sfintei Duminici pentru buna găzduire și
ajutorul făgăduit.

— Ia, acum mai vii de-acasă, fătul meu! Zică cine-a zice și cum
a vrea să zică, dar când este să dai peste păcat, dacă-i
înainte, te silești să-l ajungi, iar dacă-i în urmă, stai și-l
aștepți. Mă rog, ce mai la deal, la vale? așa e lumea asta și,
de-ai face ce-ai face, rămâne cum este ea; nu poți s-o întorci
cu umărul, măcar să te pui în ruptul capului. Vorba ceea: "Zi-i
lume și te mântuie". Dar ia să lăsăm toate la o parte și, până
la una-alta, hai să vedem ce-i de făcut cu cerbul, că Spânul
te-a fi așteptând cu nerăbdare. Și, dă, stăpân nu-i? trebuie
să-l asculți. Vorba ceea: "Leagă calul unde zice stăpânul".

Și odată scoate Sfânta Duminică obrăzarul și sabia lui
Statu-Palmă-Barbă-Cot, de unde le avea și, dându-le lui
Harap-Alb, zice:

— Ține aceste, că au să-ți fie de mare trebuință unde mergem. Și
chiar haidem, cu ajutorul Domnului, să isprăvim odată și
trebușoara asta.

Și pe la cântatul cucoșilor se ia Sfânta Duminică împreună cu
Harap-Alb și se duc în Pădurea Cerbului. Și cum ajung în pădure,
sapă o groapă adâncă de un stat de om, lângă un izvor, unde în
fiecare zi pe la amiază venea cerbul de bea apă, apoi se culca
acolo pe loc și dormea cât un bei, până ce asfințea soarele. Și
după aceea, sculându-se, o lua în porneală și nu mai da pe la
izvor iar până a doua zi pe la amiază.

— Ei, ei! acum groapa este gata, zise Sfânta Duminică. Tu,
Harap-Alb, rămâi aici într-însa, toată ziua, și iaca ce ai de
făcut: pune-ți obrăzarul cum se pune, iară sabia să n-o slăbești
din mână; și de-amiază, când a veni cerbul aici la izvor să bea
apă și s-a culca ș-a adormi, cu ochii deschiși, cum i-i
feleșagul, tu, îndată ce l-îi auzi horăind, să ieși încetișor și
să potrivești așa ca să-i zbori capul dintr-o singură lovitură
de sabie, și apoi repede să te arunci în groapă și să șezi acolo
într-însa până după asfințitul soarelui. Capul cerbului are să
te strige până atunci mereu pe nume, ca să te vadă, dar tu nu
cumva să te îndupleci de rugămintea lui și să te ițești la
dânsul, că are un ochi otrăvit și, când l-a pironi spre tine, nu
mai trăiești. Însă, cum a asfinți soarele, să știi că a murit
cerbul. Și atunci să iei fără frică să-i jupești pielea, iară
capul să-l iei așa întreg, cum se găsește, și apoi să vii la
mine.

Și așa, Sfânta Duminică se ia și se întoarnă singură acasă. Iară
Harap-Alb rămâne la pândă în groapă. Și, când pe la amiază,
numai iaca ce aude Harap-Alb un muget înădușit: cerbul venea
boncăluind. Și ajungând la izvor, odată și începe a bea hâlpav
la apă rece; apoi mai boncăluiește, și iar mai bea câte un
răstimp, și iar mai boncăluiește, și iar mai bea, până ce nu mai
poate. După aceea începe a-și arunca țărnă după cap, ca buhaiul,
și apoi, scurmând de trei ori cu piciorul în pământ, se
tologește jos pe pajiște, acolo pe loc, mai rumegă el cât mai
rumegă, și pe urmă se așterne pe somn, și unde nu începe a mâna
porcii la jir.

Harap-Alb, cum îl aude horăind, iese afară încetișor și, când îl
croiește o dată cu sabia pe la mijlocul gâtului, îi și zboară
capul cât colo de la trup și apoi Harap-Alb se aruncă fără sine
în groapă, după cum îl povățuise Sfânta Duminică. Atunci sângele
cerbului odată a și-nceput a curge gâlgâind și a se răspândi în
toate părțile, îndreptându-se și năboind în groapă peste
Harap-Alb, de cât pe ce era să-l înece. Iară capul cerbului,
zvârcolindu-se dureros, striga cu jale, zicând:

— Harap-Alb, Harap-Alb! De nume ți-am auzit, dar de văzut nu
te-am văzut. Ieși numai oleacă să te văd încaltea, vrednic ești
de comoara ce ți-o las, și apoi să mor cu plăcere, dragul meu!

Dar Harap-Alb tăcea molcum și de-abia își putea descleșta
picioarele din sângele închegat, care era mai-mai să umple
groapa. În sfârșit, mai strigă el, capul cerbului, cât mai
strigă, însă Harap-Alb nici nu răspunde, nici se arată, și de la
o vreme se face tăcere. Și așa, după asfințitul soarelui,
Harap-Alb iese din groapă, jupește pielea cerbului cu băgare de
seamă, să nu smintească vreo piatră din locul ei, apoi ia capul
întreg, așa cum se găsea, și se duce la Sfânta Duminică.

— Ei, Harap-Alb, zise Sfânta Duminică, așa-i că am scos-o la
capăt și asta?

— Așa; cu ajutorul lui Dumnezeu și cu al sfinției-voastre,
răspunse Harap-Alb, am izbutit, măicuță, să facem și acum pe
cheful Spânului, rămânere-aș păgubaș de dânsul să rămân, și să-l
văd când mi-oi vedea ceafa; atunci, și nici atunci, că tare mi-i
negru înaintea ochilor!

— Lasă-l, Harap-Alb, în plata lui Dumnezeu, că și-a da el Spânul
peste om vrodată; pentru că nu-i nici o faptă fără plată, zise
Sfânta Duminică. Mergi de i le du și acestea, că i-or rămânea
ele de cap odată.

Atunci Harap-Alb, mulțumind Sfintei Duminici, îi sărută mâna,
apoi încalecă pe cal și pornește tot cum a venit, mergând spre
împărăție, Dumnezeu să ne ție, că cuvântul din poveste, înainte
mult mai este... Și pe unde trecea, lumea din toate părțile îl
înghesuia: pentru că piatra cea mare din capul cerbului
strălucea de se părea că Harap-Alb soarele cu el îl ducea.

Mulți crai și împărați ieșeau înaintea lui Harap-Alb, și care
dincotro îl ruga, unul să-i dea bănărit, cât a cere el, altul
să-i dea fata și jumătate de împărăție; altul să-i dea fata și
împărăția întreagă pentru asemene odoare. Dar HarapAlb ca de foc
se ferea și, urmându-și calea înainte, la stăpânu-său le ducea.

Și într-una din seri, cum ședea Spânul împreună cu moșus ău și
cu verele sale sus într-un foișor, numai iaca ce zăresc în
depărtare un sul de raze scânteietoare, care venea înspre
dânșii; și de ce se apropia, de ce lumina mai tare, de le fura
vederile. Și deodată toată suflarea s-a pus în mișcare: lumea de
pe lume, fiind în mare nedumerire, alerga să vadă ce minune
poate să fie. Și, când colo, cine era? Harap-Alb, care venea în
pasul calului, aducând cu sine pielea și capul cerbului pe care
le-a și dat în mâna Spânului.

La vederea acestei minunății, toți au rămas încremeniți și,
uitându-se unii la alții, nu știau ce să zică. Pentru că în
adevăr era și lucru de mirare!

Dar Spânul, cu viclenia sa obicinuită, nu-și pierde cumpătul.
Și, luând vorbă, zice împăratului:

— Ei, moșule, ce mai zici? adeveritu-s-au vorbele mele? — Ce să
mai zic, nepoate?! răspunse împăratul uimit. Ia, să am eu o
slugă așa de vrednică și credincioasă ca HarapAlb, aș pune-o la
masă cu mine, că mult prețuiește omul acesta!

— Ba să-și pună pofta-n cui! răspunse Spânul cu glas răutăcios.
Asta n-aș face-o eu de-ar mai fi el pe cât este; doar nu-i frate
cu mama, să-l pun în capul cinstei! Eu știu, moșule, că sluga-i
slugă și stăpânu-i stăpân; s-a mântuit vorba. Na, na, na! d-apoi
pentru vrednicia lui mi l-a dat tata, căci altfel de ce l-aș fi
luat cu mine. Hei, hei! Nu știți d-voastră ce poam-a dracului e
Harap-Alb aista! Până l-am dat la brazdă, mi-am stupit sufletul
cu dânsul. Numai eu îi vin de hac. Vorba ceea: "Frica păzește
bostănăria". Alt stăpân în locul meu nu mai face brânză cu
Harap-Alb, cât îi lumea și pământul. Ce te potrivești, moșule?
Cum văd eu, d-ta prea intri în voia supușilor. De-aceea nu-ți
dau cerbii pietre scumpe și urșii sălăți. Mie unuia știu că
nu-mi suflă nimene în borș: când văd că mâța face mărazuri, ți-o
strâng de coadă, de mănâncă și mere pădurețe, căci n-are
încotro... Dacă ți-a ajuta Dumnezeu să mă rânduiești mai degrabă
în locul d-tale, îi vedea, moșule dragă, ce prefacere are să ia
împărăția; n-or mai ședea lucrurile tot așa moarte cum sunt.
Pentru că știi vorba ceea: "Omul sfințește locul!"... Fost-ai și
d-ta la tinerețe, nu zic. Dar acum îți cred. Dă, bătrânețe nu-s?
Cum n-or sta trebile baltă!

În sfârșit, Spânului îi mergea gura ca pupăza, de-a amețit pe
împăratul, încât a uitat și de Harap-Alb, și de cerb, și de tot.

Fetele împăratului însă priveau la verișor... cum privește
câinele la mâță, și le era drag ca sarea-n ochi: pentru că le
spunea inima ce om fără de lege este Spânul. Dar cum erau să
iasă ele cu vorba înaintea tatălui lor? Spânul n-avea de cine...
Vorba ceea: "Găsise un sat fără câini și se primbla fără băț".
Că altă, ce pot să zic?

La vro câteva zile după asta, împăratul făcu un ospăț foarte
mare în cinstea nepotu-său, la care ospăț au fost poftiți cei
mai străluciți oaspeți: împărați, crai, voievozi, căpitanii
oștirilor, mai-marii orașelor și alte fețe cinstite.

În ziua de ospăț, fetele împăratului s-au pus cu rugămintea pe
lângă Spân să dea voie lui Harap-Alb ca să slujească și el la
masă. Spânul, neputându-le strica hatârul, cheamă pe Harap-Alb
de față cu dânsele și-i învoi aceasta, însă cu tocmală, ca în
tot timpul ospățului să stea numai la spatele stăpânu-său și
nici măcar să-și ridice ochii la ceilalți meseni, că de l-oi
vedea obrăznicindu-se cumva, acolo pe loc îi și tai capul.

— Auzit-ai ce am spus, slugă netrebnică, zise Spânul, arătând
lui Harap-Alb tăișul paloșului, pe care jurase credință și
supunere Spânului la ieșirea din fântână.

— Da, stăpâne, răspunse Harap-Alb cu umilință; sunt gata la
porunca luminării-voastre.

Fetele împăratului au mulțumit Spânului și pentru atâta.

Amu, tocmai pe când era temeiul mesei, și oaspeții, tot gustând
vinul de bun, începuse a se chiurchiului câte oleacă, numai iaca
o pasăre măiastră se vede bătând la fereastră și zicând cu glas
muieratic:

— Mâncați, beți și vă veseliți, dar de fata împăratului Roș nici
nu gândiți!

Atunci, deodată, tuturor mesenilor pe loc li s-a stricat cheful
și au început a vorbi care ce știa și cum îi ducea capul: unii
spuneau că împăratul Roș, având inimă haină, nu se mai satură de
a vărsa sânge omenesc; alții spuneau că fata lui este o
farmazoană cumplită, și că din pricina ei se fac atâtea jertfe;
alții întăreau spusele celorlalți, zicând că chiar ea ar fi
venit în chip de pasăre de a bătut acum la fereastră, ca să nu
lase și aici lumea în pace. Alții ziceau că, oricum ar fi, dar
pasărea aceasta nu-i lucru curat; și că trebuie să fie un trimis
de undeva, numai pentru a iscodi casele oamenilor. Alții, mai
fricoși, își stupeau în sân, menind-o ca să se întoarcă pe capul
acelui care a trimis-o. În sfârșit, unii spuneau într-un fel,
alții în alt fel, și multe se ziceau pe seama fetei împăratului
Roș, dar nu se știa care din toate acele vorbe este cea
adevărată.

Spânul, după ce-i ascultă pe toți cu luare-aminte, clătină din
cap și zise:

— Rău e când ai a face tot cu oameni care se tem și de umbra
lor! D-voastră, cinstiți oaspeți, se vede că pașteți boboci, de
nu vă pricepeți al cui fapt e acesta.

Și atunci Spânul repede își ațintește privirile asupra lui
Harap-Alb și, nu știu cum, îl prinde zâmbind.

— Așa... slugă vicleană ce-mi ești!? Vasăzică, tu ai știință de
asta și nu mi-ai spus. Acum degrabă să-mi aduci pe fata
împăratului Roș, de unde știi și cum îi ști tu. Hai, pornește!
Și nu cumva să faci de altfel, că te-ai dus de pe fața
pământului!

Atunci Harap-Alb, ieșind plin de mâhnire, se duce în grajd la
cal și, netezindu-l pe coamă și sărutându-l, zice:

— Dragul meu tovarăș, la grea nevoie m-a băgat iar Spânul! Amu a
scornit alta: cică să-i aduc pe fata împăratului Roș de unde-oi
ști. Asta-i curat vorba ceea: "Poftim pungă la masă, dacă ți-ai
adus de-acasă." Se vede că mi s-a apropiat funia la par. Cine
știe ce mi s-a mai întâmpla! Cu Spânul tot am dus-o cum am
dus-o, câine-câinește, până acum. Dar cu omul roș nu știu, zău,
la cât mi-a sta capul. Ș-apoi, unde s-a fi găsind acel împărat
Roș și fata lui, care cică este o farmazoană cumplită, numai
Cel-de-pe-comoară a fi știind! Parcă dracul vrăjește, de n-apuc
bine a scăpa din una și dau peste alta! Se vede că m-a născut
mama într-un ceas rău, sau nu știu cum să mai zic, ca să nu
greșesc înaintea lui Dumnezeu. Mă pricep eu tare bine ce ar
trebui să fac, ca să se curme odată toate aceste. Dar m-am
deprins a târâi după mine o viață ticăloasă. Vorba ceea: "Să nu
dea Dumnezeu omului cât poate el suferi".

— Stăpâne, zise atunci calul, nechezând cu înfocare, nu te mai
olicăi atâta! După vreme rea, a fi el vreodată și senin. Dac'ar
sta cineva să-și facă seamă de toate cele, cum chitești d-ta,
apoi atunci ar trebui să vezi tot oameni morți pe toate
cărările... Nu fi așa de nerăbdător! De unde știi că nu s-or
schimba lucrurile în bine și pentru d-ta? Omul e dator să se
lupte cât a putea cu valurile vieții, căci știi că este o vorbă:
"Nu aduce anul ce aduce ceasul". Când sunt zile și noroc, treci
prin apă și prin foc și din toate scapi nevătămat. Vorba
cântecului:

Fă-mă, mamă, cu noroc,
Și măcar m-aruncă-n foc.
Las' pe mine, stăpâne, că știu eu pe unde te-oi duce la
împăratul Roș: pentru că m-au mai purtat o dată păcatele pe
acolo cu tatu-tău, în tinerețile lui. Hai, încalecă pe mine și
ține-te bine, că acum am să-mi arăt puterile chiar de aici, de
pe loc, în ciuda Spânului, ca să-i punem venin la inimă.

Harap-Alb atunci încalecă, și calul, nechezând o dată puternic,
zboară cu dânsul:

În înaltul cerului,
Văzduhul pământului
și o ia de-a curmeziș:
De la nouri către soare,
Printre lună și luceferi,
Stele mândre lucitoare.
Și apoi, de la o vreme, începe a se lăsa lin ca vântul, și luând
de-a lungul pământului, merg spre împărăție, Dumnezeu să ne ție,
că cuvântul din poveste, înainte mult mai este.

Dar ia să vedem, ce se mai petrece la masă după ducerea lui
Harap-Alb?

— Hei, hei! zise Spânul în sine, tremurând de ciudă: nu te-am
știut eu că-mi ești de aceștia, că de mult îți făceam felul!...
Dar trăind și nemurind, te-oi sluji eu, măi badeo!... Paloșul
ista are să-ți știe de știre... Ei, vedeți, moșule și cinstiți
meseni, cum hrănești pe dracul, fără să știi cu cine ai de-a
face? Dacă nu-s și eu un puișor de om în felul meu, dar tot m-a
tras Harap-Alb pe sfoară! Bine-a zis cine-a zis: "Că unde-i
cetatea mai tare, acolo bate dracul război mai puternic".

În sfârșit, împăratul, fetele sale și toți oaspeții rămaseră
încremeniți, Spânul, bodrogănind din gură, nu știa cum să-și
ascundă ura, iară Harap-Alb, îngrijit de ce i s-ar mai putea
întâmpla în urmă, mergea tot înainte prin locuri pustii și cu
greu de străbătut.

Și când să treacă un pod peste o apă mare, iaca o nuntă de
furnici trecea și ea tocmai atunci podul. Ce să facă HarapAlb ?
Stă el oleacă și se sfătuiește cu gândul: "Să trec peste
dânsele, am să omor o mulțime; să dau prin apă, mă tem că m-oi
îneca, cu cal cu tot. Dar tot mai bine să dau prin apă, cum a da
Dumnezeu, decât să curm viața atâtor gâzulițe nevinovate". Și
zicând Doamne-ajută, se aruncă cu calul în apă, o trece înot
dincolo, la cela mal, fără primejdie și apoi își ia drumul
înainte. Și cum mergea el, numai iaca i se înfățișază o furnică
zburătoare zicând:

— Harap-Alb, fiindcă ești așa de bun, de ți-a fost milă de viața
noastră, când treceam pe pod, și nu ne-ai stricat veselia, vreau
să-ți fac și eu un bine: na-ți aripa asta, și când îi avea
vrodată nevoie de mine, să dai foc aripei, și atunci eu împreună
cu tot neamul meu avem să-ți venim în ajutor.

Harap-Alb, strângând aripa cu îngrijire, mulțumește furnicii
pentru ajutorul făgăduit și apoi pornește tot înainte.

Și mai merge el cât merge, și numai iaca ce aude o bâzâitură
înădușită. Se uită el în dreapta, nu vede nimica; se uită în
stânga, nici atâta; și când se uită în sus, ce să vadă? Un roi
de albine se învârtea în zbor pe deasupra capului său și umblau
bezmetice de colo până colo, neavând loc unde să se așeze.
Harap-Alb, văzându-le așa, i se face milă de dânsele și,
luându-și pălăria din cap, o pune pe iarbă la pământ, cu gura-n
sus, și apoi el se dă într-o parte. Atunci, bucuria albinelor;
se lasă jos cu toatele și se adună ciotcă în pălărie. Harap-Alb,
aflându-se cu părere de bine despre asta, aleargă în dreapta și
în stânga și nu se lasă până ce găsește-un buștihan putregăios,
îl scobește cu ce poate și-i face urdiniș; după aceea așază
niște țepuși într-însul, îl freacă pe dinăuntru cu cătușnică, cu
sulcină, cu mătăciune, cu poala sântă-Măriei și cu alte buruiene
mirositoare și prielnice albinelor și apoi, luându-l pe umăr, se
duce la roi, răstoarnă albinele frumușel din pălărie în
buștihan, îl întoarce binișor cu gura în jos, îi pune deasupra
niște captălani, ca să nu răzbată soarele și ploaia înlăuntru,
și apoi, lăsându-l acolo pe câmp, între flori, își caută de drum.

Și cum mergea el, mulțumit în sine pentru această facere de
bine, numai iaca i se înfățișază înainte crăiasa albinelor,
zicându-i:

— Harap-Alb, pentru că ești așa de bun și te-ai ostenit de ne-ai
făcut adăpost, vreau să-ți fac și eu un bine în viața mea: na-ți
aripa asta și, când îi avea vreodată nevoie de mine, aprinde-o,
și eu îndată am să-ți vin întru ajutor.

Harap-Alb, luând aripa cu bucurie, o strânge cu îngrijire; apoi,
mulțumind crăiesei pentru ajutorul făgăduit, pornește,
urmându-și calea tot înainte.

Mai merge el cât merge și, când la poalele unui codru, numai
iaca ce vede o dihanie de om, care se pârpâlea pe lângă un foc
de douăzeci și patru de stânjeni de lemne și tot atunci striga,
cât îi lua gura, că moare de frig. Și-apoi, afară de aceasta,
omul acela era ceva de speriat; avea niște urechi clăpăuge și
niște buzoaie groase și dăbălăzate. Și când sufla cu dânsele,
cea deasupra se răsfrângea în sus peste scăfârlia capului, iar
cea dedesubt atârna în jos, de-i acoperea pântecele. Și, ori pe
ce se oprea suflarea lui, se punea promoroaca mai groasă de-o
palmă. Nu era chip să te apropii de dânsul, că așa tremura de
tare, de parcă-l zghihuia dracul. Și dac-ar fi tremurat numai
el, ce ți-ar fi fost? Dar toată suflarea și făptura de
primprejur îi țineau hangul: vântul gemea ca un nebun, copacii
din pădure se văicărau, pietrele țipau, vreascurile țiuiau și
chiar lemnele de pe foc pocneau de ger. Iară veverițele,
găvozdite una peste alta în scorburi de copaci, suflau în unghii
și plângeau în pumni, blestemându-și ceasul în care s-au născut.
Mă rog, foc de ger era: ce să vă spun mai mult! HarapAlb, numai
o țâră cât a stat de s-a uitat, a făcut țurțuri la gură și,
neputându-și stăpâni râsul, zise cu mirare:

— Multe mai vede omul acesta cât trăiește! Măi tartorule, nu
mânca haram și spune drept, tu ești Gerilă? Așă-i că taci?... Tu
trebuie să fii, pentru că și focul îngheață lângă tine, de
arzuliu ce ești.

— Râzi tu, râzi, Harap-Alb, zise atunci Gerilă tremurând, dar,
unde mergi, fără mine n-ai să poți face nimica.

— Hai și tu cu mine, dacă vrei, zise Harap-Alb; de-abia te-i mai
încălzi mergând la drum, căci nu e bine când stai locului.

Gerilă atunci se ia cu Harap-Alb și pornesc împreună. Și mergând
ei o bucată înainte, Harap-Alb vede altă drăcărie și mai mare: o
namilă de om mânca brazdele de pe urma a 24 de pluguri și tot
atunci striga în gura mare că crapă de foame.

— Ei, apoi să nu bufnești de râs? zise Harap-Alb. Măi, măi, măi!
că multe-ți mai văd ochii! Pesemne c-aista-i Flămânzilă,
foametea, sac fără fund sau cine mai știe ce pricopseală a fi,
de nu-l poate sătura nici pământul.

— Râzi tu, râzi, Harap-Alb, zice atunci Flămânzilă, dar, unde
mergeți voi, fără mine n-aveți să puteți face nici o ispravă.

— Dacă-i așa, hai și tu cu noi, zise Harap-Alb, că doar n-am a
te duce în spinare.

Flămânzilă atunci se ia după Harap-Alb și pornesc tustrei
înainte. Și mai mergând ei o postată, numai iaca Harap-Alb vede
altă minunăție și mai mare: o arătare de om băuse apa de la 24
de iazuri și o gârlă pe care umblau numai 500 de mori și tot
atunci striga în gura mare că se usucă de sete.

— Măi, da' al dracului onànie de om e și acesta! zise HarapAlb.
Grozav burdăhan și nesățios gâtlej, de nu pot să-i potolească
setea nici izvoarele pământului; mare ghiol de apă trebuie să
fie în mațele lui! Se vede că acesta-i prăpădenia apelor,
vestitul Setilă, fiul Secetei, născut în zodia rațelor și
împodobit cu darul suptului.

— Râzi tu, râzi, Harap-Alb, zise atunci Setilă, căruia începu
a-i țâșni apa pe nări și pe urechi, ca pe niște lăptoace de
mori, dar, unde vă duceți voi, fără mine degeaba vă duceți.

— Hai și tu cu noi, dacă vrei, zise Harap-Alb; de-abia nu te-ai
mai linciuri atâta în cele ape, îi scăpa de blestemul broaștelor
și-i da răgaz morilor să umble, că destul ți-ai făcut mendrele
până acum. Ce, Doamne iartă-mă, îi face broaște în pântece de
atâta apă!

Setilă atunci se ia după Harap-Alb și pornesc tuspatru înainte.
Și mai mergând ei o bucată, numai iaca ce vede Harap-Alb altă
minunăție și mai minunată: o schimonositură de om avea în frunte
numai un ochi, mare cât o sită și, când îl deschidea, nu vedea
nimica; da chior peste ce apuca. Iară când îl ținea închis, dar
fie zi, dar fie noapte, spunea că vede cu dânsul în măruntaiele
pământului.

— Iaca, începu el a răcni ca un smintit, toate lucrurile mi se
arată găurite, ca sitișca, și străvezii, ca apa cea limpede;
deasupra capului meu văd o mulțime nenumărată de văzute și
nevăzute; văd iarba cum crește din pământ; văd cum se
rostogolește soarele după deal, luna și stelele cufundate în
mare; copacii cu vârful în jos, vitele cu picioarele în sus și
oamenii umblând cu capul între umere; văd, în sfârșit, ceea ce
n-aș mai dori să vadă nimene, pentru a-și osteni vederea: văd
niște guri căscate uitându-se la mine și nu-mi pot da seama de
ce vă mirați așa, mira-v-ați de... frumusețe-vă!

Harap-Alb atunci se bate cu mâna peste gură și zice: — Doamne
ferește de omul nebun, că tare-i de jălit, sărmanul! Pe de-o
parte îți vine a râde și pe de alta îți vine a-l plânge. Dar se
vede că așa l-a lăsat Dumnezeu. Poate că acesta-i vestitul
Ochilă, frate cu Orbilă, văr primare cu Chiorilă, nepot de soră
lui Pândilă, din sat de la Chitilă, peste drum de Nimerilă. Ori
din târg de la Să-l-cați, megieș cu Căutați și de urmă nu-i mai
dați. Mă rog, unu-i Ochilă pe fața pământului, care vede toate
și pe toți altfel de cum vede lumea cealaltă; numai pe sine nu
se vede cât e de frumușel. Parcă-i un boț, chilimboț boțit, în
frunte cu un ochi, numai să nu fie de deochi!

— Râzi tu, râzi, Harap-Alb, zise atunci Ochilă, uitându-se
închiorchioșat, dar, unde te duci, fără de mine rău are să-ți
cadă. Fata împăratului Roș nu se capătă așa de lesne cum crezi
tu. Din gardul Oancei ți-a da-o împăratul, dacă n-oi fi și eu
pe-acolo.

— Hai și tu cu noi, dacă vrei, zise Harap-Alb, că doar n-avem a
te duce de mână, ca pe un orb.

Ochilă atunci se ia și el după Harap-Alb și pornesc tuscinci
înainte. Și mai mergând ei o bucată, numai iaca ce vede
Harap-Alb altă bâzdâganie și mai și: o pocitanie de om umbla cu
arcul după vânat păsări. Ș-apoi, chitiți că numai în arc se
încheia tot meșteșugul și puterea omului aceluia? Ți-ai găsit!
Avea un meșteșug mai drăcos și o putere mai pe sus decât își
poate dracul închipui: când voia, așa se lățea de tare, de
cuprindea pământul în brațe. Și altă dată, așa se deșira și se
lungea de grozav, de ajungea cu mâna la lună, la stele, la soare
și cât voia de sus. Și dacă se întâmpla să nu nimerească
păsările cu săgeata, ele tot nu scăpau de dânsul; ți le prindea
cu mâna din zbor, le răsucea gâtul cu ciudă și apoi le mânca
așa, crude, cu pene cu tot. Chiar atunci avea un vraf de păsări
dinainte și ospăta dintr-însele cu lăcomie, ca un vultan
hămesit. Harap-Alb, cuprins de mirare, zise:

— Dar oare pe acesta cum mama dracului l-o fi mai chemând?

— Zi-i pe nume, să ți-l spun, răspunse atunci Ochilă, zâmbind pe
sub mustăți.

— Dar te mai duce capul ca să-l botezi? Să-i zici Păsărilă... nu
greșești; să-i zici Lățilă... nici atâta; să-i zici Lungilă...
asemene; să-i zici Păsări-Lăți-Lungilă, mi se pare că e mai
potrivit cu năravul și apucăturile lui, zise Harap-Alb,
înduioșat de mila bietelor păsări. Se vede că acesta-i vestitul
Păsări- Lăți-Lungilă, fiul săgetătorului și nepotul arcașului;
brâul pământului și scara cerului; ciuma zburătoarelor și spaima
oamenilor, că altfel nu te pricepi cum să-i mai zici.

— Râzi tu de mine, râzi, Harap-Alb, zise atunci Păsări-Lăți-
Lungilă, dar mai bine ar fi să râzi de tine, căci nu știi ce
păcat te paște. Chitești că fata împăratului Roș numai așa se
capătă? Poate n-ai știință ce vidmă de fată e aceea, când vrea,
se face pasăre măiastră, îți arată coada, și ia-i urma dacă
poți! De n-a fi și unul ca mine pe-acolo, degeaba vă mai bateți
picioarele ducându-vă.

— Hai și tu cu noi, dacă vrei, zise atunci Harap-Alb; de-abia
mi-i lua pe Gerilă de țuluc și l-îi purta cu nasul pe la soare,
doar s-a încălzi câtuși decât și n-a mai clănțăni atâta din
măsele, ca un cocostârc de cei bătrâncioși, că parcă mă strânge
în spate când îl văd așa.

Păsări-Lăți-Lungilă se ia atunci după Harap-Alb și pornesc ei
tusșase înainte. Și pe unde treceau, pârjol făceau: Gerilă
potopea pădurile prin ardere. Flămânzilă mânca lut și pământ
amestecat cu humă și tot striga că moare de foame. Setilă sorbea
apa de prin bălți și iazuri, de se zbăteau peștii pe uscat și
țipa șarpele în gura broaștei de secetă mare ce era pe acolo.
Ochilă vedea toate cele ca dracul, și numai înghețai ce da
dintr-însul:

Că e laie,
Că-i bălaie;
Că e ciută,
Că-i cornută.
Mă rog, nebunii de-a lui, câte-n lună și în stele, de-ți venea
să fugi de ele. Sau să râzi ca un nebun, credeți-mă ce vă spun!

În sfârșit, Păsări-Lăți-Lungilă ademenea zburătoarele și,
jumulite, nejumulite, ți le păpa pe rudă, pe sămânță, de nu se
mai stăvilea nimene cu păsări pe lângă casă de răul lui.

Numai Harap-Alb nu aducea nici o supărare. Însă, ca tovarăș, era
părtaș la toate: și la pagubă, și la câștig, și prietenos cu
fiecare, pentru că avea nevoie de dânșii în călătoria sa la
împăratul Roș, care, zice, cică era un om pâclișit și răutăcios
la culme: nu avea milă de om nici cât de un câine. Dar vorba
ceea: "La unul fără suflet trebuie unul fără de lege". Și
gândesc eu că din cinci nespălați câți merg cu Harap-Alb, i-a
veni el vreunul de hac; ș-a mai da împăratul Roș și peste
oameni, nu tot peste butuci, ca până atunci. Dar iar mă întorc
și zic: mai știi cum vine vremea? Lumea asta e pe dos, toate
merg cu capu-n jos; puțini suie, mulți coboară, unul macină la
moară. Ș-apoi acel unul are atunci în mână și pâinea, și cuțitul
și taie de unde vrea și cât îi place, tu te uiți și n-ai ce-i
face. Vorba ceea: "Cine poate oase roade; cine nu, nici carne
moale". Așa și Harap-Alb și cu ai săi; poate-ar izbuti să ia
fata împăratului Roș, poate nu, dar acum, deodată, ei se tot duc
înainte și, mai la urmă, cum le-a fi norocul. Ce-mi pasă mie? Eu
sunt dator să spun povestea și vă rog să ascultați.

Amu Harap-Alb și cu ai săi mai merg ei cât merg și, într-o
târzie vreme, ajung la împărăție, Dumnezeu să ne ție, că
cuvântul din poveste, înainte mult mai este. Și cum ajung, odată
intră buluc în ogradă, tusșase. Harap-Alb înainte și ceilalți în
urmă, care de care mai chipos și mai îmbrăcat, de se târâiau
ațele și curgeau obielele după dânșii, parcă era oastea lui
Papuc Hogea Hogegarul. Și atunci, Harap-Alb se și înfățișază
înaintea împăratului Roș, spunându-i de unde, cum, cine și
pentru ce anume au venit. Împăratului i-a fost de-a mirarea,
văzând că niște golani au asemene îndrăzneală, de vin cu
nerușinare să-i ceară fata, fie din partea oricui ar fi. Dar,
nevoind a le strica inima, nu le spune nici da, nici ba, ci le
dă răspuns ca să rămâie peste noapte acolo, și până mâine
dimineață s-a mai gândi el ce trebuie să facă... Și pe altă
parte, împăratul odată cheamă în taină pe un credincios al său
și dă poruncă să-i culce în casa cea de aramă înfocată, ca să
doarmă pentru veșnicie, după cum pățise și alți pețitori, poate
mai ceva decât aceștia.

Atunci credinciosul împăratului se duce repede și dă foc casei
celei de aramă pe dedesubt, cu 24 de stânjeni de lemne, de se
face casa roșie cum e jăraticul. Apoi, cum înserează, vine și
poftește pe oaspeți la culcare. Gerilă atunci, năzdrăvan cum era
el, cheamă pe tovarășii săi deoparte și le zice încetișor:

— Măi, nu cumva să vă împingă Mititelul să intrați înaintea mea
unde ne-a duce omul țapului celui roș, că nu mai ajungeți să
vedeți ziua de mâine. Doar unu-i împăratul Roș, vestit prin
meleagurile aceste pentru bunătatea lui cea nemaipomenită și
milostivirea lui cea neauzită. Îl știu eu cât e de primitor și
de darnic la spatele altora. Numai de nu i-ar muri mulți
înainte! să trăiască trei zile cu cea de-alaltaieri! D-apoi
fetișoara lui; a zis dracul și s-a făcut; bucățică ruptă
tată-său în picioare, ba încă și mai și. Vorba ceea: "Capra sare
masa, și iada sare casa". Dar las' că și-au găsit ei omul. De nu
le-oi veni eu de hac în astă noapte, nici mama dracului nu le
mai vine!

— Așa gândesc și eu, zise Flămânzilă; și-a pus el, împăratul
Roș, boii în cârd cu dracul, dar are să-i scoată fără coarne.

— Ba mi se pare c-a da el și teleagă, și plug, și otic, și tot,
numai să scape de noi, zise Ochilă.

— Ia ascultați, măi! zise Gerilă: "Vorba lungă, sărăcia omului".
Mai bine haidem la culcare, că ne așteaptă omul împăratului cu
masa întinsă, cu făcliile aprinse și cu brațele deschise. Hai!
Ascuțiți-vă dinții și porniți după mine.

Și odată pornesc ei, teleap, teleap, teleap! Și, cum ajung în
dreptul ușii, se opresc puțin. Atunci Gerilă suflă de trei ori
cu buzișoarele sale cele iscusite și casa rămâne nici fierbinte,
nici rece, cum e mai bine de dormit într-însa. Apoi intră cu
toții înlăuntru, se tologește care unde apucă, și tac mă cheamă.
Iară credinciosul împăratului, încuind ușa pe din afară cu
repejune, le zice cu răutate:

— Las' că v-am găsit eu ac de cojoc. De-acum dormiți,
dormire-ați somnul cel de veci, că v-am așternut eu bine! Vă
veți face scrum până mâine-dimineață.

Apoi îi lasă acolo și el se duce în treaba lui. Dar HarapAlb și
cu ai săi nici nu bindiseau de asta; ei, cum au dat de
căldurică, pe loc li s-au muiat ciolanele și au început a se
întinde și a se hârjoni în ciuda fetei împăratului Roș. Ba încă
Gerilă se întindea de căldură, de-i treceau genunchile de gură.
Și hojma morocănea pe ceilalți, zicând:

— Numai din pricina voastră am răcit casa; căci pentru mine era
numai bună, cum era. Dar așa pățești dacă te iei cu niște
bicisnici. Las' că v-a mai păli el berechetul acesta de altă
dată! Știi că are haz și asta? Voi să vă lăfăiți și să huzuriți
de căldură, iară eu să crap de frig. Bu...nă treabă! Să-mi dau
eu liniștea mea pentru hatârul nu știu cui? Acuși vă târnâiesc
prin casă, pe rudă pe sămânță; încaltea să nu se aleagă nimica
nici de somnul meu, dar nici de al vostru.

— Ia tacă-ți gura, măi Gerilă! ziseră ceilalți. Acuși se face
ziuă, și tu nu mai stinchești cu brașoave de-ale tale. Al
dracului lighioaie mai ești! Destul acum, că ne-ai făcut capul
călindar. Cine-a mai dori să facă tovărășie cu tine aibă-și
parte și poarte-ți portul. Că pe noi știu că ne-ai amețit. Are
cineva cap să se liniștească de răul tău? I-auzi-l-ăi: parcă-i o
moară hodorogită. Numai gura lui se aude în toate părțile. Hojma
tolocănește pentru nimica toată, curat ca un nebun. Tu, măi,
ești bun de trăit numai în pădure, cu lupii și cu urșii, dar nu
în case împărătești și între niște oameni cumsecade.

— Ia ascultați, măi, dar de când ați pus voi stăpânire pe mine?
zise Gerilă. Apoi nu mă faceți din cal măgar, că vă veți găsi
mantaua cu mine! Eu îs bun cât îs bun, dar și când mă scoate
cineva din răbdare, apoi nu-i trebuie nici țigan de laie
împotriva mea.

— Zău, nu șuguiești, măi Buzilă? Da' amarnic mai ești la viață;
când te mânii, faci sânge-n baligă, zise Flămânzilă. Tare-mi
ești drag!... Te-aș vârî în sân, dar nu încapi de urechi... Ia
mai bine ogoiește-te oleacă și mai strânge-ți buzișoarele acasă;
nu de alta, dar să nu-ți pară rău pe urmă, că doar nu ești numai
tu în casa asta.

— Ei, apoi! Vorba ceea: "Fă bine, să-ți auzi rău", zise Gerilă.
Dacă nu v-am lăsat să intrați aici înaintea mea, așa mi se cade;
ba încă și mai rău decât așa. Cine-a face de altă dată ca mine,
ca mine să pățească.

— Ai dreptate, măi Gerilă, numai tu nu te cauți, zise Ochilă.
Dar cu prujituri de-a tale, ia acuși se duce noaptea, și vai de
odihna noastră. Măcar tu să fii acela, ce ai zice, când ți-a
strica cineva somnul? Ba încă ai dat peste niște oameni ai lui
Dumnezeu, dar, să fi fost cu alții, hei, hei! mâncai papara până
acum.

— Dar nu mai tăceți, măi? Că ia acuși trec cu picioarele prin
pereți și ies afară cu acoperământul în cap, zise LățiLungil ă.
Parcă nu faceți a bine, de nu vă mai astâmpără dracul nici la
vremea asta. Măi Buzilă, mi se pare că tu ești toată pricina
gâlcevei dintre noi.

— Ba bine că nu! zise Ochilă. Are el noroc de ce are, dar știu
eu ce i-ar trebui.

— Ia, să-i faci chica topor, spinarea dobă și pântecele cobză,
zise Setilă, căci altmintrelea nici nu e de chip s-o scoți la
capăt cu buclucașul acesta.

Gerilă, văzând că toți îi stau împotrivă, se mânie atunci și
unde nu trântește o brumă pe pereți, de trei palme de groasă, de
au început a clănțăni și ceilalți de frig, de sărea cămășa de pe
dânșii.

— Na! încaltea v-am făcut și eu pe obraz. De-acum înainte
spuneți ce vă place, că nu mi-a fi ciudă, zise Gerilă, râzând cu
hohot. Ei, apoi? Cică să nu te strici de râs!... De HarapAlb, nu
zic. Dar voi, mangosiților și farfasiților, de câte ori îți fi
dormit în stroh și pe târnomată, să am eu acum atâția bani în
pungă nu mi-ar mai trebui altă! Oare nu cumva v-ați face și voi,
niște feciori de ghindă, fătați în tindă, că sunteți obraze
subțiri?

— Iar cauți sămânță de vorbă, măi Buzilă? ziseră ceilalți. Al
dracului să fii cu tot neamul tău, în vecii vecilor, amin!

— De asta și eu mă anin și mă închin la cinstita fața voastră,
ca la un codru verde, cu un poloboc de vin și cu unul de pelin,
zise Gerilă. Și hai de-acum să dormim, mai acuși să ne trezim,
într-un gând să ne unim, pe Harap-Alb să-l slujim și tot
prieteni să fim; căci cu vrajbă și urgie raiul n-o să-l dobândim.

În sfârșit, ce-or fi mai dondănit ei, și cât or mai fi dondănit,
că numai iaca se face ziuă!... Și atunci, credinciosul
împăratului, crezând că s-a curățit de oaspeți, vine cu gândul
să măture scrumul afară, după rânduială. Și când ajunge mai
aproape, ce să vadă? Casa cea de aramă, înfocată așa de strașnic
de cu sară, era acum toată numai un sloi de gheață, și nu se mai
cunoștea pe din afară nici ușă, nici ușori, nici gratii, nici
obloane la ferești, nici nimica; iar înlăuntru se auzea un
tărăboi grozav; toți bocăneau la ușă cât ce puteau și strigau
cât le lua gura, zicând:

— Nu știm ce fel de împărat e acesta, de ne lasă fără scânteie
de foc în vatră, să degerăm aicea... Așa sărăcie de lemne nu s-a
văzut nici la bordeiul cel mai sărăcăcios. Vai de noi și de noi,
că ne-a înghețat limba în gură și măduva în ciolane de frig!...

Credinciosul împăratului, auzind aceste, pe de-o parte l-a
cuprins spaima, iară pe de alta s-a îndrăcit de ciudă. Și dă el
să descuie ușa, nu poate; dă s-o desprindă, nici atâta. Pe urmă,
ce să facă? Aleargă și vestește împăratului despre cele
întâmplate. Atunci vine și împăratul cu o mulțime de oameni, cu
cazmale ascuțite și cu cazane pline cu uncrop; și unii tăiau
gheața cu cazmalele, alții aruncau cu uncrop pe la țâțânile ușii
și în borta cheii și după multă trudă, cu mare ce hălăduiesc de
deschid ușa și scot pe oaspeți afară. Și când colo, ce să vezi?
Toți erau cu părul, cu barba și mustețile pline de promoroacă,
de nu-i cunoșteai, oameni sunt, draci sunt, ori alte arătări. Și
așa tremurau de tare, de le dârdâiau dinții în gură. Iară mai
ales pe Gerilă parcă-l zghihuiau toți dracii; pozne făcea cu
buzișoarele sale, încât s-a îngrozit și împăratul Roș când l-a
văzut făcând așa de frumușel.

Atunci Harap-Alb, ieșind dintre dânșii, se înfățișază cuviincios
înaintea împăratului, zicând:

— Prea înălțate împărate! Luminarea-sa, nepotul prea
puternicului Verde-împărat, m-a fi așteptând cu nerăbdare.
De-acum înainte, cred că mi-ți da fata, ca să vă lăsăm în pace
și să ne ducem în treaba noastră.

— Bine, voinice, zise împăratul, uitându-se la dânșii cam acru
oarecum; a veni ea și vremea aceea... Dar acum, deodată, ia să
ospătați ceva, ca să nu ziceți că ați ieșit din casa mea ca de
la o casă pustie.

— Parcă v-a ieșit un sfânt din gură, luminate împărate, zise
atunci Flămânzilă, că ne ghiorăiesc mațele de foame.

— Poate ni-ți da și ceva de udeală, măria-ta, zise Setilă, că ne
sfârâie gâtlejul de sete.

— Ia lăsați, măi, zise Ochilă, clipocind mereu din gene, că
luminarea-sa știe ce ne trebuie.

— Așa cred și eu, zise Păsărilă, doar, de-a putere-a hi, am
căzut la casă împărătescă, să nu vă temeți, că are înălțimea-sa
atâta purtare de grijă, ca să nu fim chinuiți cu frig, cu foame
și cu sete.

— Mai rămâne îndoială despre asta, zise Gerilă, tremurând
cumplit. Dar n-aveți știință că înălțimea-sa este tata
flămânzilor și al însetaților? Și tocmai de asta mă bucur și eu,
că de-abia m-oi mai încălzi oleacă bând sângele Domnului.

— Ei, tacă-vă gura de-acum! zise Flămânzilă. Destul e o măciucă
la un car de oale. Nu tot cetărați pe măria-sa, că om e
dumnealui. Pentru niște sărăcuți ca noi e greu de făcut trebi de
acestea. Dar la o împărăție, ca cum te-ar pișca un purice; nu se
mai bagă în seamă.

— Din partea mea, mâncarea-i numai o zăbavă; băuturica mai este
ce este, zise Setilă; și aș ruga pe luminarea-sa că, dacă are de
gând a ne ospăta, după cum s-a hotărât, apoi să ne îndesească
mai mult cu udeala, pentru că acolo stă toată puterea și
îndrăzneala. Vorba ceea: "Dă-i cu cinstea, să piară rușinea".
Dar mi se pare că ne-am prea întins cu vorba, și luminarea-sa nu
știe cum să ne mai intre în voie.

— Acum, de ne-ar da odată ce ne-ar da, zise Flămânzilă, căci mă
roade inima de foame ce-mi e!

— Ia mai îngăduiți oleacă, măi, zise Ochilă, că doar nu v-au mas
șoarecii în pântece. Acuși s-or aduce și bucatele, și vinul, și
numai de-ați avea pântece unde să le puneți.

— Îndată vi s-a aduce și demâncare, și băutură, zise împăratul,
numai de-ți putea dovedi cât vă voi da eu; că de nu-ți fi
mâncători și băutori buni, v-ați găsit beleaua cu mine, nu vă
pară lucru de șagă!

— De ne-ar da Dumnezeu tot atâta supărare, luminarea voastră,
zise atunci Flămânzilă, ținându-se cu mâinile de pântece.

— Și înălțimei-voastre gând bun și mână slobodă, ca să ne dați
cât se poate mai multă mâncare și băuturică, zise Setilă, căruia
îi lăsa gura apă, că din mâncare și băutură, las' dacă ne-a
întrece cineva; numai la treabă nu ne prea punem cu toți nebunii.

Împăratul tăcea la toate aceste, îi asculta cu dezgust și numai
înghițea noduri. Dar, în gândul său: "Bine, bine! Cercați voi
marea cu degetul, dar ia să vedem cum i-ți da de fund? Vă vor
ieși ele toate aceste pe nas". După aceea îi lasă și se duce în
casă.

În sfârșit, nu trece mult la mijloc, și numai iaca li se aduc 12
harabale cu pâine, 12 ialovițe fripte și 12 buți pline cu vin de
cel hrănit, de care, cum bei câte oleacă, pe loc ți se taie
picioarele, îți sclipesc ochii în cap, ți se încleie limba în
gură și începi a bolborosi turcește, fără să știi bechiu măcar.
Flămânzilă și Setilă ziseră atunci celorlalți:

— Măi, mâncați voi întâi și beți cât veți putea, dar nu cumva să
vă puneți mintea cu toată mâncarea și băutura, c-apoi al vostru
e dracul!

Atunci Harap-Alb, Gerilă, Ochilă și Păsări-Lăți-Lungilă se pun
ei de ospătează și beau cât le trebuie. Dar ce are a face? parcă
nici nu se cunoștea de unde au mâncat și au băut; că doar
mâncare și băutură era acolo, nu șagă; dă, ca la o împărăție.

— Hai, ia dați-vă deoparte, măi păcătoșilor, că numai ați
crâmpoțit mâncarea, ziseră atunci Flămânzilă și Setilă, care
așteptau cu neastâmpăr, fiind rupți în coș de foame și de sete.

Și atunci unde nu începe Flămânzilă a cărăbăni deodată în gură
câte o haraba de pâine și câte o ialoviță întreagă, și repede mi
ți le-a înfulecat și le-a forfecat, de parcă n-au mai fost. Iară
Setilă, dând fundurile afară la câte o bute, horp! ți-o sugea
dintr-o singură sorbitură; și, repede-repede, mi ți le-a supt pe
toate de-a rândul, de n-a mai rămas nici măcar picătură de vin
pe doage.

După aceea, Flămânzilă a început a striga în gura mare că moare
de foame și a zvârli cu ciolane în oamenii împărătești, care
erau acolo de față.

Iară Setilă striga și el cât ce putea că crapă de sete și
zvârlea cu doage și cu funduri de poloboc în toate părțile, ca
un nebun.

Împăratul atunci, auzind vuiet tocmai din casă, iese afară și,
când vede aceste, își pune mâinile în cap de necaz.

— Măi, măi, măi! Aceștia-s curat sărăcie trimisă de la Dumnezeu
pe capu meu, zise împăratul în sine, plin de amărăciune. Mi se
pare că, ia acum, mi-am dat și eu peste oameni.

Harap-Alb iese atunci din mijlocul celorlalți și iar se
înfățișază înaintea împăratului, zicând:

— Să trăiți, luminate împărate! De-acum cred că mi-ți da fata,
ca să vă lăsăm în pace și să ne ducem în treaba noastră, căci
nepotul împăratului Verde ne-a fi așteptând cu nerăbdare.

— A veni ea și vremea aceea, voinice, zise împăratul cam cu
jumătate de gură. Dar ia mai aveți puțină răbdare, căci fata
nu-i de cele de pe drumuri, s-o luați numai așa, cum s-ar
întâmpla. Ia să mai vedem cam cum ar veni trebușoara asta. Nu-i
vorbă, de mâncat ați mâncat și de băut ați băut fiecare cât
șaptesprezece. Însă de acum înainte mai aveți și ceva treabă de
făcut: iaca, vă dau o mierță de sămânță de mac, amestecată cu
una de nisip mărunțel; și, până mâine dimineață, să-mi alegeți
macul de-o parte, fir de fir, și nisipul de altă parte; nu cumva
să găsesc vreun fir de mac printre nisip sau vreunul de nisip
printre mac, că atunci am stricat pacea. Și dacă-ți putea scoate
la capăt trebușoara asta, atunci oi mai vedea eu... Iară de nu,
veți plăti cu capul obrăznicia ce ați întrebuințat față cu mine,
ca să prindă și alții la minte văzând de patima voastră.

Și apoi, ducându-se împăratul în treaba lui, i-a lăsat să-și
bată capul cum vor ști.

Atunci Harap-Alb și cu ai săi au început a strânge din umere,
nepricepându-se ce-i de făcut.

— Ei, apoi șagă vă pare? Cu chițibușuri de aceste să ne zăbovim
noi? Pâclișit om e împăratul Roș! se vede el, zise atunci
Ochilă. Eu, nu-i vorbă, măcar că e așa de întuneric, deosebesc
tare bine firele de mac din cele de nisip. Dar numai iuțeală și
gură de furnică ar trebui să aibi ca să poți apuca, alege și
culege niște flecuștețe ca aceste, în așa scurtă vreme. Bine-a
zis cine-a zis ca să te ferești de omul roș, căci e liștai
dracul în picioare, acum văd eu.

Harap-Alb își aduce atunci aminte de aripa cea de furnică, o
scoate de unde-o avea strânsă, apoi scapără și-i dă foc cu o
bucățică de iască aprinsă. Și atunci, minune mare! Numai iaca au
și început a curge furnicile cu droaia, câtă pulbere și spuză,
câtă frunză și iarbă; unele pe sub pământ, altele pe deasupra
pământului și altele în zbor, de nu se mai curmau venind. Și,
într-un buc, au și ales nisipul de-o parte și macul de altă
parte; să fi dat mii de mii de lei, nu găseai fir de mac printre
nisip sau fir de nisip printre mac. Și apoi, în zori de ziuă,
când e somnul mai dulce, de doarme și pământul sub om, o mulțime
de furnici de cele mărunțele au străbătut înlăuntrul palatului
și au început a pișca din somn pe împăratul, de-l frigeau, nu
altăceva. Și văzându-se el cuprins de așa usturime, s-a sculat
cu nepus în masă, căci nu mai era de chip să doarmă, cum dormea
alte dăți, până pe la amiază, nesupărat de nimene. Și, cum s-a
sculat, a și început a căuta cu de-amănuntul prin așternut, să
vadă ce poate să fie. Dar a găsit nimica toată, căci furnicile
parcă intrară în pământ; s-au mistuit, de nu se știe ce s-au mai
făcut.

— A dracului treabă! Uite ce blândă mi-a ieșit pe trup. Să fi
fost nimica... parcă nu-mi vine a crede. Însă mai știu eu?...
Ori părerea mă înșală, ori s-a stricat vremea, zise împăratul;
din două, una trebuie să fie numaidecât. Dar, până una-alta, ia
să mă duc să văd: ales-au nisipul de mac acei nespălați, care-mi
rod urechile să le dau fata?

Și când se duce împăratul și vede cum se îndeplinise de bine
porunca lui, se umple de bucurie... Și, nemaiavând ce pricină să
le caute, rămâne pe gânduri.

Atunci Harap-Alb iar iese din mijlocul celorlalți și se
înfățișază împăratului, zicând:

— Preaînălțate împărate, de-acum cred că mi-ți da fata, ca să vă
lăsăm în pace și să ne ducem de unde am venit.

— A veni ea și vremea aceea, voinice, zise împăratul, îngânând
vorba printre dinți, dar până atunci mai este încă treabă; iaca
ce aveți de făcut: fata mea are să se culce desară unde se culcă
totdeauna, iară voi să mi-o străjuiți toată noaptea. Și dacă
mâine dimineață s-a afla tot colo, atunci poate să ți-o dau;
iară de nu, ce-i păți, cu nime nu-i împărți... Înțeles-ați?

— Să trăiți, luminate împărate, răspunse Harap-Alb, numai de
n-ar fi mai multă întârziere, căci stăpânul mă așteaptă și
grozavă urgie poate să cadă pe capul meu din astă pricină.

— Stăpânu-tău, ca stăpânu-tău; ce ți-a face el, asta-i deosebit
de bașcă, zise împăratul, uitându-se chiorâș la dânșii. Ieie-vă
macar și pielea de pe cap, ce am eu de-acolo? Însă pe mine
căutați să nu mă smintiți: fata și ochii din cap, căci atâta
vi-i leacul; v-ați dus pe copce, cu toată șmecheria voastră.

După aceasta, împăratul îi lasă încurcați și se duce la ale sale.

— Aici încă trebuie să fie un drac la mijloc, zise Gerilă,
clătinând din cap.

— Ba încă de cei bătrâni; săgeata de noapte și dracul cel de
amiazăzi, răspunse Ochilă. Dar nu și-a juca el mendrele
îndelung, așa cred eu.

În sfârșit, durai-vurai, seara vine, fata se culcă și HarapAlb
se pune de strajă chiar la ușa ei, iară ceilalți se înșiră tot
câte unul-unul până la poartă, după poruncă.

Și, când pe aproape de miezul nopții, fata împăratului se
preface într-o păsărică și zboară nevăzută printre cinci străji.
Dar când ajunge pe la străjerul Ochilă, el, sireicanul, mi ți-o
vede și dă de știre lui Păsărilă, zicând:

— Măi, fetișoara împăratului ne-a tras butucul. A dracului
zgâtie de fată! s-a prefăcut în păsărică, a zburat ca săgeata pe
lângă ceilalți și ei habar n-au despre asta. Ei, apoi? Lasă-te
în seama lor dacă vrei să rămâi făr' de cap. De-acum, numai noi
o putem găsi și aduce la urma ei. Taci molcum și haidem după
dânsa. Eu ți-oi arăta-o pe unde se ascunde, iară tu să mi-o
prinzi cum ți-i meșteșugul și să-i strâmbi gâtul oleacă, să se
învețe ea de altă dată a mai purta lumea pe degete.

Și atunci, odată și pornesc ei după dânsa, și nu merg tocmai
mult și Ochilă zice:

— Măi Păsărilă, iacătă-o, ia! colo, în dosul pământului,
tupilată sub umbra iepurelui; pune mâna pe dânsa și n-o lăsa!

Păsărilă atunci se lățește cât ce poate, începe a bojbăi prin
toate buruienile și, când să pună mâna pe dânsa, zbr! pe vârful
unui munte, și se ascunde după o stâncă.

— Iacătă-oi, măi, colo, în vârful muntelui, după stânca ceea,
zise Ochilă.

Păsărilă atunci se înalță puțin și începe a cotrobăi pe după
stânci; și când să pună mâna pe dânsa, zbr! și de acolo și se
duce de se ascunde tocmai după lună.

— Măi Păsărilă, iacătă-oi, ia! colo, după lună, zise Ochilă;
căci nu pot eu s-o ajung, să-i dau o scărmănătură bună.

Atunci Păsărilă se deșiră odată și se înalță până la lună. Apoi,
cuprinzând luna în brațe, găbuiește păsărica, mi ți-o înșfacă de
coadă și cât pe ce să-i sucească gâtul. Ea atunci se preface în
fată și strigă înspăimântată:

— Dăruiește-mi viața, Păsărilă, că te-oi dărui și eu cu milă și
cu daruri împărătești, așa să trăiești!

— Ba că chiar că erai să ne dăruiești cu milă și cu daruri
împărătești, dacă nu te vedeam când ai pașlit-o, farmazoană ce
ești! zise Ochilă. Știu că am tras o durdură bună căutându-te.
Ia, mai bine hai la culcuș, că se face ziuă acuși. Ș-apoi, ce-a
mai fi a mai fi.

Și odată mi ți-o înșfacă ei, unul de-o mână și altul de cealaltă
și hai! hai, hai! în zori de ziuă ajung la palat și, trecând cu
dânsa printre străji, o silesc să intre în odaia ei, tot cum a
ieșit.

— Ei, Harap-Alb, zise atunci Ochilă, dacă nu eram eu și cu
Păsărilă, ce făceați voi acum? Iaca așa, tot omul are un dar și
un amar; și unde prisosește darul nu se mai bagă în seamă
amarul. Amar era să fie de voi, de nu eram noi amândoi. Și cu
străjuirea voastră, era vai de pielea noastră!

Harap-Alb și ceilalți, nemaiavând ce zice, pleacă capul
rușinați, mulțumind lui Păsărilă și vestitului Ochilă, căci
le-au fost ca niște frați.

Și atunci, numai iaca și împăratul vine ca un leu-paraleu, să-și
ia fata pe seamă și, când o găsește sub strajă, după cum nu se
aștepta el, numa-i scânteiau ochii în cap de ciudă, dar nu avu
ce face.

Atunci Harap-Alb iar se înfățișază înaintea împăratului, zicând:

— Luminate împărate, de-acum cred că mi-ți da fata, ca să vă
lăsăm în pace și să ne ducem în treaba noastră.

— Bine, voinice, zise împăratul posomorât; a veni ea și vremea
aceea. Însă eu mai am o fată, luată de suflet, tot de o vârstă
cu fata mea; și nu e deosebire între dânsele nici la frumusețe,
nici la stat, nici la purtat. Hai, și dacă-i cunoaște-o care-i a
mea adevărată, ia-ți-o și duceți-vă de pe capul meu, că mi-ați
scos peri albi, de când ați venit. Iaca, mă duc să le pregătesc,
zise împăratul. Tu vină după mine, și, dacă-i ghici-o, ferice de
tine a fi. Iară de nu, luați-vă catrafusele și începeți a vă
cărăbăni de la casa mea, căci nu vă mai pot suferi!

Și ducându-se împăratul, pune de piaptănă și îmbracă la fel pe
amândouă fetele și apoi dă poruncă să vie Harap-Alb să ghicească
fata împăratului.

Harap-Alb, văzându-se pus în încurcală, nu mai știa ce să facă
și încotro să-o dea ca să nu greșească tocmai acum, la ducă. Și,
mai stând el pe gânduri oleacă, cum e omul tulburat, își aduce
aminte de aripa cea de albină și, scoțând-o de unde-o avea
strânsă, scapără și-i dă foc cu o bucățică de iască aprinsă. Și
atunci, numai iaca se pomenește cu crăiasa albinelor.

— Ce nevoie te-a ajuns de mine, Harap-Alb? zise ea, zburând pe
umărul său. Spune-mi, căci sunt gata să te slujesc.

Atunci Harap-Alb începe a-i spune toate cu de-amănuntul și o
roagă de toți dumnezeii ca să-i dea ajutor.

— N-ai grijă, Harap-Alb, zise crăiasa albinelor; las' că te fac
eu s-o cunoști și dintr-o mie. Hai, intră în casă cu
îndrăzneală, căci am să fiu și eu pe-acolo. Și cum îi intra,
stai puțin și te uită la fete; și care-i vedea-o că se apără cu
năframa, să știi că aceea este fata împăratului.

Atunci Harap-Alb intră, cu albina pe umăr, în odaia unde era
împăratul și cu fetele, apoi stă puțin deoparte și începe a se
uita când la una, când la alta. Și cum sta el drept ca lumânarea
și le privea, cu băgare de seamă, crăiasa albinelor zboară pe
obrazul fetei împăratului. Atunci ea, tresărind, odată începe a
țipa și a se apăra cu năframa, ca de un dușman. Lui Harap-Alb
atâta i-a trebuit: îndată face câțiva pași spre dânsa, o apucă
frumușel de mână și zice împăratului:

— Luminarea-voastră, de-acum cred că nu mi-ți mai face nici o
împiedicare, pentru că am adus întru îndeplinire tot ceea ce
ne-ați poruncit.

— Din partea mea poți s-o iei de-acum, Harap-Alb, zise
împăratul, ovilit și sarbăd la față de supărare și rușine; dacă
n-a fost ea vrednică să vă răpuie capul, fii măcar tu vrednic
s-o stăpânești, căci acum ți-o dau cu toată inima.

Harap-Alb mulțumește atunci împăratului și apoi zice fetei: —
De-acum putem să mergem, căci stăpânu-meu, luminarea-sa nepotul
împăratului Verde, a fi îmbătrânit așteptându-mă.

— Ia mai îngăduiește puțin, nerăbdătorule, zise fata
împăratului, luând o turturică în brațe, spunându-i nu știu ce
la ureche și sărutând-o cu drag; nu te grăbi așa, Harap-Alb, că
te-i pripi. Stai, că mai ai și cu mine oleacă de vorbă: înainte
de pornire, trebuie să meargă calul tău și cu turturica mea
să-mi aducă trei smicele de măr dulce și apă vie și apă moartă
de unde se bat munții în capete. Și de-a veni turturica mea
înainte cu smicelele și apa, ia-ți nădejdea despre mine, căci nu
merg, ferească Dumnezeu! Iară de-i avea noroc și-a veni calul
tău mai întâi și mi-o aduce cele poruncite, să știi că merg cu
tine, oriunde mi-i duce; s-a mântuit socoteala.

Și atunci, odată pornesc și turturica și calul, fugind pe
întrecute, când pe sus, când pe jos, după cum cerea trebuința.

Dar turturica, fiind mai ușoară, ajunge mai înainte; și pândind
tocmai când era soarele în cruce, de se odihneau munții numai
pentru o clipită, se repede ca prin foc și ia trei smicele de
măr dulce și apă vie și apă moartă, și apoi ca fulgerul se
întoarce înapoi. Și, când pe la poarta munților, calul îi iese
înainte, o propește în cale și o ia cu măgulelile, zicându-i:

— Turturică-rică, dragă păsărică, adă la mine cele trei smicele
de măr dulce, apa cea vie și cea moartă, și tu du-te înapoi
de-ți ia altele și mi-i ajunge pe drum, căci ești mai sprintenă
decât mine. Hai, nu mai sta la îndoială și dă-mi-le, căci atunci
are să fie bine și de stăpânu-meu, și de stăpână-ta, și de mine,
și de tine; iară de nu mi li-i da, stăpânu-meu Harap-Alb este în
primejdie, și de noi încă n-are să fie bine.

Turturica parcă n-ar fi voit. Dar calul n-o mai întreabă de ce-i
e cojocul; se repede și-i ia apa și smicelele cu hapca și apoi
fuge cu dânsele la fata împăratului și i le dă, de față cu
Harap-Alb. Atunci lui Harap-Alb i s-a umplut inima de bucurie.

Vine ea și turturica mai pe urmă, dar ce-ți e bună? — Alei,
țolină ce-mi ești, zise fata împăratului; da' bine m-ai vândut.
Dacă e așa, hai, pornește chiar acum la împăratul Verde și
vestește-i că venim și noi în urmă.

Atunci turturica pornește. Iară fata împăratului îngenunche
dinaintea tătâne-său și zice:

— Binecuvântează-mă, tată, și rămâi sănătos! Se vede că așa mi-a
fost sortit și n-am ce face; trebuie să merg cu HarapAlb, și
pace bună!

După aceasta, își ia cele trebuitoare la drum, apoi încalecă și
ea pe un cal năzdrăvan și stă gata de pornire. Iară HarapAlb,
luându-și oamenii săi, încalecă și el și pornesc spre împărăție,
Dumnezeu să ne ție, că cuvântul din poveste, înainte mult mai
este.

Mers-au ei și zi și noapte, nu se știe cât au mers; și, de la un
loc, Gerilă, Flămânzilă și Setilă, Păsări-Lăți-Lungilă și
năzdrăvanul Ochilă se opresc cu toții în cale, se opresc și zic
cu jale:

— Harap-Alb, mergi sănătos! De-am fost răi, tu ni-i ierta, căci
și răul câteodată prinde bine la ceva.

Harap-Alb le mulțumește ș-apoi pleacă liniștit. Fata vesel îi
zâmbește, luna-n cer a asfințit. Dar în pieptul lor răsare... Ce
răsare? Ia, un dor; soare mândru, luminos și în sine arzător, ce
se naște din scânteia unui ochi fermecător!

Și mai merg ei cât mai merg, și de ce mergeau înainte, de ce lui
Harap-Alb i se tulburau mințile, uitându-se la fată și văzând-o
cât era de tânără, de frumoasă și plină de vină-ncoace.

Sălățile din Grădina Ursului, pielea și capul cerbului le-a dus
la stăpânu-său cu toată inima. Dar pe fata împăratului Roș mai
nu-i venea s-o ducă, fiind nebun de dragostea ei. Căci era boboc
de trandafir din luna lui mai, scăldat în roua dimineții,
dezmierdat de cele întâi raze ale soarelui, legănat de adierea
vântului și neatins de ochii fluturilor. Sau, cum s-ar mai zice
la noi în țărănește, era frumoasă de mama focului; la soare te
puteai uita, iar la dânsa ba. Și de-aceea Harap- Alb o prăpădea
din ochi de dragă ce-i era. Nu-i vorbă, și ea fura cu ochii, din
când în când, pe Harap-Alb, și în inima ei parcă se petrecea nu
știu ce... poate vreun dor ascuns, care nu-i venea a-l spune.
Vorba cântecului:

Fugi de-acole, vină-ncoace!
Șezi binișor, nu-mi da pace!
sau mai știu eu cum să zic, ca să nu greșesc? Dar știu atâta, că
ei mergeau fără a simți că merg, părându-li-se calea scurtă și
vremea și mai scurtă; ziua ceas și ceasul clipă; dă, cum e omul
când merge la drum cu dragostea alăturea.

Nu știa sărmanul Harap-Alb ce-l așteaptă acasă, căci nu s-ar mai
fi gândit la de-alde acestea.

Însă vorba cântecului:

De-ar ști omul ce-ar păți,
Dinainte s-ar păzi!
Dar iaca ce m-am apucat de spus. Mai bine vă spuneam că
turturica ajunsese la împăratul Verde și-l înștiințase că vine
și Harap-Alb cu fata împăratului Roș.

Atunci împăratul Verde a și început a face pregătire, ca pentru
o fată de împărat, dând și poruncă să le iasă întru întâmpinare.
Iară Spânul icnea în sine și se gândea numai la răzbunare.

În sfârșit, mai merge Harap-Alb cu fata împăratului cât mai
merge, și de la o vreme ajung și ei la împărăție.

Și, când colo, numai iaca ce le ies înainte împăratul Verde,
fetele sale, Spânul și toată curtea împărătească, ca să-i
primească. Și văzând Spânul cât e de frumoasă fata împăratului
Roș, odată se repede să o ia în brațe de pe cal. Dar fata îi
pune atunci mâna pe piept, îl brâncește cât colo și zice:

— Lipsește dinaintea mea, Spânule! Doar n-am venit pentru tine,
ș-am venit pentru Harap-Alb, căci el este adevăratul nepot al
împăratului Verde.

Atunci împăratul Verde și fetele sale au rămas încremeniți de
ceea ce au auzit. Iar Spânul, văzând că i s-a dat vicleșugul pe
față, se repede ca un câine turbat la Harap-Alb și-i zboară
capul dintr-o singură lovitură de paloș, zicând:

— Na! așa trebuie să pățească cine calcă jurământul! Dar calul
lui Harap-Alb îndată se repede și el la Spân și-i zice:

— Pân-aici, Spânule! Și odată mi ți-l înșfacă cu dinții de cap,
zboară cu dânsul în înaltul cerului, și apoi, dându-i drumul
de-acolo, se face Spânul până jos praf și pulbere. Iară fata
împăratului Roș, în vălmășagul acesta, repede pune capul lui
Harap-Alb la loc, îl înconjură de trei ori cu cele trei smicele
de măr dulce, toarnă apă moartă, să stea sângele și să se prindă
pielea, apoi îl stropește cu apă vie, și atunci Harap-Alb îndată
învie și, ștergându-se cu mâna pe la ochi, zice suspinând:

— Ei, da' din greu mai adormisem! — Dormeai tu mult și bine,
Harap-Alb, de nu eram eu, zise fata împăratului Roș, sărutându-l
cu drag și dându-i iar paloșul în stăpânire.

Și apoi, îngenunchind amândoi dinaintea împăratului Verde, își
jură credință unul altuia, primind binecuvântare de la dânsul și
împărăția totodată.

După aceasta se începe nunta, ș-apoi, dă Doamne bine!

Lumea de pe lume s-a strâns de privea,
Soarele și luna din cer le râdea.
Ș-apoi fost-au fost poftiți la nuntă: Crăiasa furnicilor,
Crăiasa albinelor și Crăiasa zânelor, minunea minunilor din
ostrovul florilor!

Și mai fost-au poftiți încă: crai, crăiese și-mpărați, oameni în
seamă băgați, ș-un păcat de povestar, fără bani în buzunar.
Veselie mare între toți era, chiar și sărăcimea ospăta și bea!

Și a ținut veselia ani întregi, și acum mai ține încă; cine se
duce acolo bea și mănâncă. Iar pe la noi, cine are bani bea și
mănâncă, iară cine nu, se uită și rabdă.
EOT
";s:45:" phpDocumentor\Reflection\Php\Property static";b:1;s:49:" phpDocumentor\Reflection\Php\Property visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:9:"protected";}s:47:" phpDocumentor\Reflection\Php\Property location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:29;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:50:" phpDocumentor\Reflection\Php\Property endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:2120;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:43:" phpDocumentor\Reflection\Php\Property type";N;s:47:" phpDocumentor\Reflection\Php\Property readOnly";b:0;s:47:" phpDocumentor\Reflection\Php\Property metadata";a:0:{}}}s:44:" phpDocumentor\Reflection\Php\Class_ methods";a:0:{}s:47:" phpDocumentor\Reflection\Php\Class_ usedTraits";a:0:{}s:45:" phpDocumentor\Reflection\Php\Class_ location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:5;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:48:" phpDocumentor\Reflection\Php\Class_ endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:2465;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:45:" phpDocumentor\Reflection\Php\Class_ metadata";a:0:{}}}s:45:" phpDocumentor\Reflection\Php\File interfaces";a:0:{}s:41:" phpDocumentor\Reflection\Php\File traits";a:0:{}s:40:" phpDocumentor\Reflection\Php\File enums";a:0:{}s:43:" phpDocumentor\Reflection\Php\File metadata";a:0:{}}";