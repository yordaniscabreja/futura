1688216193
waR3U4bTeM%3Adb755e1538c26d10ebfdd71157113ed4-f24718e5b126fc1e54cd46715dad4faf
s:7172:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxNDp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBkb2NCbG9jayI7TjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGhhc2giO3M6MzI6ImYyNDcxOGU1YjEyNmZjMWU1NGNkNDY3MTVkYWQ0ZmFmIjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWUiO3M6MjI6ImNvbG9yLXBpY2tlci5ibGFkZS5waHAiO3M6Mzk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAcGF0aCI7czo3MToidmVuZG9yL2ZpbGFtZW50L2Zvcm1zL3Jlc291cmNlcy92aWV3cy9jb21wb25lbnRzL2NvbG9yLXBpY2tlci5ibGFkZS5waHAiO3M6NDE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAc291cmNlIjtzOjQ0MTY6IkBwaHAKICAgICRhZmZpeExhYmVsQ2xhc3NlcyA9IFsKICAgICAgICAnd2hpdGVzcGFjZS1ub3dyYXAgZ3JvdXAtZm9jdXMtd2l0aGluOnRleHQtcHJpbWFyeS01MDAnLAogICAgICAgICd0ZXh0LWdyYXktNDAwJyA9PiAhICRlcnJvcnMtPmhhcygkZ2V0U3RhdGVQYXRoKCkpLAogICAgICAgICd0ZXh0LWRhbmdlci00MDAnID0+ICRlcnJvcnMtPmhhcygkZ2V0U3RhdGVQYXRoKCkpLAogICAgXTsKQGVuZHBocAoKPHgtZHluYW1pYy1jb21wb25lbnQKICAgIDpjb21wb25lbnQ9IiRnZXRGaWVsZFdyYXBwZXJWaWV3KCkiCiAgICA6aWQ9IiRnZXRJZCgpIgogICAgOmxhYmVsPSIkZ2V0TGFiZWwoKSIKICAgIDpsYWJlbC1zci1vbmx5PSIkaXNMYWJlbEhpZGRlbigpIgogICAgOmhlbHBlci10ZXh0PSIkZ2V0SGVscGVyVGV4dCgpIgogICAgOmhpbnQ9IiRnZXRIaW50KCkiCiAgICA6aGludC1pY29uPSIkZ2V0SGludEljb24oKSIKICAgIDpyZXF1aXJlZD0iJGlzUmVxdWlyZWQoKSIKICAgIDpzdGF0ZS1wYXRoPSIkZ2V0U3RhdGVQYXRoKCkiCj4KICAgIDxkaXYge3sgJGF0dHJpYnV0ZXMtPm1lcmdlKCRnZXRFeHRyYUF0dHJpYnV0ZXMoKSktPmNsYXNzKFsnZmxleCBpdGVtcy1jZW50ZXIgc3BhY2UteC0xIHJ0bDpzcGFjZS14LXJldmVyc2UgZ3JvdXAgZmlsYW1lbnQtZm9ybXMtY29sb3ItcGlja2VyLWNvbXBvbmVudCddKSB9fT4KICAgICAgICBAaWYgKCgkcHJlZml4QWN0aW9uID0gJGdldFByZWZpeEFjdGlvbigpKSAmJiAoISAkcHJlZml4QWN0aW9uLT5pc0hpZGRlbigpKSkKICAgICAgICAgICAge3sgJHByZWZpeEFjdGlvbiB9fQogICAgICAgIEBlbmRpZgoKICAgICAgICBAaWYgKCRpY29uID0gJGdldFByZWZpeEljb24oKSkKICAgICAgICAgICAgPHgtZHluYW1pYy1jb21wb25lbnQgOmNvbXBvbmVudD0iJGljb24iIGNsYXNzPSJ3LTUgaC01IiAvPgogICAgICAgIEBlbmRpZgoKICAgICAgICBAaWYgKCRsYWJlbCA9ICRnZXRQcmVmaXhMYWJlbCgpKQogICAgICAgICAgICA8c3BhbiBAY2xhc3MoJGFmZml4TGFiZWxDbGFzc2VzKT4KICAgICAgICAgICAgICAgIHt7ICRsYWJlbCB9fQogICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgQGVuZGlmCgogICAgICAgIDxkaXYKICAgICAgICAgICAgeC1kYXRhPSJjb2xvclBpY2tlckZvcm1Db21wb25lbnQoewogICAgICAgICAgICAgICAgaXNBdXRvZm9jdXNlZDogQGpzKCRpc0F1dG9mb2N1c2VkKCkpLAogICAgICAgICAgICAgICAgaXNEaXNhYmxlZDogQGpzKCRpc0Rpc2FibGVkKCkpLAogICAgICAgICAgICAgICAgc3RhdGU6ICR3aXJlLnt7ICRhcHBseVN0YXRlQmluZGluZ01vZGlmaWVycygnZW50YW5nbGUoXCcnIC4gJGdldFN0YXRlUGF0aCgpIC4gJ1wnKScpIH19CiAgICAgICAgICAgIH0pIgogICAgICAgICAgICB4LW9uOmNsaWNrPSJvcGVuUGlja2VyKCkiCiAgICAgICAgICAgIHgtb246Y2xpY2suYXdheT0iY2xvc2VQaWNrZXIoKSIKICAgICAgICAgICAgeC1vbjprZXlkb3duLmVzY2FwZS5zdG9wPSJjbG9zZVBpY2tlcigpIgogICAgICAgICAgICB7eyAkZ2V0RXh0cmFBbHBpbmVBdHRyaWJ1dGVCYWcoKS0+Y2xhc3MoWydyZWxhdGl2ZSBmbGV4LTEnXSkgfX0KICAgICAgICA+CiAgICAgICAgICAgIDxpbnB1dAogICAgICAgICAgICAgICAgeC1yZWY9ImlucHV0IgogICAgICAgICAgICAgICAgeC1vbjpmb2N1cz0ib3BlblBpY2tlcigpIgogICAgICAgICAgICAgICAgdHlwZT0idGV4dCIKICAgICAgICAgICAgICAgIGR1c2s9ImZpbGFtZW50LmZvcm1zLnt7ICRnZXRTdGF0ZVBhdGgoKSB9fSIKICAgICAgICAgICAgICAgIGlkPSJ7eyAkZ2V0SWQoKSB9fSIKICAgICAgICAgICAgICAgIGF1dG9jb21wbGV0ZT0ib2ZmIgogICAgICAgICAgICAgICAgeyEhICRpc0Rpc2FibGVkKCkgPyAnZGlzYWJsZWQnIDogbnVsbCAhIX0KICAgICAgICAgICAgICAgIHshISAoJHBsYWNlaG9sZGVyID0gJGdldFBsYWNlaG9sZGVyKCkpID8gInBsYWNlaG9sZGVyPVwieyRwbGFjZWhvbGRlcn1cIiIgOiBudWxsICEhfQogICAgICAgICAgICAgICAgQGlmICghICRpc0NvbmNlYWxlZCgpKQogICAgICAgICAgICAgICAgICAgIHshISAkaXNSZXF1aXJlZCgpID8gJ3JlcXVpcmVkJyA6IG51bGwgISF9CiAgICAgICAgICAgICAgICBAZW5kaWYKICAgICAgICAgICAgICAgIHt7ICRnZXRFeHRyYUlucHV0QXR0cmlidXRlQmFnKCktPmNsYXNzKFsKICAgICAgICAgICAgICAgICAgICAndGV4dC1ncmF5LTkwMCBibG9jayB3LWZ1bGwgdHJhbnNpdGlvbiBkdXJhdGlvbi03NSByb3VuZGVkLWxnIHNoYWRvdy1zbSBmb2N1czpib3JkZXItcHJpbWFyeS02MDAgZm9jdXM6cmluZy0xIGZvY3VzOnJpbmctaW5zZXQgZm9jdXM6cmluZy1wcmltYXJ5LTYwMCBkaXNhYmxlZDpvcGFjaXR5LTcwJywKICAgICAgICAgICAgICAgICAgICAnZGFyazpiZy1ncmF5LTcwMCBkYXJrOnRleHQtd2hpdGUgZGFyazpmb2N1czpib3JkZXItcHJpbWFyeS02MDAnID0+IGNvbmZpZygnZm9ybXMuZGFya19tb2RlJyksCiAgICAgICAgICAgICAgICAgICAgJ2JvcmRlci1ncmF5LTMwMCcgPT4gISAkZXJyb3JzLT5oYXMoJGdldFN0YXRlUGF0aCgpKSwKICAgICAgICAgICAgICAgICAgICAnZGFyazpib3JkZXItZ3JheS02MDAnID0+ICghICRlcnJvcnMtPmhhcygkZ2V0U3RhdGVQYXRoKCkpKSAmJiBjb25maWcoJ2Zvcm1zLmRhcmtfbW9kZScpLAogICAgICAgICAgICAgICAgICAgICdib3JkZXItZGFuZ2VyLTYwMCByaW5nLWRhbmdlci02MDAnID0+ICRlcnJvcnMtPmhhcygkZ2V0U3RhdGVQYXRoKCkpLAogICAgICAgICAgICAgICAgXSkgfX0KICAgICAgICAgICAgLz4KCiAgICAgICAgICAgIDxzcGFuCiAgICAgICAgICAgICAgICB4LWNsb2FrCiAgICAgICAgICAgICAgICBjbGFzcz0iYWJzb2x1dGUgaW5zZXQteS0wIHJpZ2h0LTAgZmxleCBpdGVtcy1jZW50ZXIgcHItMiBwb2ludGVyLWV2ZW50cy1ub25lIHJ0bDpyaWdodC1hdXRvIHJ0bDpsZWZ0LTAgcnRsOnBsLTIiCiAgICAgICAgICAgID4KICAgICAgICAgICAgICAgIDxzcGFuCiAgICAgICAgICAgICAgICAgICAgeC1iaW5kOnN0eWxlPSJ7J2JhY2tncm91bmQtY29sb3InOiBzdGF0ZX0iCiAgICAgICAgICAgICAgICAgICAgY2xhc3M9InJlbGF0aXZlIG92ZXJmbG93LWhpZGRlbiByb3VuZGVkLW1kIHctNyBoLTcgZmlsYW1lbnQtZm9ybXMtY29sb3ItcGlja2VyLWNvbXBvbmVudC1wcmV2aWV3IgogICAgICAgICAgICAgICAgPjwvc3Bhbj4KICAgICAgICAgICAgPC9zcGFuPgoKICAgICAgICAgICAgPHt7IG1hdGNoKCRnZXRGb3JtYXQoKSkgewogICAgICAgICAgICAgICAgJ2hzbCcgPT4gJ2hzbC1zdHJpbmcnLAogICAgICAgICAgICAgICAgJ3JnYicgPT4gJ3JnYi1zdHJpbmcnLAogICAgICAgICAgICAgICAgJ3JnYmEnID0+ICdyZ2JhLXN0cmluZycsCiAgICAgICAgICAgICAgICBkZWZhdWx0ID0+ICdoZXgnLAogICAgICAgICAgICB9IH19LWNvbG9yLXBpY2tlcgogICAgICAgICAgICAgICAgeC1jbG9hawogICAgICAgICAgICAgICAgeC1yZWY9InBpY2tlciIKICAgICAgICAgICAgICAgIHgtc2hvdz0iaXNPcGVuIgogICAgICAgICAgICAgICAgeC1vbjpibHVyPSJpc09wZW4gJiYgY2xvc2VQaWNrZXIoKSIKICAgICAgICAgICAgICAgIHgtdHJhbnNpdGlvbjpsZWF2ZT0iZWFzZS1pbiBkdXJhdGlvbi0xMDAiCiAgICAgICAgICAgICAgICB4LXRyYW5zaXRpb246bGVhdmUtc3RhcnQ9Im9wYWNpdHktMTAwIgogICAgICAgICAgICAgICAgeC10cmFuc2l0aW9uOmxlYXZlLWVuZD0ib3BhY2l0eS0wIgogICAgICAgICAgICAgICAgQGNsYXNzKFsKICAgICAgICAgICAgICAgICAgICAnbXQtNCBhYnNvbHV0ZSB6LTEwIHNoYWRvdy1sZycsCiAgICAgICAgICAgICAgICAgICAgJ29wYWNpdHktNzAgcG9pbnRlci1ldmVudHMtbm9uZScgPT4gJGlzRGlzYWJsZWQoKSwKICAgICAgICAgICAgICAgIF0pCiAgICAgICAgICAgIC8+CiAgICAgICAgPC9kaXY+CgogICAgICAgIEBpZiAoJGxhYmVsID0gJGdldFN1ZmZpeExhYmVsKCkpCiAgICAgICAgICAgIDxzcGFuIEBjbGFzcygkYWZmaXhMYWJlbENsYXNzZXMpPgogICAgICAgICAgICAgICAge3sgJGxhYmVsIH19CiAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICBAZW5kaWYKCiAgICAgICAgQGlmICgkaWNvbiA9ICRnZXRTdWZmaXhJY29uKCkpCiAgICAgICAgICAgIDx4LWR5bmFtaWMtY29tcG9uZW50IDpjb21wb25lbnQ9IiRpY29uIiBjbGFzcz0idy01IGgtNSIgLz4KICAgICAgICBAZW5kaWYKCiAgICAgICAgQGlmICgoJHN1ZmZpeEFjdGlvbiA9ICRnZXRTdWZmaXhBY3Rpb24oKSkgJiYgKCEgJHN1ZmZpeEFjdGlvbi0+aXNIaWRkZW4oKSkpCiAgICAgICAgICAgIHt7ICRzdWZmaXhBY3Rpb24gfX0KICAgICAgICBAZW5kaWYKICAgIDwvZGl2Pgo8L3gtZHluYW1pYy1jb21wb25lbnQ+CiI7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBuYW1lc3BhY2VzIjthOjA6e31zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGluY2x1ZGVzIjthOjA6e31zOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGZ1bmN0aW9ucyI7YTowOnt9czo0NDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBjb25zdGFudHMiO2E6MDp7fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAY2xhc3NlcyI7YTowOnt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBpbnRlcmZhY2VzIjthOjA6e31zOjQxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHRyYWl0cyI7YTowOnt9czo0MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBlbnVtcyI7YTowOnt9czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBtZXRhZGF0YSI7YTowOnt9fQ==";