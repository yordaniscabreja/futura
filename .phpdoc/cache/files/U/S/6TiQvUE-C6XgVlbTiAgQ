1688216181
waR3U4bTeM%3Aa15bf7d46837c20d50b3b89edfd433f8-a1422ec61d788dac2252503acdecab6c
s:7448:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxNDp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBkb2NCbG9jayI7TjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGhhc2giO3M6MzI6ImExNDIyZWM2MWQ3ODhkYWMyMjUyNTAzYWNkZWNhYjZjIjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWUiO3M6MjE6ImZvcm0taW5wdXRzLmJsYWRlLnBocCI7czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBwYXRoIjtzOjU0OiJyZXNvdXJjZXMvdmlld3MvYXBwL3VuaXZlcnNpdGllcy9mb3JtLWlucHV0cy5ibGFkZS5waHAiO3M6NDE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAc291cmNlIjtzOjQ2NDI6IkBwaHAgJGVkaXRpbmcgPSBpc3NldCgkdW5pdmVyc2l0eSkgQGVuZHBocAoKPGRpdiBjbGFzcz0icm93Ij4KICAgIDx4LWlucHV0cy5ncm91cCBjbGFzcz0iY29sLXNtLTEyIj4KICAgICAgICA8eC1pbnB1dHMudGV4dGFyZWEKICAgICAgICAgICAgbmFtZT0ibmFtZSIKICAgICAgICAgICAgbGFiZWw9Ik5vbWJyZSBVbml2ZXJzaWRhZCIKICAgICAgICAgICAgbWF4bGVuZ3RoPSIyNTUiCiAgICAgICAgICAgIHJlcXVpcmVkCiAgICAgICAgICAgID57eyBvbGQoJ25hbWUnLCAoJGVkaXRpbmcgPyAkdW5pdmVyc2l0eS0+bmFtZSA6ICcnKSkKICAgICAgICAgICAgfX08L3gtaW5wdXRzLnRleHRhcmVhCiAgICAgICAgPgogICAgPC94LWlucHV0cy5ncm91cD4KCiAgICA8eC1pbnB1dHMuZ3JvdXAgY2xhc3M9ImNvbC1zbS0xMiI+CiAgICAgICAgPHgtaW5wdXRzLmNoZWNrYm94CiAgICAgICAgICAgIG5hbWU9Im9maWNpYWwiCiAgICAgICAgICAgIGxhYmVsPSJFcyBPZmljaWFsIgogICAgICAgICAgICA6Y2hlY2tlZD0ib2xkKCdvZmljaWFsJywgKCRlZGl0aW5nID8gJHVuaXZlcnNpdHktPm9maWNpYWwgOiAwKSkiCiAgICAgICAgPjwveC1pbnB1dHMuY2hlY2tib3g+CiAgICA8L3gtaW5wdXRzLmdyb3VwPgoKICAgIDx4LWlucHV0cy5ncm91cCBjbGFzcz0iY29sLXNtLTEyIj4KICAgICAgICA8eC1pbnB1dHMuY2hlY2tib3gKICAgICAgICAgICAgbmFtZT0iYWNyZWRpdGFkYSIKICAgICAgICAgICAgbGFiZWw9IkVzdMOhIEFjcmVkaXRhZGEiCiAgICAgICAgICAgIDpjaGVja2VkPSJvbGQoJ2FjcmVkaXRhZGEnLCAoJGVkaXRpbmcgPyAkdW5pdmVyc2l0eS0+YWNyZWRpdGFkYSA6IDApKSIKICAgICAgICA+PC94LWlucHV0cy5jaGVja2JveD4KICAgIDwveC1pbnB1dHMuZ3JvdXA+CgogICAgPHgtaW5wdXRzLmdyb3VwIGNsYXNzPSJjb2wtc20tMTIiPgogICAgICAgIDx4LWlucHV0cy5zZWxlY3QgbmFtZT0iY2l0eV9pZCIgbGFiZWw9IkNpdWRhZCBkb21pY2lsaW8iIHJlcXVpcmVkPgogICAgICAgICAgICBAcGhwICRzZWxlY3RlZCA9IG9sZCgnY2l0eV9pZCcsICgkZWRpdGluZyA/ICR1bml2ZXJzaXR5LT5jaXR5X2lkIDogJycpKSBAZW5kcGhwCiAgICAgICAgICAgIDxvcHRpb24gZGlzYWJsZWQge3sgZW1wdHkoJHNlbGVjdGVkKSA/ICdzZWxlY3RlZCcgOiAnJyB9fT5TZWxlY2Npb25lIHVuYSBjaXVkYWQ8L29wdGlvbj4KICAgICAgICAgICAgQGZvcmVhY2goJGNpdGllcyBhcyAkdmFsdWUgPT4gJGxhYmVsKQogICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSJ7eyAkdmFsdWUgfX0iIHt7ICRzZWxlY3RlZCA9PSAkdmFsdWUgPyAnc2VsZWN0ZWQnIDogJycgfX0gPnt7ICRsYWJlbCB9fTwvb3B0aW9uPgogICAgICAgICAgICBAZW5kZm9yZWFjaAogICAgICAgIDwveC1pbnB1dHMuc2VsZWN0PgogICAgPC94LWlucHV0cy5ncm91cD4KCiAgICA8eC1pbnB1dHMuZ3JvdXAgY2xhc3M9ImNvbC1zbS0xMiI+CiAgICAgICAgPHgtaW5wdXRzLmNoZWNrYm94CiAgICAgICAgICAgIG5hbWU9InByaW5jaXBhbCIKICAgICAgICAgICAgbGFiZWw9IkVzIFByaW5jaXBhbCIKICAgICAgICAgICAgOmNoZWNrZWQ9Im9sZCgncHJpbmNpcGFsJywgKCRlZGl0aW5nID8gJHVuaXZlcnNpdHktPnByaW5jaXBhbCA6IDApKSIKICAgICAgICA+PC94LWlucHV0cy5jaGVja2JveD4KICAgIDwveC1pbnB1dHMuZ3JvdXA+CgogICAgPHgtaW5wdXRzLmdyb3VwIGNsYXNzPSJjb2wtc20tMTIiPgogICAgICAgIDx4LWlucHV0cy51cmwKICAgICAgICAgICAgbmFtZT0idXJsIgogICAgICAgICAgICBsYWJlbD0iV0VCIgogICAgICAgICAgICB2YWx1ZT0ie3sgb2xkKCd1cmwnLCAoJGVkaXRpbmcgPyAkdW5pdmVyc2l0eS0+dXJsIDogJycpKSB9fSIKICAgICAgICAgICAgbWF4bGVuZ3RoPSIyNTUiCiAgICAgICAgICAgIHBsYWNlaG9sZGVyPSJlajogaHR0cDovL3d3dy51bmkuY28iCiAgICAgICAgICAgIHJlcXVpcmVkCiAgICAgICAgPjwveC1pbnB1dHMudXJsPgogICAgPC94LWlucHV0cy5ncm91cD4KCiAgICA8eC1pbnB1dHMuZ3JvdXAgY2xhc3M9ImNvbC1zbS0xMiI+CiAgICAgICAgPHgtaW5wdXRzLnRleHRhcmVhCiAgICAgICAgICAgIG5hbWU9ImRpcmVjY2lvbiIKICAgICAgICAgICAgbGFiZWw9IkRpcmVjY2nDs24iCiAgICAgICAgICAgIG1heGxlbmd0aD0iMjU1IgogICAgICAgICAgICByZXF1aXJlZAogICAgICAgICAgICA+e3sgb2xkKCdkaXJlY2Npb24nLCAoJGVkaXRpbmcgPyAkdW5pdmVyc2l0eS0+ZGlyZWNjaW9uIDogJycpKQogICAgICAgICAgICB9fTwveC1pbnB1dHMudGV4dGFyZWEKICAgICAgICA+CiAgICA8L3gtaW5wdXRzLmdyb3VwPgoKICAgIDx4LWlucHV0cy5ncm91cCBjbGFzcz0iY29sLXNtLTEyIj4KICAgICAgICA8eC1pbnB1dHMuZGF0ZQogICAgICAgICAgICBuYW1lPSJmdW5kYWRhX2F0IgogICAgICAgICAgICBsYWJlbD0iRnVuZGFkYSBBdCIKICAgICAgICAgICAgdmFsdWU9Int7IG9sZCgnZnVuZGFkYV9hdCcsICgkZWRpdGluZyA/IG9wdGlvbmFsKCR1bml2ZXJzaXR5LT5mdW5kYWRhX2F0KS0+Zm9ybWF0KCdZLW0tZCcpIDogJycpKSB9fSIKICAgICAgICAgICAgbWF4PSIyNTUiCiAgICAgICAgICAgIHJlcXVpcmVkCiAgICAgICAgPjwveC1pbnB1dHMuZGF0ZT4KICAgIDwveC1pbnB1dHMuZ3JvdXA+CgogICAgPHgtaW5wdXRzLmdyb3VwIGNsYXNzPSJjb2wtc20tMTIiPgogICAgICAgIDx4LWlucHV0cy5udW1iZXIKICAgICAgICAgICAgbmFtZT0iZWdyZXNhZG9zIgogICAgICAgICAgICBsYWJlbD0iRWdyZXNhZG9zIgogICAgICAgICAgICB2YWx1ZT0ie3sgb2xkKCdlZ3Jlc2Fkb3MnLCAoJGVkaXRpbmcgPyAkdW5pdmVyc2l0eS0+ZWdyZXNhZG9zIDogJycpKSB9fSIKICAgICAgICAgICAgbWF4PSIyNTUiCiAgICAgICAgICAgIHBsYWNlaG9sZGVyPSJFajogNTAwMDAiCiAgICAgICAgICAgIHJlcXVpcmVkCiAgICAgICAgPjwveC1pbnB1dHMubnVtYmVyPgogICAgPC94LWlucHV0cy5ncm91cD4KCiAgICA8eC1pbnB1dHMuZ3JvdXAgY2xhc3M9ImNvbC1zbS0xMiI+CiAgICAgICAgPHgtaW5wdXRzLnRleHRhcmVhCiAgICAgICAgICAgIG5hbWU9ImRlc2NyaXB0aW9uIgogICAgICAgICAgICBsYWJlbD0iRGVzY3JpcGNpw7NuIgogICAgICAgICAgICBtYXhsZW5ndGg9IjI1NSIKICAgICAgICAgICAgcmVxdWlyZWQKICAgICAgICAgICAgPnt7IG9sZCgnZGVzY3JpcHRpb24nLCAoJGVkaXRpbmcgPyAkdW5pdmVyc2l0eS0+ZGVzY3JpcHRpb24gOiAnJykpCiAgICAgICAgICAgIH19PC94LWlucHV0cy50ZXh0YXJlYQogICAgICAgID4KICAgIDwveC1pbnB1dHMuZ3JvdXA+CgogICAgPHgtaW5wdXRzLmdyb3VwIGNsYXNzPSJjb2wtc20tMTIiPgogICAgICAgIDxkaXYKICAgICAgICAgICAgeC1kYXRhPSJpbWFnZVZpZXdlcigne3sgJGVkaXRpbmcgJiYgJHVuaXZlcnNpdHktPmltYWdlID8gXFN0b3JhZ2U6OnVybCgkdW5pdmVyc2l0eS0+aW1hZ2UpIDogJycgfX0nKSIKICAgICAgICA+CiAgICAgICAgICAgIDx4LWlucHV0cy5wYXJ0aWFscy5sYWJlbAogICAgICAgICAgICAgICAgbmFtZT0iaW1hZ2UiCiAgICAgICAgICAgICAgICBsYWJlbD0iSW1hZ2UiCiAgICAgICAgICAgID48L3gtaW5wdXRzLnBhcnRpYWxzLmxhYmVsCiAgICAgICAgICAgID48YnIgLz4KCiAgICAgICAgICAgIDwhLS0gU2hvdyB0aGUgaW1hZ2UgLS0+CiAgICAgICAgICAgIDx0ZW1wbGF0ZSB4LWlmPSJpbWFnZVVybCI+CiAgICAgICAgICAgICAgICA8aW1nCiAgICAgICAgICAgICAgICAgICAgOnNyYz0iaW1hZ2VVcmwiCiAgICAgICAgICAgICAgICAgICAgY2xhc3M9Im9iamVjdC1jb3ZlciByb3VuZGVkIGJvcmRlciBib3JkZXItZ3JheS0yMDAiCiAgICAgICAgICAgICAgICAgICAgc3R5bGU9IndpZHRoOiAxMDBweDsgaGVpZ2h0OiAxMDBweDsiCiAgICAgICAgICAgICAgICAvPgogICAgICAgICAgICA8L3RlbXBsYXRlPgoKICAgICAgICAgICAgPCEtLSBTaG93IHRoZSBncmF5IGJveCB3aGVuIGltYWdlIGlzIG5vdCBhdmFpbGFibGUgLS0+CiAgICAgICAgICAgIDx0ZW1wbGF0ZSB4LWlmPSIhaW1hZ2VVcmwiPgogICAgICAgICAgICAgICAgPGRpdgogICAgICAgICAgICAgICAgICAgIGNsYXNzPSJib3JkZXIgcm91bmRlZCBib3JkZXItZ3JheS0yMDAgYmctZ3JheS0xMDAiCiAgICAgICAgICAgICAgICAgICAgc3R5bGU9IndpZHRoOiAxMDBweDsgaGVpZ2h0OiAxMDBweDsiCiAgICAgICAgICAgICAgICA+PC9kaXY+CiAgICAgICAgICAgIDwvdGVtcGxhdGU+CgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJtdC0yIj4KICAgICAgICAgICAgICAgIDxpbnB1dAogICAgICAgICAgICAgICAgICAgIHR5cGU9ImZpbGUiCiAgICAgICAgICAgICAgICAgICAgbmFtZT0iaW1hZ2UiCiAgICAgICAgICAgICAgICAgICAgaWQ9ImltYWdlIgogICAgICAgICAgICAgICAgICAgIEBjaGFuZ2U9ImZpbGVDaG9zZW4iCiAgICAgICAgICAgICAgICAvPgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIEBlcnJvcignaW1hZ2UnKSBAaW5jbHVkZSgnY29tcG9uZW50cy5pbnB1dHMucGFydGlhbHMuZXJyb3InKQogICAgICAgICAgICBAZW5kZXJyb3IKICAgICAgICA8L2Rpdj4KICAgIDwveC1pbnB1dHMuZ3JvdXA+CjwvZGl2PgoiO3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAbmFtZXNwYWNlcyI7YTowOnt9czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBpbmNsdWRlcyI7YTowOnt9czo0NDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBmdW5jdGlvbnMiO2E6MDp7fXM6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAY29uc3RhbnRzIjthOjA6e31zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGNsYXNzZXMiO2E6MDp7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAaW50ZXJmYWNlcyI7YTowOnt9czo0MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQB0cmFpdHMiO2E6MDp7fXM6NDA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAZW51bXMiO2E6MDp7fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAbWV0YWRhdGEiO2E6MDp7fX0=";