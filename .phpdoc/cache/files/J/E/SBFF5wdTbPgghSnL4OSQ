1688216190
waR3U4bTeM%3Afa88d3adb95f191f3750e63c31b19901-8871ccdfc9e60f483189f22c9e238c7a
s:18012:"O:33:"phpDocumentor\Reflection\Php\File":14:{s:43:" phpDocumentor\Reflection\Php\File docBlock";N;s:39:" phpDocumentor\Reflection\Php\File hash";s:32:"8871ccdfc9e60f483189f22c9e238c7a";s:39:" phpDocumentor\Reflection\Php\File name";s:9:"Color.php";s:39:" phpDocumentor\Reflection\Php\File path";s:56:"vendor/fakerphp/faker/src/Faker/Provider/tr_TR/Color.php";s:41:" phpDocumentor\Reflection\Php\File source";s:3788:"<?php

namespace Faker\Provider\tr_TR;

class Color extends \Faker\Provider\Color
{
    /**
     * @see http://tr.wikipedia.org/wiki/Renkler_listesi
     */
    protected static $safeColorNames = [
        'siyah', 'kırmızı', 'sarı', 'mavi', 'turuncu',
        'yeşil', 'mor', 'gümüş', 'gri', 'pembe',
    ];

    protected static $allColorNames = [
        'Alev kırmızısı', 'Alice mavisi', 'Alizarin', 'Altunî', 'Ametist', 'Armut',
        'Akuamarin', 'Asker yeşili', 'Bakır', 'Barut', 'Bataklık yeşili',
        'Bebek mavisi', 'Bej', 'Beyaz', 'Bondi mavisi', 'Bordo',
        'Bronz', 'Buğday', 'Burgonya', 'Camgöbeği', 'Çam yeşili', 'Çay yeşili',
        'Çelik mavisi', 'Çikolata', 'Çivit', 'Deniz mavisi', 'Deniz yeşili',
        'Devedikeni', 'Eğrelti yeşili', 'Elektrik mavisi', 'Elektrik çivit', 'Elektrik lime', 'Elektrik mor',
        'Falu kırmızısı', 'Fildişi', 'Fransız gül', 'Galibarda', 'Gece mavisi', 'Gök mavisi',
        'Gri', 'Gri-kuşkonmaz', 'Gül', 'Gümüşi', 'Haki', 'Hardal',
        'Havuç', 'Horozibiği', 'İlkbahar yeşili', 'İslam yeşili', 'Kabak', 'Kahverengi',
        'Kahverengimsi gri', 'Kamuflâj yeşili', 'Karanfil pembesi', 'Karanfil', 'Kardinal',
        'Karolina mavisi', 'Kayısı', 'Kehribar', 'Kestane',
        'Keten', 'Kırmızı', 'Kırmızımsı kahverengi', 'Kırmızı-menekşe', 'Kiraz kırmızısı',
        'Kobalt', 'Kobalt mavisi', 'Koyu galibarda', 'Koyu haki', 'Koyu kahverengi',
        'Koyu kestane', 'Koyu kırmızı', 'Koyu kızıl kahverengi', 'Koyu leylak', 'Koyu magenta',
        'Koyu mandalina', 'Koyu mavi', 'Koyu menekşe', 'Koyu mercan',
        'Koyu mor', 'Koyu pastel yeşil', 'Koyu pembe', 'Koyu şeftali', 'Koyu turkuaz',
        'Koyu toz mavi', 'Koyu turkuaz', 'Koyu yeşil', 'Kösele', 'Krem',
        'Kum kahverengisi', 'Kuşkonmaz', 'Lacivert', 'Lacivert',
        'Lavanta', 'Lavanta mavisi', 'Lavender pembesi', 'Lavender greisi',
        'Lavender magenta', 'Lavanta pembesi', 'Lavanta mor', 'Lavanta gül', 'Limoni', 'Açık Limon',
        'Leylak', 'Lime', 'Mandalina', 'Malakit', 'Mavi',
        'Menekşe', 'Menekşe-patlıcan', 'Mısır', 'Mor', 'Morsalkım',
        'Nane yeşili', 'Nar', 'Navajo beyazı', 'Okul otobüsü sarısı', 'Parlak mor',
        'Pas', 'Pastel pembe', 'Pastel yeşili', 'Patlıcan', 'Pembe',
        'Pembe-turuncu', 'Peygamber çiçeği', 'Prusya mavisi', 'Safran', 'Safir',
        'Sarımsı kahverengi', 'Sarımsı pembe', 'Sarı', 'Sarı',
        'Siyahımsı koyu kahverengi', 'Soluk sarı', 'Şeftali', 'Şeftali-turuncu', 'Şeftali-sarı',
        'Tarçın', 'Teal', 'Toz mavi', 'Turkuaz',
        'Turuncumsu sarı', 'Turuncu', 'Turuncumsu sarı', 'Yeşil', 'Yeşil-sarı', 'Yonca yeşili',
        'Yosun yeşili', 'Zeytuni', 'Zümrüt yeşili', 'Yanık turuncu', 'Yanık Toprak',
        'Kardinal', 'Şarap', 'Celadon', 'Berrak mavi',
        'Gök mavisi', 'Gül', 'Mercan', 'Mercan Kırmızısı', 'Kıpkırmızı', 'Hile mavisi',
        'Altınımsı', 'Soytarı', 'Siğil otu', 'Holivod kırmızısı', 'Sıcak Magenta',
        'Sıcak pembe', 'Uluslararası Klein mavisi', 'Enternasyonal turuncu', 'Yeşim', 'Orta şarap',
        'Orta Mor', 'Dağ pembesi', 'Aşı boyası', 'Eski altın', 'Eski iplik', 'Eski Lavanta',
        'Eski gül', 'Zeytin Kahverengisi', 'Donuk turuncu', 'Papaya',
        'Periwinkle', 'Pers mavisi', 'Pers yeşili', 'Persian lacivert', 'Pers pembesi',
        'Persian kırmızısı', 'Pers gülü', 'Ham toprak', 'Kızıl yumurta mavisi',
        'Kraliyet mavisi', 'Kırmızı şarap', 'Kırmızı', 'Deniz kabuğu', 'Ayrık sarı',
        'Vurgun pembe', 'Salamura grisi', 'Tenné (Tawny)', 'Küçük kara', 'Lacivert', 'Viridian',
        'Zinnwaldite',
    ];
}
";s:45:" phpDocumentor\Reflection\Php\File namespaces";a:1:{s:21:"\Faker\Provider\tr_TR";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:21:"\Faker\Provider\tr_TR";s:36:" phpDocumentor\Reflection\Fqsen name";s:5:"tr_TR";}}s:43:" phpDocumentor\Reflection\Php\File includes";a:0:{}s:44:" phpDocumentor\Reflection\Php\File functions";a:0:{}s:44:" phpDocumentor\Reflection\Php\File constants";a:0:{}s:42:" phpDocumentor\Reflection\Php\File classes";a:1:{s:27:"\Faker\Provider\tr_TR\Color";O:35:"phpDocumentor\Reflection\Php\Class_":13:{s:42:" phpDocumentor\Reflection\Php\Class_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:27:"\Faker\Provider\tr_TR\Color";s:36:" phpDocumentor\Reflection\Fqsen name";s:5:"Color";}s:45:" phpDocumentor\Reflection\Php\Class_ docBlock";N;s:45:" phpDocumentor\Reflection\Php\Class_ abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Class_ final";b:0;s:43:" phpDocumentor\Reflection\Php\Class_ parent";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:21:"\Faker\Provider\Color";s:36:" phpDocumentor\Reflection\Fqsen name";s:5:"Color";}s:47:" phpDocumentor\Reflection\Php\Class_ implements";a:0:{}s:46:" phpDocumentor\Reflection\Php\Class_ constants";a:0:{}s:47:" phpDocumentor\Reflection\Php\Class_ properties";a:2:{s:44:"\Faker\Provider\tr_TR\Color::$safeColorNames";O:37:"phpDocumentor\Reflection\Php\Property":11:{s:44:" phpDocumentor\Reflection\Php\Property fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:44:"\Faker\Provider\tr_TR\Color::$safeColorNames";s:36:" phpDocumentor\Reflection\Fqsen name";s:14:"safeColorNames";}s:47:" phpDocumentor\Reflection\Php\Property docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:0:"";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:1:{i:0;O:42:"phpDocumentor\Reflection\DocBlock\Tags\See":3:{s:7:" * name";s:3:"see";s:14:" * description";N;s:9:" * refers";O:52:"phpDocumentor\Reflection\DocBlock\Tags\Reference\Url":1:{s:57:" phpDocumentor\Reflection\DocBlock\Tags\Reference\Url uri";s:44:"http://tr.wikipedia.org/wiki/Renkler_listesi";}}}s:42:" phpDocumentor\Reflection\DocBlock context";O:38:"phpDocumentor\Reflection\Types\Context":2:{s:49:" phpDocumentor\Reflection\Types\Context namespace";s:20:"Faker\Provider\tr_TR";s:56:" phpDocumentor\Reflection\Types\Context namespaceAliases";a:0:{}}s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:44:" phpDocumentor\Reflection\Php\Property types";a:0:{}s:46:" phpDocumentor\Reflection\Php\Property default";s:96:"['siyah', 'kırmızı', 'sarı', 'mavi', 'turuncu', 'yeşil', 'mor', 'gümüş', 'gri', 'pembe']";s:45:" phpDocumentor\Reflection\Php\Property static";b:1;s:49:" phpDocumentor\Reflection\Php\Property visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:9:"protected";}s:47:" phpDocumentor\Reflection\Php\Property location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:10;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:50:" phpDocumentor\Reflection\Php\Property endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:13;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:43:" phpDocumentor\Reflection\Php\Property type";N;s:47:" phpDocumentor\Reflection\Php\Property readOnly";b:0;s:47:" phpDocumentor\Reflection\Php\Property metadata";a:0:{}}s:43:"\Faker\Provider\tr_TR\Color::$allColorNames";O:37:"phpDocumentor\Reflection\Php\Property":11:{s:44:" phpDocumentor\Reflection\Php\Property fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:43:"\Faker\Provider\tr_TR\Color::$allColorNames";s:36:" phpDocumentor\Reflection\Fqsen name";s:13:"allColorNames";}s:47:" phpDocumentor\Reflection\Php\Property docBlock";N;s:44:" phpDocumentor\Reflection\Php\Property types";a:0:{}s:46:" phpDocumentor\Reflection\Php\Property default";s:3093:"['Alev kırmızısı', 'Alice mavisi', 'Alizarin', 'Altunî', 'Ametist', 'Armut', 'Akuamarin', 'Asker yeşili', 'Bakır', 'Barut', 'Bataklık yeşili', 'Bebek mavisi', 'Bej', 'Beyaz', 'Bondi mavisi', 'Bordo', 'Bronz', 'Buğday', 'Burgonya', 'Camgöbeği', 'Çam yeşili', 'Çay yeşili', 'Çelik mavisi', 'Çikolata', 'Çivit', 'Deniz mavisi', 'Deniz yeşili', 'Devedikeni', 'Eğrelti yeşili', 'Elektrik mavisi', 'Elektrik çivit', 'Elektrik lime', 'Elektrik mor', 'Falu kırmızısı', 'Fildişi', 'Fransız gül', 'Galibarda', 'Gece mavisi', 'Gök mavisi', 'Gri', 'Gri-kuşkonmaz', 'Gül', 'Gümüşi', 'Haki', 'Hardal', 'Havuç', 'Horozibiği', 'İlkbahar yeşili', 'İslam yeşili', 'Kabak', 'Kahverengi', 'Kahverengimsi gri', 'Kamuflâj yeşili', 'Karanfil pembesi', 'Karanfil', 'Kardinal', 'Karolina mavisi', 'Kayısı', 'Kehribar', 'Kestane', 'Keten', 'Kırmızı', 'Kırmızımsı kahverengi', 'Kırmızı-menekşe', 'Kiraz kırmızısı', 'Kobalt', 'Kobalt mavisi', 'Koyu galibarda', 'Koyu haki', 'Koyu kahverengi', 'Koyu kestane', 'Koyu kırmızı', 'Koyu kızıl kahverengi', 'Koyu leylak', 'Koyu magenta', 'Koyu mandalina', 'Koyu mavi', 'Koyu menekşe', 'Koyu mercan', 'Koyu mor', 'Koyu pastel yeşil', 'Koyu pembe', 'Koyu şeftali', 'Koyu turkuaz', 'Koyu toz mavi', 'Koyu turkuaz', 'Koyu yeşil', 'Kösele', 'Krem', 'Kum kahverengisi', 'Kuşkonmaz', 'Lacivert', 'Lacivert', 'Lavanta', 'Lavanta mavisi', 'Lavender pembesi', 'Lavender greisi', 'Lavender magenta', 'Lavanta pembesi', 'Lavanta mor', 'Lavanta gül', 'Limoni', 'Açık Limon', 'Leylak', 'Lime', 'Mandalina', 'Malakit', 'Mavi', 'Menekşe', 'Menekşe-patlıcan', 'Mısır', 'Mor', 'Morsalkım', 'Nane yeşili', 'Nar', 'Navajo beyazı', 'Okul otobüsü sarısı', 'Parlak mor', 'Pas', 'Pastel pembe', 'Pastel yeşili', 'Patlıcan', 'Pembe', 'Pembe-turuncu', 'Peygamber çiçeği', 'Prusya mavisi', 'Safran', 'Safir', 'Sarımsı kahverengi', 'Sarımsı pembe', 'Sarı', 'Sarı', 'Siyahımsı koyu kahverengi', 'Soluk sarı', 'Şeftali', 'Şeftali-turuncu', 'Şeftali-sarı', 'Tarçın', 'Teal', 'Toz mavi', 'Turkuaz', 'Turuncumsu sarı', 'Turuncu', 'Turuncumsu sarı', 'Yeşil', 'Yeşil-sarı', 'Yonca yeşili', 'Yosun yeşili', 'Zeytuni', 'Zümrüt yeşili', 'Yanık turuncu', 'Yanık Toprak', 'Kardinal', 'Şarap', 'Celadon', 'Berrak mavi', 'Gök mavisi', 'Gül', 'Mercan', 'Mercan Kırmızısı', 'Kıpkırmızı', 'Hile mavisi', 'Altınımsı', 'Soytarı', 'Siğil otu', 'Holivod kırmızısı', 'Sıcak Magenta', 'Sıcak pembe', 'Uluslararası Klein mavisi', 'Enternasyonal turuncu', 'Yeşim', 'Orta şarap', 'Orta Mor', 'Dağ pembesi', 'Aşı boyası', 'Eski altın', 'Eski iplik', 'Eski Lavanta', 'Eski gül', 'Zeytin Kahverengisi', 'Donuk turuncu', 'Papaya', 'Periwinkle', 'Pers mavisi', 'Pers yeşili', 'Persian lacivert', 'Pers pembesi', 'Persian kırmızısı', 'Pers gülü', 'Ham toprak', 'Kızıl yumurta mavisi', 'Kraliyet mavisi', 'Kırmızı şarap', 'Kırmızı', 'Deniz kabuğu', 'Ayrık sarı', 'Vurgun pembe', 'Salamura grisi', 'Tenné (Tawny)', 'Küçük kara', 'Lacivert', 'Viridian', 'Zinnwaldite']";s:45:" phpDocumentor\Reflection\Php\Property static";b:1;s:49:" phpDocumentor\Reflection\Php\Property visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:9:"protected";}s:47:" phpDocumentor\Reflection\Php\Property location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:15;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:50:" phpDocumentor\Reflection\Php\Property endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:57;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:43:" phpDocumentor\Reflection\Php\Property type";N;s:47:" phpDocumentor\Reflection\Php\Property readOnly";b:0;s:47:" phpDocumentor\Reflection\Php\Property metadata";a:0:{}}}s:44:" phpDocumentor\Reflection\Php\Class_ methods";a:0:{}s:47:" phpDocumentor\Reflection\Php\Class_ usedTraits";a:0:{}s:45:" phpDocumentor\Reflection\Php\Class_ location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:5;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:48:" phpDocumentor\Reflection\Php\Class_ endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:58;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:45:" phpDocumentor\Reflection\Php\Class_ metadata";a:0:{}}}s:45:" phpDocumentor\Reflection\Php\File interfaces";a:0:{}s:41:" phpDocumentor\Reflection\Php\File traits";a:0:{}s:40:" phpDocumentor\Reflection\Php\File enums";a:0:{}s:43:" phpDocumentor\Reflection\Php\File metadata";a:0:{}}";