1688216247
waR3U4bTeM%3A32815a23f53dade38608819e51d6d98e-68fb5641ca1dc9b375d8e59c850a53fd
s:7616:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxNDp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBkb2NCbG9jayI7TjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGhhc2giO3M6MzI6IjY4ZmI1NjQxY2ExZGM5YjM3NWQ4ZTU5Yzg1MGE1M2ZkIjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWUiO3M6MjE6InVwZGF0ZV9taW1lX3R5cGVzLnBocCI7czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBwYXRoIjtzOjU1OiJ2ZW5kb3Ivc3ltZm9ueS9taW1lL1Jlc291cmNlcy9iaW4vdXBkYXRlX21pbWVfdHlwZXMucGhwIjtzOjQxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHNvdXJjZSI7czo0NzY4OiI8P3BocAoKLyoKICogVGhpcyBmaWxlIGlzIHBhcnQgb2YgdGhlIFN5bWZvbnkgcGFja2FnZS4KICoKICogKGMpIEZhYmllbiBQb3RlbmNpZXIgPGZhYmllbkBzeW1mb255LmNvbT4KICoKICogRm9yIHRoZSBmdWxsIGNvcHlyaWdodCBhbmQgbGljZW5zZSBpbmZvcm1hdGlvbiwgcGxlYXNlIHZpZXcgdGhlIExJQ0VOU0UKICogZmlsZSB0aGF0IHdhcyBkaXN0cmlidXRlZCB3aXRoIHRoaXMgc291cmNlIGNvZGUuCiAqLwoKLy8gbG9hZCBuZXcgbWFwCiRkYXRhID0ganNvbl9kZWNvZGUoZmlsZV9nZXRfY29udGVudHMoJ2h0dHBzOi8vY2RuLmpzZGVsaXZyLm5ldC9naC9qc2h0dHAvbWltZS1kYkB2MS40OS4wL2RiLmpzb24nKSwgdHJ1ZSk7CiRuZXcgPSBbXTsKZm9yZWFjaCAoJGRhdGEgYXMgJG1pbWVUeXBlID0+ICRtaW1lVHlwZUluZm9ybWF0aW9uKSB7CiAgICBpZiAoIWFycmF5X2tleV9leGlzdHMoJ2V4dGVuc2lvbnMnLCAkbWltZVR5cGVJbmZvcm1hdGlvbikpIHsKICAgICAgICBjb250aW51ZTsKICAgIH0KICAgICRuZXdbJG1pbWVUeXBlXSA9ICRtaW1lVHlwZUluZm9ybWF0aW9uWydleHRlbnNpb25zJ107Cn0KCiR4bWwgPSBzaW1wbGV4bWxfbG9hZF9zdHJpbmcoZmlsZV9nZXRfY29udGVudHMoJ2h0dHBzOi8vZ2l0bGFiLmZyZWVkZXNrdG9wLm9yZy94ZGcvc2hhcmVkLW1pbWUtaW5mby8tL3Jhdy9tYXN0ZXIvZGF0YS9mcmVlZGVza3RvcC5vcmcueG1sLmluJykpOwpmb3JlYWNoICgkeG1sIGFzICRub2RlKSB7CiAgICAkZXh0cyA9IFtdOwogICAgZm9yZWFjaCAoJG5vZGUtPmdsb2IgYXMgJGdsb2IpIHsKICAgICAgICAkcGF0dGVybiA9IChzdHJpbmcpICRnbG9iWydwYXR0ZXJuJ107CiAgICAgICAgaWYgKCcqJyAhPSAkcGF0dGVyblswXSB8fCAnLicgIT0gJHBhdHRlcm5bMV0pIHsKICAgICAgICAgICAgY29udGludWU7CiAgICAgICAgfQoKICAgICAgICAkZXh0c1tdID0gc3Vic3RyKCRwYXR0ZXJuLCAyKTsKICAgIH0KCiAgICBpZiAoISRleHRzKSB7CiAgICAgICAgY29udGludWU7CiAgICB9CgogICAgJG10ID0gc3RydG9sb3dlcigoc3RyaW5nKSAkbm9kZVsndHlwZSddKTsKICAgICRuZXdbJG10XSA9IGFycmF5X21lcmdlKCRuZXdbJG10XSA/PyBbXSwgJGV4dHMpOwogICAgZm9yZWFjaCAoJG5vZGUtPmFsaWFzIGFzICRhbGlhcykgewogICAgICAgICRtdCA9IHN0cnRvbG93ZXIoKHN0cmluZykgJGFsaWFzWyd0eXBlJ10pOwogICAgICAgICRuZXdbJG10XSA9IGFycmF5X21lcmdlKCRuZXdbJG10XSA/PyBbXSwgJGV4dHMpOwogICAgfQp9CgovLyBsb2FkIGN1cnJlbnQgbWFwCiRkYXRhID0gZmlsZV9nZXRfY29udGVudHMoJG91dHB1dCA9IF9fRElSX18uJy8uLi8uLi9NaW1lVHlwZXMucGhwJyk7CiRjdXJyZW50ID0gW107CiRwcmUgPSAnJzsKJHBvc3QgPSAnJzsKZm9yZWFjaCAoZXhwbG9kZSgiXG4iLCAkZGF0YSkgYXMgJGxpbmUpIHsKICAgIGlmICghcHJlZ19tYXRjaCgie14gICAgICAgICcoW14nXSsvW14nXSspJyA9PiBcWycoLispJ1xdLCR9IiwgJGxpbmUsICRtYXRjaGVzKSkgewogICAgICAgIGlmICghJGN1cnJlbnQpIHsKICAgICAgICAgICAgJHByZSAuPSAkbGluZS4iXG4iOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICRwb3N0IC49ICRsaW5lLiJcbiI7CiAgICAgICAgfQogICAgICAgIGNvbnRpbnVlOwogICAgfQogICAgJGN1cnJlbnRbJG1hdGNoZXNbMV1dID0gZXhwbG9kZSgiJywgJyIsICRtYXRjaGVzWzJdKTsKfQoKJGRhdGEgPSAkcHJlOwoKLy8gcmV2ZXJzZSBtYXAKLy8gd2UgcHJlZmlsbCB0aGUgZXh0ZW5zaW9ucyB3aXRoIHNvbWUgcHJlZmVyZW5jZXMgZm9yIGNvbnRlbnQtdHlwZXMKJGV4dHMgPSBbCiAgICAnYXNpY2UnID0+IFsnYXBwbGljYXRpb24vdm5kLmV0c2kuYXNpYy1lK3ppcCddLAogICAgJ2J6MicgPT4gWydhcHBsaWNhdGlvbi94LWJ6MiddLAogICAgJ2NzdicgPT4gWyd0ZXh0L2NzdiddLAogICAgJ2VjbWEnID0+IFsnYXBwbGljYXRpb24vZWNtYXNjcmlwdCddLAogICAgJ2ZsdicgPT4gWyd2aWRlby94LWZsdiddLAogICAgJ2dpZicgPT4gWydpbWFnZS9naWYnXSwKICAgICdneicgPT4gWydhcHBsaWNhdGlvbi94LWd6aXAnXSwKICAgICdodG0nID0+IFsndGV4dC9odG1sJ10sCiAgICAnaHRtbCcgPT4gWyd0ZXh0L2h0bWwnXSwKICAgICdqYXInID0+IFsnYXBwbGljYXRpb24veC1qYXZhLWFyY2hpdmUnXSwKICAgICdqcGcnID0+IFsnaW1hZ2UvanBlZyddLAogICAgJ2pzJyA9PiBbJ3RleHQvamF2YXNjcmlwdCddLAogICAgJ2tleW5vdGUnID0+IFsnYXBwbGljYXRpb24vdm5kLmFwcGxlLmtleW5vdGUnXSwKICAgICdrZXknID0+IFsnYXBwbGljYXRpb24vdm5kLmFwcGxlLmtleW5vdGUnXSwKICAgICdtM3UnID0+IFsnYXVkaW8veC1tcGVndXJsJ10sCiAgICAnbTRhJyA9PiBbJ2F1ZGlvL21wNCddLAogICAgJ21kJyA9PiBbJ3RleHQvbWFya2Rvd24nLCAndGV4dC94LW1hcmtkb3duJ10sCiAgICAnbWRiJyA9PiBbJ2FwcGxpY2F0aW9uL3gtbXNhY2Nlc3MnXSwKICAgICdtaWQnID0+IFsnYXVkaW8vbWlkaSddLAogICAgJ21vdicgPT4gWyd2aWRlby9xdWlja3RpbWUnXSwKICAgICdtcDMnID0+IFsnYXVkaW8vbXBlZyddLAogICAgJ29nZycgPT4gWydhdWRpby9vZ2cnXSwKICAgICdwZGYnID0+IFsnYXBwbGljYXRpb24vcGRmJ10sCiAgICAncGhwJyA9PiBbJ2FwcGxpY2F0aW9uL3gtcGhwJ10sCiAgICAncHB0JyA9PiBbJ2FwcGxpY2F0aW9uL3ZuZC5tcy1wb3dlcnBvaW50J10sCiAgICAncmFyJyA9PiBbJ2FwcGxpY2F0aW9uL3gtcmFyLWNvbXByZXNzZWQnXSwKICAgICdocXgnID0+IFsnYXBwbGljYXRpb24vc3R1ZmZpdCddLAogICAgJ3NpdCcgPT4gWydhcHBsaWNhdGlvbi94LXN0dWZmaXQnLCAnYXBwbGljYXRpb24vc3R1ZmZpdCddLAogICAgJ3N2ZycgPT4gWydpbWFnZS9zdmcreG1sJ10sCiAgICAndGFyJyA9PiBbJ2FwcGxpY2F0aW9uL3gtdGFyJ10sCiAgICAndGlmJyA9PiBbJ2ltYWdlL3RpZmYnXSwKICAgICd0dGYnID0+IFsnYXBwbGljYXRpb24veC1mb250LXRydWV0eXBlJ10sCiAgICAndmNmJyA9PiBbJ3RleHQveC12Y2FyZCddLAogICAgJ3dhdicgPT4gWydhdWRpby93YXYnXSwKICAgICd3bWEnID0+IFsnYXVkaW8veC1tcy13bWEnXSwKICAgICd3bXYnID0+IFsnYXVkaW8veC1tcy13bXYnXSwKICAgICd4bHMnID0+IFsnYXBwbGljYXRpb24vdm5kLm1zLWV4Y2VsJ10sCiAgICAnemlwJyA9PiBbJ2FwcGxpY2F0aW9uL3ppcCddLApdOwoKLy8gd2UgbWVyZ2UgdGhlIDIgbWFwcyAod2UgbmV2ZXIgcmVtb3ZlIG9sZCBtaW1lIHR5cGVzKQokbWFwID0gYXJyYXlfcmVwbGFjZV9yZWN1cnNpdmUoJGN1cnJlbnQsICRuZXcpOwoKZm9yZWFjaCAoJGV4dHMgYXMgJGV4dCA9PiAkdHlwZXMpIHsKICAgIGZvcmVhY2ggKCR0eXBlcyBhcyAkbXQpIHsKICAgICAgICBpZiAoIWlzc2V0KCRtYXBbJG10XSkpIHsKICAgICAgICAgICAgJG1hcCArPSBbJG10ID0+IFskZXh0XV07CiAgICAgICAgfQogICAgfQp9Cmtzb3J0KCRtYXApOwoKZm9yZWFjaCAoJG1hcCBhcyAkbWltZVR5cGUgPT4gJGV4dGVuc2lvbnMpIHsKICAgIGZvcmVhY2ggKCRleHRzIGFzICRleHQgPT4gJHR5cGVzKSB7CiAgICAgICAgaWYgKGluX2FycmF5KCRtaW1lVHlwZSwgJHR5cGVzLCB0cnVlKSkgewogICAgICAgICAgICBhcnJheV91bnNoaWZ0KCRleHRlbnNpb25zLCAkZXh0KTsKICAgICAgICB9CiAgICB9CiAgICAkZGF0YSAuPSBzcHJpbnRmKCIgICAgICAgICclcycgPT4gWyclcyddLFxuIiwgJG1pbWVUeXBlLCBpbXBsb2RlKCInLCAnIiwgYXJyYXlfdW5pcXVlKCRleHRlbnNpb25zKSkpOwp9CiRkYXRhIC49ICRwb3N0OwoKZm9yZWFjaCAoJG1hcCBhcyAkbWltZVR5cGUgPT4gJGV4dGVuc2lvbnMpIHsKICAgIGZvcmVhY2ggKCRleHRlbnNpb25zIGFzICRleHRlbnNpb24pIHsKICAgICAgICBpZiAoJ2FwcGxpY2F0aW9uL29jdGV0LXN0cmVhbScgPT09ICRtaW1lVHlwZSAmJiAnYmluJyAhPT0gJGV4dGVuc2lvbikgewogICAgICAgICAgICBjb250aW51ZTsKICAgICAgICB9CgogICAgICAgICRleHRzWyRleHRlbnNpb25dW10gPSAkbWltZVR5cGU7CiAgICB9Cn0Ka3NvcnQoJGV4dHMpOwoKJHVwZGF0ZWQgPSAnJzsKJHN0YXRlID0gMDsKZm9yZWFjaCAoZXhwbG9kZSgiXG4iLCAkZGF0YSkgYXMgJGxpbmUpIHsKICAgIGlmICghcHJlZ19tYXRjaCgie14gICAgICAgICcoW14nL10rKScgPT4gXFsnKC4rKSdcXSwkfSIsICRsaW5lLCAkbWF0Y2hlcykpIHsKICAgICAgICBpZiAoMSA9PT0gJHN0YXRlKSB7CiAgICAgICAgICAgICRzdGF0ZSA9IDI7CiAgICAgICAgICAgIGZvcmVhY2ggKCRleHRzIGFzICRleHQgPT4gJG1pbWVUeXBlcykgewogICAgICAgICAgICAgICAgJHVwZGF0ZWQgLj0gc3ByaW50ZigiICAgICAgICAnJXMnID0+IFsnJXMnXSxcbiIsICRleHQsIGltcGxvZGUoIicsICciLCBhcnJheV91bmlxdWUoJG1pbWVUeXBlcykpKTsKICAgICAgICAgICAgfQogICAgICAgIH0KICAgICAgICAkdXBkYXRlZCAuPSAkbGluZS4iXG4iOwogICAgICAgIGNvbnRpbnVlOwogICAgfQogICAgJHN0YXRlID0gMTsKfQoKJHVwZGF0ZWQgPSBwcmVnX3JlcGxhY2UoJ3tVcGRhdGVkIGZyb20gdXBzdHJlYW0gb24gLis/XC59JywgJ1VwZGF0ZWQgZnJvbSB1cHN0cmVhbSBvbiAnLmRhdGUoJ1ktbS1kJyksICR1cGRhdGVkLCAtMSk7CgpmaWxlX3B1dF9jb250ZW50cygkb3V0cHV0LCBydHJpbSgkdXBkYXRlZCwgIlxuIikuIlxuIik7CgplY2hvICJEb25lLlxuIjsKIjtzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWVzcGFjZXMiO2E6MDp7fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAaW5jbHVkZXMiO2E6MDp7fXM6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAZnVuY3Rpb25zIjthOjA6e31zOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGNvbnN0YW50cyI7YTowOnt9czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBjbGFzc2VzIjthOjA6e31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGludGVyZmFjZXMiO2E6MDp7fXM6NDE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAdHJhaXRzIjthOjA6e31zOjQwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGVudW1zIjthOjA6e31zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG1ldGFkYXRhIjthOjA6e319";