1688216242
waR3U4bTeM%3Aa47334053782d0bcf18d0a745ce278f5-0ffbd6cd77dcd29a2a464e68510d55a4
s:3868:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxNDp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBkb2NCbG9jayI7TjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGhhc2giO3M6MzI6IjBmZmJkNmNkNzdkY2QyOWEyYTQ2NGU2ODUxMGQ1NWE0IjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWUiO3M6MzQ6ImV4dHJhY3QtdGVudGF0aXZlLXJldHVybi10eXBlcy5waHAiO3M6Mzk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAcGF0aCI7czo3NzoidmVuZG9yL3N5bWZvbnkvZXJyb3ItaGFuZGxlci9SZXNvdXJjZXMvYmluL2V4dHJhY3QtdGVudGF0aXZlLXJldHVybi10eXBlcy5waHAiO3M6NDE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAc291cmNlIjtzOjE5MjI6IiMhL3Vzci9iaW4vZW52IHBocAo8P3BocAoKLyoKICogVGhpcyBmaWxlIGlzIHBhcnQgb2YgdGhlIFN5bWZvbnkgcGFja2FnZS4KICoKICogKGMpIEZhYmllbiBQb3RlbmNpZXIgPGZhYmllbkBzeW1mb255LmNvbT4KICoKICogRm9yIHRoZSBmdWxsIGNvcHlyaWdodCBhbmQgbGljZW5zZSBpbmZvcm1hdGlvbiwgcGxlYXNlIHZpZXcgdGhlIExJQ0VOU0UKICogZmlsZSB0aGF0IHdhcyBkaXN0cmlidXRlZCB3aXRoIHRoaXMgc291cmNlIGNvZGUuCiAqLwoKLy8gUnVuIGZyb20gdGhlIHJvb3Qgb2YgdGhlIHBocC1zcmMgcmVwb3NpdG9yeSwgdGhpcyBzY3JpcHQgZ2VuZXJhdGVzCi8vIGEgdGFibGUgd2l0aCBhbGwgdGhlIG1ldGhvZHMgdGhhdCBoYXZlIGEgdGVudGF0aXZlIHJldHVybiB0eXBlLgovLwovLyBVc2FnZTogZmluZCAtbmFtZSAqLnN0dWIucGhwIHwgc29ydCB8IC9wYXRoL3RvL2V4dHJhY3QtdGVudGF0aXZlLXJldHVybi10eXBlcy5waHAgPiAvcGF0aC90by9UZW50YXRpdmVUeXBlcy5waHAKCmVjaG8gPDw8RU9QSFAKPD9waHAKCi8qCiAqIFRoaXMgZmlsZSBpcyBwYXJ0IG9mIHRoZSBTeW1mb255IHBhY2thZ2UuCiAqCiAqIChjKSBGYWJpZW4gUG90ZW5jaWVyIDxmYWJpZW5Ac3ltZm9ueS5jb20+CiAqCiAqIEZvciB0aGUgZnVsbCBjb3B5cmlnaHQgYW5kIGxpY2Vuc2UgaW5mb3JtYXRpb24sIHBsZWFzZSB2aWV3IHRoZSBMSUNFTlNFCiAqIGZpbGUgdGhhdCB3YXMgZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHNvdXJjZSBjb2RlLgogKi8KCm5hbWVzcGFjZSBTeW1mb255XENvbXBvbmVudFxFcnJvckhhbmRsZXJcSW50ZXJuYWw7CgovKioKICogVGhpcyBjbGFzcyBoYXMgYmVlbiBnZW5lcmF0ZWQgYnkgZXh0cmFjdC10ZW50YXRpdmUtcmV0dXJuLXR5cGVzLnBocC4KICoKICogQGludGVybmFsCiAqLwpjbGFzcyBUZW50YXRpdmVUeXBlcwp7CiAgICBwdWJsaWMgY29uc3QgUkVUVVJOX1RZUEVTID0gWwoKRU9QSFA7Cgp3aGlsZSAoZmFsc2UgIT09ICRmaWxlID0gZmdldHMoXFNURElOKSkgewogICAgJGNvZGUgPSBmaWxlX2dldF9jb250ZW50cyhzdWJzdHIoJGZpbGUsIDAsIC0xKSk7CgogICAgaWYgKCFzdHJfY29udGFpbnMoJGNvZGUsICdAdGVudGF0aXZlLXJldHVybi10eXBlJykpIHsKICAgICAgICBjb250aW51ZTsKICAgIH0KCiAgICAkY29kZSA9IHByZWdfc3BsaXQoJ3teXHMqKD86KD86YWJzdHJhY3QgKT9jbGFzc3xpbnRlcmZhY2V8dHJhaXQpIChbXlxzXSsrKX1tJywgJGNvZGUsIC0xLCBcUFJFR19TUExJVF9ERUxJTV9DQVBUVVJFKTsKCiAgICBpZiAoMSA9PT0gY291bnQoJGNvZGUpKSB7CiAgICAgICAgY29udGludWU7CiAgICB9CgogICAgZm9yICgkaSA9IDE7IG51bGwgIT09ICRjbGFzcyA9ICRjb2RlWyRpXSA/PyBudWxsOyAkaSArPSAyKSB7CiAgICAgICAgJG1ldGhvZHMgPSAkY29kZVsxICsgJGldOwoKICAgICAgICBpZiAoIXN0cl9jb250YWlucygkbWV0aG9kcywgJ0B0ZW50YXRpdmUtcmV0dXJuLXR5cGUnKSkgewogICAgICAgICAgICBjb250aW51ZTsKICAgICAgICB9CgogICAgICAgIGVjaG8gIiAgICAgICAgJyRjbGFzcycgPT4gW1xuIjsKCiAgICAgICAgcHJlZ19yZXBsYWNlX2NhbGxiYWNrKCd7QHRlbnRhdGl2ZS1yZXR1cm4tdHlwZS4qP1tcc11mdW5jdGlvbiAoW14oXSsrKVteKV0rK1wpXHMqKzpccyorKFteXG47XHtdKyspfXMnLCBmdW5jdGlvbiAoJG0pIHsKICAgICAgICAgICAgJG1bMl0gPSBzdHJfcmVwbGFjZSgnICcsICcnLCAkbVsyXSk7CiAgICAgICAgICAgIGVjaG8gIiAgICAgICAgICAgICckbVsxXScgPT4gJyRtWzJdJyxcbiI7CgogICAgICAgICAgICByZXR1cm4gJyc7CiAgICAgICAgfSwgJG1ldGhvZHMpOwoKICAgICAgICBlY2hvICIgICAgICAgIF0sXG4iOwogICAgfQp9CgplY2hvIDw8PEVPUEhQCiAgICBdOwp9CgpFT1BIUDsKIjtzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWVzcGFjZXMiO2E6MDp7fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAaW5jbHVkZXMiO2E6MDp7fXM6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAZnVuY3Rpb25zIjthOjA6e31zOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGNvbnN0YW50cyI7YTowOnt9czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBjbGFzc2VzIjthOjA6e31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGludGVyZmFjZXMiO2E6MDp7fXM6NDE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAdHJhaXRzIjthOjA6e31zOjQwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGVudW1zIjthOjA6e31zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG1ldGFkYXRhIjthOjA6e319";