1688216193
waR3U4bTeM%3A3161ae145c02ac157fe1d6ecf8309997-f94d71c22aa6dc211debb9904753539e
s:7360:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxNDp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBkb2NCbG9jayI7TjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGhhc2giO3M6MzI6ImY5NGQ3MWMyMmFhNmRjMjExZGViYjk5MDQ3NTM1MzllIjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWUiO3M6MjA6InRleHQtaW5wdXQuYmxhZGUucGhwIjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHBhdGgiO3M6Njk6InZlbmRvci9maWxhbWVudC9mb3Jtcy9yZXNvdXJjZXMvdmlld3MvY29tcG9uZW50cy90ZXh0LWlucHV0LmJsYWRlLnBocCI7czo0MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBzb3VyY2UiO3M6NDU2MToiQHBocAogICAgJGRhdGFsaXN0T3B0aW9ucyA9ICRnZXREYXRhbGlzdE9wdGlvbnMoKTsKCiAgICAkYWZmaXhMYWJlbENsYXNzZXMgPSBbCiAgICAgICAgJ3doaXRlc3BhY2Utbm93cmFwIGdyb3VwLWZvY3VzLXdpdGhpbjp0ZXh0LXByaW1hcnktNTAwJywKICAgICAgICAndGV4dC1ncmF5LTQwMCcgPT4gISAkZXJyb3JzLT5oYXMoJGdldFN0YXRlUGF0aCgpKSwKICAgICAgICAndGV4dC1kYW5nZXItNDAwJyA9PiAkZXJyb3JzLT5oYXMoJGdldFN0YXRlUGF0aCgpKSwKICAgIF07CkBlbmRwaHAKCjx4LWR5bmFtaWMtY29tcG9uZW50CiAgICA6Y29tcG9uZW50PSIkZ2V0RmllbGRXcmFwcGVyVmlldygpIgogICAgOmlkPSIkZ2V0SWQoKSIKICAgIDpsYWJlbD0iJGdldExhYmVsKCkiCiAgICA6bGFiZWwtc3Itb25seT0iJGlzTGFiZWxIaWRkZW4oKSIKICAgIDpoZWxwZXItdGV4dD0iJGdldEhlbHBlclRleHQoKSIKICAgIDpoaW50PSIkZ2V0SGludCgpIgogICAgOmhpbnQtaWNvbj0iJGdldEhpbnRJY29uKCkiCiAgICA6cmVxdWlyZWQ9IiRpc1JlcXVpcmVkKCkiCiAgICA6c3RhdGUtcGF0aD0iJGdldFN0YXRlUGF0aCgpIgo+CiAgICA8ZGl2IHt7ICRhdHRyaWJ1dGVzLT5tZXJnZSgkZ2V0RXh0cmFBdHRyaWJ1dGVzKCkpLT5jbGFzcyhbJ2ZsZXggaXRlbXMtY2VudGVyIHNwYWNlLXgtMiBydGw6c3BhY2UteC1yZXZlcnNlIGdyb3VwIGZpbGFtZW50LWZvcm1zLXRleHQtaW5wdXQtY29tcG9uZW50J10pIH19PgogICAgICAgIEBpZiAoKCRwcmVmaXhBY3Rpb24gPSAkZ2V0UHJlZml4QWN0aW9uKCkpICYmICghICRwcmVmaXhBY3Rpb24tPmlzSGlkZGVuKCkpKQogICAgICAgICAgICB7eyAkcHJlZml4QWN0aW9uIH19CiAgICAgICAgQGVuZGlmCgogICAgICAgIEBpZiAoJGljb24gPSAkZ2V0UHJlZml4SWNvbigpKQogICAgICAgICAgICA8eC1keW5hbWljLWNvbXBvbmVudCA6Y29tcG9uZW50PSIkaWNvbiIgY2xhc3M9InctNSBoLTUiIC8+CiAgICAgICAgQGVuZGlmCgogICAgICAgIEBpZiAoJGxhYmVsID0gJGdldFByZWZpeExhYmVsKCkpCiAgICAgICAgICAgIDxzcGFuIEBjbGFzcygkYWZmaXhMYWJlbENsYXNzZXMpPgogICAgICAgICAgICAgICAge3sgJGxhYmVsIH19CiAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICBAZW5kaWYKCiAgICAgICAgPGRpdiBjbGFzcz0iZmxleC0xIj4KICAgICAgICAgICAgPGlucHV0CiAgICAgICAgICAgICAgICBAdW5sZXNzICgkaGFzTWFzaygpKQogICAgICAgICAgICAgICAgICAgIHt7ICRhcHBseVN0YXRlQmluZGluZ01vZGlmaWVycygnd2lyZTptb2RlbCcpIH19PSJ7eyAkZ2V0U3RhdGVQYXRoKCkgfX0iCiAgICAgICAgICAgICAgICAgICAgdHlwZT0ie3sgJGdldFR5cGUoKSB9fSIKICAgICAgICAgICAgICAgIEBlbHNlCiAgICAgICAgICAgICAgICAgICAgeC1kYXRhPSJ0ZXh0SW5wdXRGb3JtQ29tcG9uZW50KHsKICAgICAgICAgICAgICAgICAgICAgICAge3sgJGhhc01hc2soKSA/ICJnZXRNYXNrT3B0aW9uc1VzaW5nOiAoSU1hc2spID0+ICh7JGdldEpzb25NYXNrQ29uZmlndXJhdGlvbigpfSksIiA6IG51bGwgfX0KICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGU6ICR3aXJlLnt7ICRhcHBseVN0YXRlQmluZGluZ01vZGlmaWVycygnZW50YW5nbGUoXCcnIC4gJGdldFN0YXRlUGF0aCgpIC4gJ1wnKScsIGV4Y2VwdDogJ2xhenknKSB9fSwKICAgICAgICAgICAgICAgICAgICB9KSIKICAgICAgICAgICAgICAgICAgICB0eXBlPSJ0ZXh0IgogICAgICAgICAgICAgICAgICAgIHdpcmU6aWdub3JlCiAgICAgICAgICAgICAgICAgICAgQGlmICgkaXNMYXp5KCkpIHgtb246Ymx1cj0iJHdpcmUuJHJlZnJlc2giIEBlbmRpZiAKICAgICAgICAgICAgICAgICAgICB7eyAkZ2V0RXh0cmFBbHBpbmVBdHRyaWJ1dGVCYWcoKSB9fQogICAgICAgICAgICAgICAgQGVuZHVubGVzcwogICAgICAgICAgICAgICAgZHVzaz0iZmlsYW1lbnQuZm9ybXMue3sgJGdldFN0YXRlUGF0aCgpIH19IgogICAgICAgICAgICAgICAgeyEhICgkYXV0b2NhcGl0YWxpemUgPSAkZ2V0QXV0b2NhcGl0YWxpemUoKSkgPyAiYXV0b2NhcGl0YWxpemU9XCJ7JGF1dG9jYXBpdGFsaXplfVwiIiA6IG51bGwgISF9CiAgICAgICAgICAgICAgICB7ISEgKCRhdXRvY29tcGxldGUgPSAkZ2V0QXV0b2NvbXBsZXRlKCkpID8gImF1dG9jb21wbGV0ZT1cInskYXV0b2NvbXBsZXRlfVwiIiA6IG51bGwgISF9CiAgICAgICAgICAgICAgICB7ISEgJGlzQXV0b2ZvY3VzZWQoKSA/ICdhdXRvZm9jdXMnIDogbnVsbCAhIX0KICAgICAgICAgICAgICAgIHshISAkaXNEaXNhYmxlZCgpID8gJ2Rpc2FibGVkJyA6IG51bGwgISF9CiAgICAgICAgICAgICAgICBpZD0ie3sgJGdldElkKCkgfX0iCiAgICAgICAgICAgICAgICB7ISEgKCRpbnB1dE1vZGUgPSAkZ2V0SW5wdXRNb2RlKCkpID8gImlucHV0bW9kZT1cInskaW5wdXRNb2RlfVwiIiA6IG51bGwgISF9CiAgICAgICAgICAgICAgICB7ISEgJGRhdGFsaXN0T3B0aW9ucyA/ICJsaXN0PVwieyRnZXRJZCgpfS1saXN0XCIiIDogbnVsbCAhIX0KICAgICAgICAgICAgICAgIHshISAoJHBsYWNlaG9sZGVyID0gJGdldFBsYWNlaG9sZGVyKCkpID8gInBsYWNlaG9sZGVyPVwieyRwbGFjZWhvbGRlcn1cIiIgOiBudWxsICEhfQogICAgICAgICAgICAgICAgeyEhICgkaW50ZXJ2YWwgPSAkZ2V0U3RlcCgpKSA/ICJzdGVwPVwieyRpbnRlcnZhbH1cIiIgOiBudWxsICEhfQogICAgICAgICAgICAgICAgQGlmICghICRpc0NvbmNlYWxlZCgpKQogICAgICAgICAgICAgICAgICAgIHshISBmaWxsZWQoJGxlbmd0aCA9ICRnZXRNYXhMZW5ndGgoKSkgPyAibWF4bGVuZ3RoPVwieyRsZW5ndGh9XCIiIDogbnVsbCAhIX0KICAgICAgICAgICAgICAgICAgICB7ISEgZmlsbGVkKCR2YWx1ZSA9ICRnZXRNYXhWYWx1ZSgpKSA/ICJtYXg9XCJ7JHZhbHVlfVwiIiA6IG51bGwgISF9CiAgICAgICAgICAgICAgICAgICAgeyEhIGZpbGxlZCgkbGVuZ3RoID0gJGdldE1pbkxlbmd0aCgpKSA/ICJtaW5sZW5ndGg9XCJ7JGxlbmd0aH1cIiIgOiBudWxsICEhfQogICAgICAgICAgICAgICAgICAgIHshISBmaWxsZWQoJHZhbHVlID0gJGdldE1pblZhbHVlKCkpID8gIm1pbj1cInskdmFsdWV9XCIiIDogbnVsbCAhIX0KICAgICAgICAgICAgICAgICAgICB7ISEgJGlzUmVxdWlyZWQoKSA/ICdyZXF1aXJlZCcgOiBudWxsICEhfQogICAgICAgICAgICAgICAgQGVuZGlmCiAgICAgICAgICAgICAgICB7eyAkZ2V0RXh0cmFJbnB1dEF0dHJpYnV0ZUJhZygpLT5jbGFzcyhbCiAgICAgICAgICAgICAgICAgICAgJ2Jsb2NrIHctZnVsbCB0cmFuc2l0aW9uIGR1cmF0aW9uLTc1IHJvdW5kZWQtbGcgc2hhZG93LXNtIGZvY3VzOmJvcmRlci1wcmltYXJ5LTYwMCBmb2N1czpyaW5nLTEgZm9jdXM6cmluZy1pbnNldCBmb2N1czpyaW5nLXByaW1hcnktNjAwIGRpc2FibGVkOm9wYWNpdHktNzAnLAogICAgICAgICAgICAgICAgICAgICdkYXJrOmJnLWdyYXktNzAwIGRhcms6dGV4dC13aGl0ZSBkYXJrOmZvY3VzOmJvcmRlci1wcmltYXJ5LTYwMCcgPT4gY29uZmlnKCdmb3Jtcy5kYXJrX21vZGUnKSwKICAgICAgICAgICAgICAgICAgICAnYm9yZGVyLWdyYXktMzAwJyA9PiAhICRlcnJvcnMtPmhhcygkZ2V0U3RhdGVQYXRoKCkpLAogICAgICAgICAgICAgICAgICAgICdkYXJrOmJvcmRlci1ncmF5LTYwMCcgPT4gKCEgJGVycm9ycy0+aGFzKCRnZXRTdGF0ZVBhdGgoKSkpICYmIGNvbmZpZygnZm9ybXMuZGFya19tb2RlJyksCiAgICAgICAgICAgICAgICAgICAgJ2JvcmRlci1kYW5nZXItNjAwIHJpbmctZGFuZ2VyLTYwMCcgPT4gJGVycm9ycy0+aGFzKCRnZXRTdGF0ZVBhdGgoKSksCiAgICAgICAgICAgICAgICBdKSB9fQogICAgICAgICAgICAvPgogICAgICAgIDwvZGl2PgoKICAgICAgICBAaWYgKCRsYWJlbCA9ICRnZXRTdWZmaXhMYWJlbCgpKQogICAgICAgICAgICA8c3BhbiBAY2xhc3MoJGFmZml4TGFiZWxDbGFzc2VzKT4KICAgICAgICAgICAgICAgIHt7ICRsYWJlbCB9fQogICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgQGVuZGlmCgogICAgICAgIEBpZiAoJGljb24gPSAkZ2V0U3VmZml4SWNvbigpKQogICAgICAgICAgICA8eC1keW5hbWljLWNvbXBvbmVudCA6Y29tcG9uZW50PSIkaWNvbiIgY2xhc3M9InctNSBoLTUiIC8+CiAgICAgICAgQGVuZGlmCgogICAgICAgIEBpZiAoKCRzdWZmaXhBY3Rpb24gPSAkZ2V0U3VmZml4QWN0aW9uKCkpICYmICghICRzdWZmaXhBY3Rpb24tPmlzSGlkZGVuKCkpKQogICAgICAgICAgICB7eyAkc3VmZml4QWN0aW9uIH19CiAgICAgICAgQGVuZGlmCiAgICA8L2Rpdj4KCiAgICBAaWYgKCRkYXRhbGlzdE9wdGlvbnMpCiAgICAgICAgPGRhdGFsaXN0IGlkPSJ7eyAkZ2V0SWQoKSB9fS1saXN0Ij4KICAgICAgICAgICAgQGZvcmVhY2ggKCRkYXRhbGlzdE9wdGlvbnMgYXMgJG9wdGlvbikKICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9Int7ICRvcHRpb24gfX0iIC8+CiAgICAgICAgICAgIEBlbmRmb3JlYWNoCiAgICAgICAgPC9kYXRhbGlzdD4KICAgIEBlbmRpZgo8L3gtZHluYW1pYy1jb21wb25lbnQ+CiI7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBuYW1lc3BhY2VzIjthOjA6e31zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGluY2x1ZGVzIjthOjA6e31zOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGZ1bmN0aW9ucyI7YTowOnt9czo0NDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBjb25zdGFudHMiO2E6MDp7fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAY2xhc3NlcyI7YTowOnt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBpbnRlcmZhY2VzIjthOjA6e31zOjQxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHRyYWl0cyI7YTowOnt9czo0MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBlbnVtcyI7YTowOnt9czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBtZXRhZGF0YSI7YTowOnt9fQ==";